{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PBE_25.2_8004","text":"<ul> <li> <p> PBE_25.2_8004_I</p> <p>Jo\u00e3o Arthur, Arthur Maurity, Guilherme, Patrick</p> <p> Reposit\u00f3rio</p> </li> <li> <p> PBE_25.2_8004_II</p> <p>Arthur Riess, Pedro Macedo, Yago Carvalho, Felipe Maia</p> <p> Reposit\u00f3rio</p> </li> <li> <p> PBE_25.2_8004_III</p> <p>Jo\u00e3o Victor, Jo\u00e3o Pedro, Jo\u00e3o Victor, Caique, Sarah Ferrari</p> <p> Reposit\u00f3rio</p> </li> <li> <p> PBE_25.2_8004_IV</p> <p>Victor Coutinho, Arthur Azeredo, Antonio Lima, Ricardo Fran\u00e7a</p> <p> Reposit\u00f3rio</p> </li> </ul>"},{"location":"AS/","title":"Desenvolvimento de API REST com Django + Metodologia RUP/UP","text":"<p>Tema: \"FitLife \u2014 Plataforma de Treinos e Bem-Estar\"</p> <p>Tempo de Avalia\u00e7\u00e3o: (3h 40min)</p>"},{"location":"AS/#fases-da-avaliacao","title":"Fases da Avalia\u00e7\u00e3o","text":""},{"location":"AS/#0-configuracao-inicial-30-minutos","title":"0. Configura\u00e7\u00e3o Inicial (30 minutos)","text":"<p>Objetivo: Preparar o ambiente de desenvolvimento, reposit\u00f3rio GitHub e documenta\u00e7\u00e3o online.</p>"},{"location":"AS/#atividades","title":"Atividades:","text":"<ul> <li> <p>Clonar o reposit\u00f3rio inicial fornecido pelo avaliador (reposit\u00f3rio start no GitHub).</p> <ul> <li>reposit\u00f3rio start - Convite enviado para ser um colaborador do reposit\u00f3rio.</li> </ul> </li> <li> <p>Configurar ambiente de desenvolvimento local:</p> <ul> <li>Python + Virtualenv</li> <li>Instala\u00e7\u00e3o das depend\u00eancias do projeto</li> </ul> </li> <li> <p>Criar um site de documenta\u00e7\u00e3o usando MkDocs 'mkdocs new .'</p> <ul> <li>P\u00e1gina inicial descrevendo o projeto.</li> <li>Publicar a documenta\u00e7\u00e3o no GitHub Pages 'mkdocs gh-deploy'</li> </ul> </li> <li> <p>Configurar o GitHub Project (Kanban):</p> <ul> <li>Colunas sugeridas: <code>Backlog</code>, <code>Em desenvolvimento</code>,  <code>Conclu\u00eddo</code>.</li> </ul> </li> <li> <p>Criar Issues no GitHub para cada tarefa relevante:</p> <ul> <li>Modelagem</li> <li>Implementa\u00e7\u00e3o de cada entidade (models, serializers, views)</li> <li>Configura\u00e7\u00e3o do Swagger</li> <li>Documenta\u00e7\u00e3o, etc.</li> </ul> </li> <li> <p>Associar cada Issue \u00e0s etapas no GitHub Projects.</p> </li> </ul>"},{"location":"AS/#entregaveis","title":"Entreg\u00e1veis:","text":"<ul> <li>Reposit\u00f3rio GitHub atualizado com Issues criadas.</li> <li>Site da documenta\u00e7\u00e3o (MkDocs via GitHub Pages).</li> <li>GitHub Projects com tarefas.</li> </ul>"},{"location":"AS/#1-concepcao-30-minutos","title":"1. Concep\u00e7\u00e3o (30 minutos)","text":"<p>Objetivo: Compreender o problema, definir requisitos e mapear os atores.</p>"},{"location":"AS/#atividades_1","title":"Atividades:","text":"<ul> <li>Descri\u00e7\u00e3o do problema (documentar no MkDocs).</li> <li>Lista de requisitos funcionais e n\u00e3o funcionais.</li> <li> <p>Atores principais:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Descri\u00e7\u00e3o textual de 3 casos de uso.</p> </li> <li>(Opcional) Diagrama de caso de uso.</li> </ul>"},{"location":"AS/#entregaveis_1","title":"Entreg\u00e1veis:","text":"<ul> <li>Documento no MkDocs: <code>docs/_Inicia\u00e7\u00e3o/5w2h.md</code>, <code>docs/_Inicia\u00e7\u00e3o/DesignThinking.md2</code>.</li> </ul>"},{"location":"AS/#2-elaboracao-50-minutos","title":"2. Elabora\u00e7\u00e3o (50 minutos)","text":"<p>Objetivo: Planejar o desenvolvimento, modelar dados e definir a arquitetura da API.</p>"},{"location":"AS/#atividades_2","title":"Atividades:","text":"<ul> <li>Diagrama de Classes (PlantUML).</li> <li>Definir principais endpoints da API.</li> <li> <p>Relacionamentos entre entidades:</p> <ul> <li>Usu\u00e1rio \u2192 Playlist</li> <li>Playlist \u2192 Treino \u2192 Exerc\u00edcios</li> </ul> </li> <li> <p>Documentar arquitetura no MkDocs.</p> </li> </ul>"},{"location":"AS/#entregaveis_2","title":"Entreg\u00e1veis:","text":"<ul> <li>Documento no MkDocs: <code>docs/__Elabora\u00e7\u00e3o/index.md</code>.</li> <li>Diagrama de classes. <code>docs/__Elabora\u00e7\u00e3o/Diagramas/Classes/diagrama_de_classes.md</code>.</li> </ul>"},{"location":"AS/#3-construcao-1-hora-e-40-minutos","title":"3. Constru\u00e7\u00e3o (1 hora e 40 minutos)","text":"<p>Objetivo: Implementar a API Django REST.</p>"},{"location":"AS/#atividades_3","title":"Atividades:","text":"<ul> <li>Criar models no Django.</li> <li>Criar serializers.</li> <li>Criar views e routers.</li> <li>Configurar Django Admin.</li> <li>Instalar e Documentar endpoints no Swagger.</li> <li>Comitar e referenciar as Issues no GitHub.</li> </ul>"},{"location":"AS/#entregaveis_3","title":"Entreg\u00e1veis:","text":"<ul> <li>C\u00f3digo no GitHub.</li> <li>Endpoints funcionando localmente.</li> <li>Documenta\u00e7\u00e3o Swagger gerada automaticamente.</li> </ul>"},{"location":"AS/#4-transicao-10-minutos","title":"4. Transi\u00e7\u00e3o (10 minutos)","text":"<p>Objetivo: Testar, documentar e preparar para entrega.</p>"},{"location":"AS/#atividades_4","title":"Atividades:","text":"<ul> <li>Testar todos os endpoints.</li> <li> <p>Atualizar documenta\u00e7\u00e3o no MkDocs:</p> <ul> <li>Guia de uso da API.</li> <li>Endpoints principais.</li> </ul> </li> <li> <p>Checklist de funcionalidades conclu\u00eddo.</p> </li> <li>Preparar README final no reposit\u00f3rio.</li> </ul>"},{"location":"AS/#entregaveis_4","title":"Entreg\u00e1veis:","text":"<ul> <li>Site MkDocs atualizado.</li> <li>C\u00f3digo no GitHub com README.</li> <li>Checklist preenchido.</li> </ul>"},{"location":"AS/#modelo-de-checklist-geral-de-entrega","title":"Modelo de Checklist Geral de Entrega","text":"Item Obrigat\u00f3rio Entregue Ambiente de desenvolvimento OK \u2714\ufe0f \u2b1c Clone do reposit\u00f3rio inicial \u2714\ufe0f \u2b1c GitHub Project configurado \u2714\ufe0f \u2b1c Issues criadas e usadas \u2714\ufe0f \u2b1c Site MkDocs publicado \u2714\ufe0f \u2b1c Descri\u00e7\u00e3o do problema \u2714\ufe0f \u2b1c Requisitos funcionais e n\u00e3o func. \u2714\ufe0f \u2b1c Casos de uso \u2714\ufe0f \u2b1c Diagrama de Classes \u2714\ufe0f \u2b1c Defini\u00e7\u00e3o dos endpoints \u2714\ufe0f \u2b1c Models implementados \u2714\ufe0f \u2b1c Serializers implementados \u2714\ufe0f \u2b1c Views e URLs \u2714\ufe0f \u2b1c Admin configurado \u2714\ufe0f \u2b1c Swagger funcionando \u2714\ufe0f \u2b1c README completo \u2714\ufe0f \u2b1c"},{"location":"Construcao/","title":"Constru\u00e7\u00e3o","text":"<p>Objetivo: Construir o sistema com base na arquitetura definida.</p>"},{"location":"Construcao/#principais-atividades","title":"Principais atividades","text":"<ul> <li> <p>Desenvolver os componentes e funcionalidades do sistema.</p> </li> <li> <p>Realizar testes de integra\u00e7\u00e3o e sistema.</p> </li> <li> <p>Itera\u00e7\u00f5es para entregar vers\u00f5es parciais e funcionais do software.</p> </li> <li> <p>Produto principal: Software em funcionamento, pronto para ser entregue.</p> </li> </ul>"},{"location":"Disciplina/ambiente/","title":"Ambiente de Desenvolvimento","text":""},{"location":"Disciplina/ambiente/#instalacao-softwares","title":"Instala\u00e7\u00e3o softwares","text":""},{"location":"Disciplina/ambiente/#python","title":"Python","text":"<p>No Microsoft Store, instale o Python mais atualizado ou fa\u00e7a o download do site python.org.</p> <p></p>"},{"location":"Disciplina/ambiente/#visual-studio-code","title":"Visual Studio Code","text":"<p>No Microsoft Store, instale ou baixe o Visual Studio Code mais atualizado.</p> <p></p>"},{"location":"Disciplina/ambiente/#baixar-e-instalar-o-git","title":"Baixar e instalar o Git","text":"<p>Fa\u00e7a o download da vers\u00e3o mais recente do Git para Windows:</p> <p>Git-2.46.0-64-bit.exe</p> <p></p>"},{"location":"Disciplina/ambiente/#caso-precise-adicionar-o-git-ao-path-do-windows","title":"Caso precise adicionar o Git ao Path do Windows","text":"<p>No Prompt de Comando, digite: <pre><code>rundll32 sysdm.cpl,EditEnvironmentVariables\n</code></pre> Adicione o caminho de instala\u00e7\u00e3o do Git na vari\u00e1vel <code>PATH</code>.</p> <p>Exemplo: <pre><code>C:\\Program Files\\Git\\cmd\n</code></pre></p>"},{"location":"Disciplina/ambiente/#configuracao-do-git","title":"Configura\u00e7\u00e3o do Git","text":"<p>Adicione suas credenciais no Git: <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"youremail@yourdomain.com\"\n</code></pre></p>"},{"location":"Disciplina/ambiente/#configurar-o-visual-studio-code","title":"Configurar o Visual Studio Code","text":""},{"location":"Disciplina/ambiente/#instalar-a-extensao-do-python","title":"Instalar a extens\u00e3o do Python","text":"<p>Abra o Visual Studio Code e instale a extens\u00e3o oficial do Python.</p> <p></p>"},{"location":"Disciplina/ambiente/#ambiente-virtual","title":"Ambiente Virtual","text":"<p>Agora vamos instalar o ambiente virtual, que permite isolar pastas (projetos) com vers\u00f5es espec\u00edficas.</p> <ol> <li>Aperte <code>Ctrl + Shift + P</code> e selecione Python: Create Environment....</li> <li>Ap\u00f3s a instala\u00e7\u00e3o, aparecer\u00e1 a pasta <code>.venv</code>.</li> </ol> <p></p> <p>Pasta Venv</p>"},{"location":"Disciplina/ambiente/#site-de-documentacao","title":"Site de Documenta\u00e7\u00e3o","text":"<p>Abra um Terminal para prosseguirmos com a instala\u00e7\u00e3o do MkDocs, uma ferramenta que cria sites de documenta\u00e7\u00e3o a partir de arquivos <code>.md</code> (Markdown).</p> <p>Terminal</p>"},{"location":"Disciplina/ambiente/#instalacao-do-mkdocs","title":"Instala\u00e7\u00e3o do MkDocs","text":"<pre><code>pip install mkdocs\n</code></pre> <p>Confirme que a instala\u00e7\u00e3o ocorreu com sucesso. Na pasta <code>[.venv\\Lib\\site-packages]</code>, voc\u00ea deve observar o pacote <code>mkdocs</code> entre outros dependentes.</p> <p></p>"},{"location":"Disciplina/ambiente/#criacao-do-projeto-mkdocs","title":"Cria\u00e7\u00e3o do Projeto MkDocs","text":"<p>Execute o comando abaixo para criar os arquivos de configura\u00e7\u00e3o: <pre><code>mkdocs new\n</code></pre></p> <p>Esse comando cria dois arquivos principais: - <code>mkdocs.yml</code> - <code>index.md</code></p> <p></p>"},{"location":"Disciplina/ambiente/#executar-o-servidor-mkdocs","title":"Executar o Servidor MkDocs","text":"<p>Para visualizar o site renderizado, execute: <pre><code>mkdocs serve\n</code></pre></p> <p>Abra o navegador e clique no link disponibilizado: <pre><code>http://127.0.0.1:8000/\n</code></pre></p> <p></p>"},{"location":"Disciplina/ambiente/#requirementstxt","title":"Requirements.txt","text":"<p>A cria\u00e7\u00e3o desse arquivo \u00e9 importante para facilitar o controle de bibliotecas instaladas no ambiente virtual <code>.venv</code>. Execute o comando: <pre><code>pip freeze &gt; requirements.txt\n</code></pre></p> <p>Isso evita que, em cada local de desenvolvimento, seja necess\u00e1rio instalar uma por uma das bibliotecas.</p>"},{"location":"Disciplina/ambiente/#repositorio-no-github","title":"Reposit\u00f3rio no GitHub","text":"<p>Para publicar o reposit\u00f3rio no GitHub, clique em Publish to GitHub na aba esquerda do VSCode.</p> <p>Desmarque a pasta <code>.venv</code> para que ela n\u00e3o seja enviada ao reposit\u00f3rio e clique em OK.</p> <p></p> <p>Ap\u00f3s a conclus\u00e3o, ser\u00e1 exibida uma mensagem de sucesso com o link para o reposit\u00f3rio.</p>"},{"location":"Disciplina/ambiente/#instalacao-remota-casa-trabalho-etc","title":"Instala\u00e7\u00e3o Remota (Casa, Trabalho, etc.)","text":"<p>Com esses passos realizados, j\u00e1 \u00e9 poss\u00edvel replicar esse ambiente em outro local.</p> <ol> <li>Verifique se o Python, VSCode e Git est\u00e3o instalados, de prefer\u00eancia na mesma vers\u00e3o.</li> <li>Clone o reposit\u00f3rio:    <pre><code>git clone https://github.com/jonh-carvalho/TutorialAmbiente.git\n</code></pre></li> <li>Aperte <code>Ctrl + Shift + P</code> e selecione Python: Create Environment, utilizando o arquivo <code>requirements.txt</code> para instalar todas as bibliotecas necess\u00e1rias.</li> </ol> <p></p> <p>Nota: Substitua os links das imagens pelos caminhos corretos na pasta <code>images/</code>.</p>"},{"location":"Disciplina/aulas/","title":"Aulas","text":"Aula Conte\u00fado 01 - 07/08/25\u00a0 \u00a0  Apresenta\u00e7\u00e3o da Disciplina - Processo de Desenvolvimento  \u00a0Processo de Desenvolvimento -Do Cascata ao \u00c1gil 02\u00a0- 14/08/25 Configura\u00e7\u00e3o de Ambiente de Desenvolvimento  Configura\u00e7\u00e3o reposit\u00f3rio 03\u00a0- 21/08/25 RUP 04\u00a0- 28/08/25 Design Thinking 05\u00a0- 04/09/25   Elabora\u00e7\u00e3o 5w2h   Brainstorm Mapa Mental Engenharia de Requisitos 06\u00a0- 11/09/25  Teste de Progresso 07\u00a0- 18/09/25 An\u00e1lise OO e UML  Diagrama de Casos de Uso  Classes 08\u00a0- 25/09/25  AP1 09\u00a0- 02/10/25 Roteiros POO e Django"},{"location":"Disciplina/avalia/","title":"Avalia\u00e7\u00f5es","text":""},{"location":"Disciplina/avalia/#principais-datas-de-entregas-de-projeto","title":"Principais Datas de Entregas de Projeto","text":"<ul> <li>AP1 - 25/09/2025</li> <li>AP2 - 19/11/2025</li> <li>AS  - 03/12/2025</li> <li>AC  - Ao longo do semestre atrav\u00e9s da realiza\u00e7\u00e3o das Issues descritas no reposit\u00f3rio da disciplina</li> </ul>"},{"location":"Disciplina/avalia/#avaliacao-continuada-ac","title":"Avalia\u00e7\u00e3o Continuada (AC)","text":"<ul> <li> <p>Crit\u00e9rios de avalia\u00e7\u00e3o</p> <ul> <li>Participa\u00e7\u00e3o</li> <li>Aus\u00eancias</li> <li>Pontualidade</li> <li>Trabalho em equipe monitorado via commits</li> <li>Trabalho em equipe monitorado via issues</li> <li>Trabalho em equipe monitorado via Github Projects</li> <li>Qualidade das contribui\u00e7\u00f5es</li> </ul> </li> </ul> <p>Esses crit\u00e9rios s\u00e3o considerados e aplicados a primeira parte do Projeto(Documenta\u00e7\u00e3o/AP1) e a segunda parte do Projeto(Documenta\u00e7\u00e3o e Desenvolvimento/AP2) resultando na m\u00e9dia final da AC.</p>"},{"location":"Disciplina/bibliografia/","title":"Bibliografia","text":"<ul> <li>AMBROSE, Gavin; HARRIS, Paul. Design thinking. (Design b\u00e1sico). Porto Alegre: Bookman, 2010. E-book. p.14. ISBN 9788577808267. Dispon\u00edvel em: https://app.minhabiblioteca.com.br/reader/books/9788577808267/. Acesso em: 12 mar. 2025.</li> </ul>"},{"location":"Disciplina/codespace/","title":"GitHub Codespaces","text":""},{"location":"Disciplina/codespace/#introducao-ao-github-codespaces","title":"Introdu\u00e7\u00e3o ao GitHub Codespaces","text":"<p>O GitHub Codespaces \u00e9 um ambiente de desenvolvimento na nuvem que permite codificar diretamente no seu navegador ou atrav\u00e9s do Visual Studio Code. Ele oferece uma m\u00e1quina virtual pr\u00e9-configurada com todas as ferramentas necess\u00e1rias para seu projeto.</p>"},{"location":"Disciplina/codespace/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"Disciplina/codespace/#1-acesso-ao-codespaces","title":"1. Acesso ao Codespaces","text":"<ul> <li>Via GitHub.com:</li> <li>Navegue at\u00e9 seu reposit\u00f3rio no GitHub</li> <li>Clique no bot\u00e3o \"Code\" e selecione a aba \"Codespaces\"</li> <li> <p>Clique em \"Create codespace on main\" (ou no branch desejado)</p> </li> <li> <p>Via Visual Studio Code:</p> </li> <li>Instale a extens\u00e3o \"GitHub Codespaces\" na marketplace do VS Code</li> <li>Fa\u00e7a login com sua conta GitHub</li> <li>Acesse a paleta de comandos (Ctrl+Shift+P ou Cmd+Shift+P) e digite \"Codespaces: Create New Codespace\"</li> </ul>"},{"location":"Disciplina/codespace/#2-configuracao-do-ambiente","title":"2. Configura\u00e7\u00e3o do Ambiente","text":"<ul> <li>O Codespace \u00e9 criado automaticamente com base no arquivo <code>.devcontainer.json</code> do seu reposit\u00f3rio</li> <li>Se n\u00e3o existir, um container padr\u00e3o ser\u00e1 usado</li> <li>Personalize o ambiente editando o arquivo <code>.devcontainer/devcontainer.json</code></li> </ul>"},{"location":"Disciplina/codespace/#uso-no-navegador-web","title":"Uso no Navegador Web","text":""},{"location":"Disciplina/codespace/#1-interface-principal","title":"1. Interface Principal","text":"<ul> <li>Editor de c\u00f3digo central</li> <li>Terminal integrado na parte inferior</li> <li>Barra lateral com explorador de arquivos, extens\u00f5es e outras ferramentas</li> </ul>"},{"location":"Disciplina/codespace/#2-funcionalidades-principais","title":"2. Funcionalidades Principais","text":"<ul> <li>Edi\u00e7\u00e3o de c\u00f3digo: Igual ao VS Code desktop</li> <li>Terminal: Acesso completo ao shell do container</li> <li>Portas: Exposi\u00e7\u00e3o autom\u00e1tica de portas para aplica\u00e7\u00f5es web</li> <li>Extens\u00f5es: Instala\u00e7\u00e3o de extens\u00f5es do VS Code Marketplace</li> </ul>"},{"location":"Disciplina/codespace/#3-gerenciamento-do-codespace","title":"3. Gerenciamento do Codespace","text":"<ul> <li>Pause/Resume: Ociosos s\u00e3o automaticamente pausados ap\u00f3s 30 minutos</li> <li>Configura\u00e7\u00f5es: Ajuste de m\u00e1quina (2 a 32 cores, at\u00e9 64GB RAM)</li> <li>Delete: Remova codespaces n\u00e3o utilizados para economizar recursos</li> </ul>"},{"location":"Disciplina/codespace/#uso-no-visual-studio-code-desktop","title":"Uso no Visual Studio Code Desktop","text":""},{"location":"Disciplina/codespace/#1-conexao-ao-codespace","title":"1. Conex\u00e3o ao Codespace","text":"<ul> <li>Abra a paleta de comandos (Ctrl+Shift+P)</li> <li>Digite \"Codespaces: Connect to Codespace\"</li> <li>Selecione o codespace desejado na lista</li> </ul>"},{"location":"Disciplina/codespace/#2-vantagens-sobre-a-versao-web","title":"2. Vantagens sobre a vers\u00e3o web","text":"<ul> <li>Melhor performance para projetos grandes</li> <li>Integra\u00e7\u00e3o mais profunda com o sistema operacional</li> <li>Acesso a todas as extens\u00f5es do VS Code</li> </ul>"},{"location":"Disciplina/codespace/#fluxo-de-trabalho-recomendado","title":"Fluxo de Trabalho Recomendado","text":"<ol> <li>Inicie seu codespace a partir do reposit\u00f3rio GitHub</li> <li>Desenvolva como faria localmente</li> <li>Fa\u00e7a commit das altera\u00e7\u00f5es diretamente para o branch</li> <li>Pause/Delete quando n\u00e3o estiver em uso para economizar recursos</li> <li>Recupere seu ambiente exatamente como estava na pr\u00f3xima sess\u00e3o</li> </ol>"},{"location":"Disciplina/codespace/#dicas-avancadas","title":"Dicas Avan\u00e7adas","text":""},{"location":"Disciplina/codespace/#1-configuracao-personalizada","title":"1. Configura\u00e7\u00e3o Personalizada","text":"<ul> <li>Use <code>devcontainer.json</code> para:</li> <li>Especificar extens\u00f5es obrigat\u00f3rias</li> <li>Configurar vari\u00e1veis de ambiente</li> <li>Definir comandos p\u00f3s-cria\u00e7\u00e3o</li> </ul>"},{"location":"Disciplina/codespace/#2-pre-build-de-codespaces","title":"2. Pr\u00e9-build de Codespaces","text":"<ul> <li>Configure pr\u00e9-builds para reduzir tempo de inicializa\u00e7\u00e3o</li> <li>Dispon\u00edvel para organiza\u00e7\u00f5es GitHub</li> </ul>"},{"location":"Disciplina/codespace/#3-integracao-com-github-actions","title":"3. Integra\u00e7\u00e3o com GitHub Actions","text":"<ul> <li>Automatize testes e builds diretamente no seu fluxo Codespace</li> </ul>"},{"location":"Disciplina/codespace/#solucao-de-problemas-comuns","title":"Solu\u00e7\u00e3o de Problemas Comuns","text":"<ul> <li>Conex\u00e3o lenta: Mude a regi\u00e3o do codespace nas configura\u00e7\u00f5es</li> <li>Problemas de extens\u00e3o: Algumas extens\u00f5es podem n\u00e3o funcionar em ambientes remotos</li> <li>Timeout: Configure o tempo de inatividade nas configura\u00e7\u00f5es</li> </ul>"},{"location":"Disciplina/codespace/#conclusao","title":"Conclus\u00e3o","text":"<p>O GitHub Codespaces oferece um ambiente de desenvolvimento completo acess\u00edvel de qualquer lugar, eliminando problemas de configura\u00e7\u00e3o de ambiente e permitindo focar no c\u00f3digo.</p>"},{"location":"Disciplina/github/","title":"Versionamento","text":"<p>Git e GitHub \u2013 controle de vers\u00e3o para iniciantes</p> <p>S\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes.</p> <p>Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub.</p> <p>Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita.</p> <p>Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista.</p> <p>Pr\u00e9-requisitos</p> <p>Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte:</p> <ul> <li>Uma interface de linha de comando, um terminal.</li> <li>Um editor de texto de sua escolha (usarei o VS Code).</li> <li>Uma conta no GitHub.</li> </ul>"},{"location":"Disciplina/github/#o-que-e-git","title":"O que \u00e9 Git?","text":"<p>O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original.</p> <p>Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior.</p> <p>Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original.</p> <p>Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil.</p>"},{"location":"Disciplina/github/#como-instalar-o-git","title":"Como instalar o Git","text":"<p>Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial. Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas.</p> <p>Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral.</p>"},{"location":"Disciplina/github/#como-configurar-o-git","title":"Como configurar o Git","text":"<p>Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC.</p> <p>A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos.</p> <p>Para definir seu nome de usu\u00e1rio, digite e execute estes comandos:</p> <pre><code>gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"**\n\ngitconfig --global user.email \"SEU_E-MAIL\"**.\n</code></pre> <p>Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais.</p>"},{"location":"Disciplina/github/#como-criar-e-inicializar-um-projeto-no-git","title":"Como criar e inicializar um projeto no Git","text":"<p>Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto.</p> <p>Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos:</p> <pre><code>cd desktop\ncd git and github tutorial\n</code></pre> <p>Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui.</p> <p>Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto.</p> <p>Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. </p> <p>A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** **</p> <p>Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git.</p>"},{"location":"Disciplina/github/#arquivos-de-projeto-no-git","title":"Arquivos de projeto no Git","text":"<p>Criamos apenas um arquivo chamado todo.md. Essa \u00e9 a apar\u00eancia do arquivo:</p> <p>MINHA LISTA DE TAREFAS</p> <ol> <li>Escrever um artigo.</li> <li>Programar.</li> <li>Estudar pelos livros.</li> <li>Chegar nas aulas a tempo.</li> <li>Visitar minha tia.</li> <li>Me candidatar a trabalhos remotos.</li> </ol>"},{"location":"Disciplina/github/#adicionar-e-confirmar-arquivos","title":"Adicionar e confirmar arquivos","text":"<p>Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado pelo Git.</p> <ul> <li>Estado preparado (staged)</li> </ul> <p>Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o.</p> <ul> <li>Estado confirmado (committed)</li> </ul> <p>Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub).</p> <ul> <li>Estado modificado (modified)</li> </ul> <p>Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado.</p> <p>Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo.</p> <p>Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica.</p>"},{"location":"Disciplina/github/#como-adicionar-arquivos-ao-git","title":"Como adicionar arquivos ao Git","text":"<p>Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando git add . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use git add about.txt.</p> <pre><code>git add .\n</code></pre> <p>Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status.</p> <pre><code>git status\n</code></pre>"},{"location":"Disciplina/github/#como-confirmar-commit-arquivos-no-git","title":"Como confirmar (commit) arquivos no Git","text":"<p>O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando git commit -m \"first commit\"</p> <pre><code>git commit -m \"first commit\"\n</code></pre> <p>A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\", \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser).</p> <p>Agora, nosso arquivo est\u00e1 no estado confirmado.</p> <p>Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo.</p> <p>Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados.</p> <p>Vou adicionar uma nova tarefa \u00e0 lista de tarefas:</p> <p>MINHA LISTA DE TAREFAS</p> <ol> <li>Escrever um artigo.</li> <li>Programar.</li> <li>Estudar pelos livros.</li> <li>Chegar nas aulas a tempo.</li> <li> <p>Visitar minha tia.</p> </li> <li> <p>Me candidatar a trabalhos remotos.</p> </li> <li>Praticar programa\u00e7\u00e3o</li> </ol> <p>Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:</p> <pre><code>git status\n</code></pre> <pre><code>Changes not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   /todo.md.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre> <p>Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o.  O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo.</p> <p>Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo.</p> <p>Primeiro, adicionamos o arquivo usando git add ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando git commit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\")</p> <pre><code>git add .\ngit commit -m \"added new task\"\n</code></pre>"},{"location":"Disciplina/github/#como-usar-branches-no-git","title":"**Como usar branches no Git **","text":"<p>Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente.</p> <p>Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas.</p> <p>Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar.</p> <pre><code>git checkout -b test\n</code></pre> <p>O checkout diz ao Git que deve mudar para um outro branch. O -b diz ao Git para criar esse outro branch. test \u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter:</p> <pre><code>Switched to a new branch 'test'\n</code></pre> <p>Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1:</p> <p>Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch.</p> <p>MINHA LISTA DE TAREFAS</p> <ol> <li>Escrever um artigo.</li> <li>Programar.</li> <li>Estudar pelos livros.</li> <li>Chegar nas aulas a tempo.</li> <li>Visitar minha tia.</li> <li>Me candidatar a trabalhos remotos.</li> <li>Praticar programa\u00e7\u00e3o</li> <li>Completar a tarefa de est\u00e1gio.</li> <li>Praticar aberturas do xadrez.</li> <li>Resolver quebra-cabe\u00e7asdo** xadrez</li> <li>Verificar o cronograma dos testes.</li> </ol> <p>Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branch main, voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o.</p> <p>Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem.</p> <p>Depois de confirmar seu branch test, volte para o branch main executando este comando: git checkout main.</p> <pre><code>git checkout main\n</code></pre> <p>Voc\u00ea notou que n\u00e3o adicionamos o -b? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando git branch</p> <p>Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branch test no branch main executando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branch test refletidas no branch main. </p> <pre><code>git merge test\n</code></pre>"},{"location":"Disciplina/github/#o-que-e-o-github","title":"O que \u00e9 o GitHub?","text":"<p>O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias.</p> <p>Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub.</p> <p>Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local.</p> <p>Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub.</p> <p>Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem.</p>"},{"location":"Disciplina/github/#como-enviar-um-repositorio-para-o-github","title":"Como enviar um reposit\u00f3rio para o Github**","text":"<p>Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza.</p> <p>Passo 1 \u2013 Crie uma conta no GitHub</p> <pre><code>Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub.\n</code></pre> <p>Passo 2 \u2013 Crie um reposit\u00f3rio</p> <pre><code>Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\"  (Criar reposit\u00f3rio).\n</code></pre> <p>Passo 3 \u2013 Envie o reposit\u00f3rio para o GitHub</p> <p>Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente.</p> <p>No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos:</p> <pre><code>git remote add origin https://github.com/ihechikara/git-and-github-tutorial.git\ngit branch -M main\ngit push -u origin main\n</code></pre> <p>O primeiro comando, git remote add origin https://github.com/ihechikara/git-and-github-tutorial.git, cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.</p> <p>O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet.</p> <p>O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.</p> <p>O \u00faltimo comando, git push -u origin main, envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. </p> <p>Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles.</p>"},{"location":"Disciplina/github/#como-enviar-um-repositorio-existente-a-partir-da-linha-de-comando","title":"Como enviar um reposit\u00f3rio existente a partir da linha de comando","text":"<p>Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest, mude para ele usando git checkout test e execute o comando git push -u origin test**</p>"},{"location":"Disciplina/github/#como-extrair-um-repositorio-no-git","title":"**Como extrair um reposit\u00f3rio no Git **","text":"<p>Fazer pull no Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line.</p> <p>Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd.. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.</p> <p>V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS.</p> <p>Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial.</p>"},{"location":"Disciplina/github/#conclusao","title":"Conclus\u00e3o","text":"<p>Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub.</p> <p>Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando.</p> <p>Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** **</p>"},{"location":"Disciplina/github/#links","title":"Links","text":"<ul> <li>Git - guia pr\u00e1tico</li> </ul> <p>https://rogerdudler.github.io/git-guide/index.pt_BR.html</p> <ul> <li>Fast-version-control</li> </ul> <p>https://git-scm.com/book/pt-br/v2</p> <ul> <li>Interactive, Visual Git</li> </ul> <p>https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive</p> <ul> <li>LearnGitBranching!</li> </ul> <p>https://learngitbranching.js.org/?locale=pt_BR</p> <ul> <li>UnderstandingGitthroughimages</li> </ul> <p>https://dev.to/nopenoshishi/understanding-git-through-images-4an1</p> <ul> <li>A Visual GitReference</li> </ul> <p>https://marklodato.github.io/visual-git-guide/index-en.html</p> <ul> <li>A Grip OnGit</li> </ul> <p>https://agripongit.vincenttunru.com/</p> <ul> <li>Visualizing Git Concepts with D3</li> </ul> <p>https://onlywei.github.io/explain-git-with-d3/#rebase</p> <ul> <li>Como criar um reposit\u00f3rio</li> </ul> <p>Setting up a repository</p>"},{"location":"Disciplina/grupos/","title":"Grupos","text":"<p>grupo I</p> <p>Jo\u00e3o Arthur Arthur Maurity Guilherme Patrick</p> <p>grupo  II</p> <p>Arthur Riess Pedro Macedo Yago Carvalho Felipe Maia</p> <p>grupo III</p> <p>Jo\u00e3o Victor Jo\u00e3o Pedro Jo\u00e3o Victor Caique Sarah Ferrari</p> <p>grupo IV</p> <p>Victor Coutinho Arthur Azeredo Antonio Lima Ricardo Fran\u00e7a</p>"},{"location":"Disciplina/issues_projects/","title":"Issues e Projects","text":""},{"location":"Disciplina/issues_projects/#uso-de-issues-e-template-de-iterative-development-project-no-github","title":"Uso de Issues e Template de Iterative Development Project no GitHub","text":""},{"location":"Disciplina/issues_projects/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<ul> <li> <p>Objetivo da sess\u00e3o: Apresentar como usar Issues e o template Iterative Development Project no GitHub para organizar, planejar e acompanhar o progresso de um projeto.</p> </li> <li> <p>P\u00fablico-alvo: Desenvolvedores, gerentes de projeto, equipes \u00e1geis e qualquer pessoa interessada em colabora\u00e7\u00e3o e gest\u00e3o de projetos no GitHub.</p> </li> <li> <p>Pr\u00e9-requisitos: </p> <ul> <li>Conta no GitHub.</li> <li>No\u00e7\u00f5es b\u00e1sicas de Git e GitHub.</li> <li>Um reposit\u00f3rio existente (ou cria\u00e7\u00e3o de um novo).</li> </ul> </li> </ul>"},{"location":"Disciplina/issues_projects/#2-o-que-sao-issues-no-github","title":"2. O que s\u00e3o Issues no GitHub?","text":"<ul> <li> <p>Defini\u00e7\u00e3o: As Issues s\u00e3o ferramentas usadas para rastrear tarefas, bugs, melhorias ou qualquer outro tipo de trabalho relacionado ao projeto.</p> </li> <li> <p>Benef\u00edcios:</p> <ul> <li>Centralizam discuss\u00f5es e decis\u00f5es.</li> <li>Permitem atribui\u00e7\u00e3o de responsabilidades.</li> <li>Facilitam o acompanhamento do progresso.</li> </ul> </li> <li> <p>Exemplos de uso:</p> <ul> <li>Relatar bugs.</li> <li>Solicitar novas funcionalidades.</li> <li>Planejar tarefas de desenvolvimento.</li> </ul> </li> </ul>"},{"location":"Disciplina/issues_projects/#3-criando-e-gerenciando-issues","title":"3. Criando e Gerenciando Issues","text":"<ol> <li> <p>Criar uma Issue:</p> <ul> <li>Acesse o reposit\u00f3rio no GitHub.</li> <li>Clique em Issues &gt; New Issue.</li> <li>Preencha o t\u00edtulo e descri\u00e7\u00e3o da tarefa.</li> <li>Adicione etiquetas (labels) para categorizar (ex.: bug, enhancement, documentation).</li> <li>Atribua a issue a um membro da equipe.</li> <li>Defina um milestone (marco) se necess\u00e1rio.</li> </ul> </li> <li> <p>Colaborando em Issues:</p> <ul> <li>Comente na issue para discutir detalhes.</li> <li>Use \"@\" para mencionar colegas.</li> <li>Feche a issue quando a tarefa for conclu\u00edda.</li> </ul> </li> <li> <p>Boas pr\u00e1ticas:</p> <ul> <li>Seja claro e espec\u00edfico ao descrever a issue.</li> <li>Divida grandes tarefas em issues menores.</li> <li>Use templates para padronizar a cria\u00e7\u00e3o de issues.</li> </ul> </li> </ol>"},{"location":"Disciplina/issues_projects/#4-o-que-e-o-template-de-iterative-development-project","title":"4. O que \u00e9 o Template de Iterative Development Project?","text":"<ul> <li>Defini\u00e7\u00e3o: O Iterative Development Project \u00e9 um template pr\u00e9-configurado no GitHub que ajuda equipes a organizar o trabalho em ciclos iterativos (sprints). Ele inclui recursos para planejar, acompanhar e revisar entregas incrementais.</li> <li>Diferen\u00e7a entre Iterative Development Project e Kanban:</li> <li>Enquanto o Kanban \u00e9 visual e baseado em colunas, o Iterative Development Project \u00e9 mais focado em itera\u00e7\u00f5es e milestones.</li> <li>Ele utiliza issues, milestones e tabelas para organizar o trabalho.</li> </ul>"},{"location":"Disciplina/issues_projects/#5-criando-um-projeto-com-o-template-de-iterative-development","title":"5. Criando um Projeto com o Template de Iterative Development","text":"<ol> <li> <p>Acessar o Template:</p> <ul> <li>No GitHub, v\u00e1 para a aba Projects.</li> <li>Clique em New Project.</li> <li>Escolha o template \"Basic iterative development workflow\".</li> </ul> </li> <li> <p>Configura\u00e7\u00e3o Inicial:</p> <ul> <li>D\u00ea um nome ao projeto (ex.: \"Sprint 1\").</li> <li> <p>Configure as etapas iniciais:</p> <ul> <li>Backlog: Lista de tarefas pendentes.</li> <li>Current Iteration: Tarefas da itera\u00e7\u00e3o atual.</li> <li>Completed: Tarefas conclu\u00eddas.</li> </ul> </li> </ul> </li> <li> <p>Adicionar Issues ao Projeto:</p> <ul> <li>Arraste issues existentes para o backlog.</li> <li>Crie novas issues diretamente no projeto.</li> <li>Atribua as issues \u00e0 itera\u00e7\u00e3o atual conforme necess\u00e1rio.</li> </ul> </li> </ol>"},{"location":"Disciplina/issues_projects/#6-trabalhando-com-iteracoes","title":"6. Trabalhando com Itera\u00e7\u00f5es","text":"<ul> <li>O que s\u00e3o Itera\u00e7\u00f5es?</li> <li> <p>Itera\u00e7\u00f5es s\u00e3o ciclos de trabalho curtos (ex.: sprints) que ajudam a dividir o projeto em entregas incrementais.</p> </li> <li> <p>Como configurar Itera\u00e7\u00f5es:</p> </li> <li>No projeto, clique em Settings &gt; Iterations.</li> <li>Crie novas itera\u00e7\u00f5es com datas de in\u00edcio e t\u00e9rmino.</li> <li> <p>Associe issues a uma itera\u00e7\u00e3o espec\u00edfica.</p> </li> <li> <p>Monitorando o Progresso:</p> </li> <li>Use gr\u00e1ficos de burndown para acompanhar o progresso da itera\u00e7\u00e3o.</li> <li>Revise as issues conclu\u00eddas e ajuste o backlog para a pr\u00f3xima itera\u00e7\u00e3o.</li> </ul>"},{"location":"Disciplina/issues_projects/#7-exemplo-pratico-criando-um-projeto-iterativo","title":"7. Exemplo Pr\u00e1tico: Criando um Projeto Iterativo","text":"<ol> <li> <p>Cen\u00e1rio: Sua equipe precisa desenvolver um site simples com as seguintes funcionalidades:</p> <ul> <li>P\u00e1gina inicial.</li> <li>P\u00e1gina de contato.</li> <li>Blog b\u00e1sico.</li> </ul> </li> <li> <p>Passo a passo:</p> <ul> <li>Crie um reposit\u00f3rio no GitHub.</li> <li>Crie issues para cada funcionalidade (ex.: \"Desenvolver p\u00e1gina inicial\").</li> <li>Configure um projeto iterativo usando o template Iterative Development Project.</li> <li>Adicione as issues ao backlog do projeto.</li> <li>Configure uma itera\u00e7\u00e3o de 1 semana para concluir a p\u00e1gina inicial.</li> </ul> </li> <li> <p>Execu\u00e7\u00e3o:</p> <ul> <li>Movimente as issues do backlog para a itera\u00e7\u00e3o atual.</li> <li>Finalize a itera\u00e7\u00e3o e revise os resultados.</li> </ul> </li> </ol>"},{"location":"Disciplina/issues_projects/#8-boas-praticas-para-usar-issues-e-iterative-development-project","title":"8. Boas Pr\u00e1ticas para Usar Issues e Iterative Development Project","text":"<ul> <li> <p>Para Issues:</p> <ul> <li>Mantenha as descri\u00e7\u00f5es claras e concisas.</li> <li>Use templates para padroniza\u00e7\u00e3o.</li> <li>Priorize as issues com base no impacto.</li> </ul> </li> <li> <p>Para Projetos Iterativos:</p> <ul> <li>Limite o n\u00famero de issues em progresso simultaneamente.</li> <li>Re\u00fana a equipe regularmente para revisar o backlog e a itera\u00e7\u00e3o atual.</li> <li>Use automa\u00e7\u00f5es (ex.: mover issues automaticamente ao fechar um pull request).</li> </ul> </li> </ul>"},{"location":"Disciplina/issues_projects/#9-conclusao","title":"9. Conclus\u00e3o","text":"<ul> <li> <p>Recapitulando:</p> <ul> <li>Issues s\u00e3o usadas para rastrear tarefas individuais.</li> <li>O template Iterative Development Project organiza as issues em ciclos iterativos.</li> <li>Itera\u00e7\u00f5es ajudam a dividir o projeto em entregas incrementais.</li> </ul> </li> <li> <p>Pr\u00f3ximos passos:</p> <ul> <li>Experimente criar seu pr\u00f3prio projeto iterativo.</li> <li>Explore recursos avan\u00e7ados, como automa\u00e7\u00f5es e integra\u00e7\u00f5es com ferramentas externas.</li> </ul> </li> </ul>"},{"location":"Disciplina/issues_projects/#10-recursos-adicionais","title":"10. Recursos Adicionais","text":"<ul> <li> <p>Documenta\u00e7\u00e3o oficial do GitHub:</p> <ul> <li>GitHub Issues</li> <li>GitHub Projects</li> <li>Tutoriais e v\u00eddeos no YouTube sobre GitHub Projects.</li> <li>Ferramentas complementares: ZenHub, Trello, Jira.</li> </ul> </li> </ul>"},{"location":"Disciplina/mkdocs/","title":"MkDocs","text":""},{"location":"Disciplina/mkdocs/#commands","title":"Commands","text":"<p>*<code>mkdocs new [dir-name]</code> - Create a new project.</p> <p>*<code>mkdocs serve</code> - Start the live-reloading docs server.</p> <p>*<code>mkdocs build</code> - Build the documentation site.</p> <p>*<code>mkdocs -h</code> - Print help message and exit.</p> <p>*mkdocs gh-deploy - Deploy site on github.</p>"},{"location":"Disciplina/mkdocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\n\ndocs/\n\nindex.md  # The documentation homepage.\n\n...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/","title":"Introdu\u00e7\u00e3o ao SQLite:","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#seu-primeiro-banco-de-dados","title":"Seu Primeiro Banco de Dados","text":"<p>O que \u00e9 SQLite?</p> <p>SQLite \u00e9 um sistema gerenciador de banco de dados relacional, leve e embutido. Isso significa que ele n\u00e3o requer um servidor separado para funcionar e pode ser integrado diretamente a um aplicativo. Ele \u00e9 amplamente utilizado em dispositivos m\u00f3veis, aplicativos desktop e at\u00e9 mesmo em sistemas embarcados.</p> <p>Por que usar SQLite?</p> <ul> <li>Simplicidade: F\u00e1cil de aprender e usar, especialmente para iniciantes em bancos de dados.</li> <li>Leveza: N\u00e3o exige um servidor dedicado, economizando recursos.</li> <li>Velocidade: Muito r\u00e1pido para pequenas a m\u00e9dias bases de dados.</li> <li>Portabilidade: Funciona em praticamente todas as plataformas.</li> <li>Transacional: Garante a integridade dos dados atrav\u00e9s de transa\u00e7\u00f5es.</li> </ul> <p>Conceitos B\u00e1sicos:</p> <ul> <li>Banco de dados: Uma cole\u00e7\u00e3o organizada de dados.</li> <li>Tabela: Uma estrutura dentro do banco de dados que armazena dados em linhas (registros) e colunas (campos).</li> <li>Registro: Uma linha em uma tabela, representando um conjunto de dados relacionados.</li> <li>Campo: Uma coluna em uma tabela, representando um tipo espec\u00edfico de dado (texto, n\u00famero, data, etc.).</li> <li>Chave prim\u00e1ria: Um campo ou conjunto de campos que identifica de forma \u00fanica cada registro em uma tabela.</li> <li>SQL (Structured Query Language): A linguagem padr\u00e3o para interagir com bancos de dados relacionais, incluindo o SQLite.</li> </ul> <p>Criando seu primeiro banco de dados SQLite:</p> <p>1. Escolha uma ferramenta: Voc\u00ea pode usar um editor de texto para criar arquivos SQLite (com extens\u00e3o .db) ou uma ferramenta gr\u00e1fica como o SQLite Studio.</p> <p>2. Conecte-se ao banco de dados: Se estiver usando uma ferramenta gr\u00e1fica, voc\u00ea precisar\u00e1 indicar o caminho para o seu arquivo SQLite.</p> <p>3. Crie uma tabela: Use a linguagem SQL para definir a estrutura da tabela, especificando o nome da tabela e os campos que ela conter\u00e1. Por exemplo:</p> <pre><code>CREATE TABLE pessoas (\n    id INTEGER PRIMARY KEY,\n    nome TEXT,\n    idade INTEGER\n);\n</code></pre> <p>4. Insira dados: Use a instru\u00e7\u00e3o INSERT para adicionar registros \u00e0 tabela. Por exemplo:</p> <pre><code>INSERT INTO pessoas (nome, idade)\nVALUES ('Jo\u00e3o', 30);\n</code></pre> <p>5. Consulte dados: Use a instru\u00e7\u00e3o SELECT para recuperar dados da tabela. Por exemplo:</p> <pre><code>SELECT * FROM pessoas;\n</code></pre> <p>Exemplo pr\u00e1tico em Python:</p> <pre><code>import sqlite3\n\n# Conectando ao banco de dados\nconn = sqlite3.connect('meu_banco.db')\n\n# Criando um cursor para executar comandos SQL\ncursor = conn.cursor()\n\n# Criando a tabela (se n\u00e3o existir)\ncursor.execute('''\n    CREATE TABLE IF NOT EXISTS produtos (\n        id INTEGER PRIMARY KEY,\n        nome TEXT,\n        preco REAL\n    )\n''')\n\n# Inserindo dados\ncursor.execute(\"INSERT INTO produtos (nome, preco) VALUES ('Celular', 1500)\")\n\n# Consultando dados\ncursor.execute(\"SELECT * FROM produtos\")\nfor row in cursor:\n    print(row)\n\n# Fechando a conex\u00e3o\nconn.close()\n</code></pre> <p>Recursos adicionais:</p> <ul> <li>Documenta\u00e7\u00e3o oficial: https://www.sqlite.org/</li> <li>Tutoriais online: Existem diversos tutoriais gratuitos e pagos dispon\u00edveis na internet.</li> <li>Ferramentas gr\u00e1ficas: SQLite Studio, DB Browser for SQLite, etc.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#planejando-um-banco-de-dados-um-guia-completo","title":"Planejando um Banco de Dados: Um Guia Completo","text":"<p>Planejamento \u00e9 a chave para um banco de dados eficiente e escal\u00e1vel. Ao criar um banco de dados, \u00e9 fundamental ter uma vis\u00e3o clara de como os dados ser\u00e3o armazenados, como ser\u00e3o acessados e como o banco de dados ir\u00e1 evoluir ao longo do tempo.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#etapas-do-planejamento","title":"Etapas do Planejamento","text":"<p>1. Defini\u00e7\u00e3o dos Requisitos:</p> <ul> <li>Quais dados ser\u00e3o armazenados? Identifique todos os tipos de dados que ser\u00e3o armazenados no banco de dados (nomes, endere\u00e7os, datas, etc.).</li> <li>Quem vai usar o banco de dados? Determine os usu\u00e1rios e suas necessidades espec\u00edficas.</li> <li>Como os dados ser\u00e3o utilizados? Quais tipos de consultas ser\u00e3o realizadas? Quais relat\u00f3rios ser\u00e3o gerados?</li> <li>Quais s\u00e3o as restri\u00e7\u00f5es de seguran\u00e7a? Quais dados precisam ser protegidos e como?</li> </ul> <p>2. Modelagem de Dados:</p> <ul> <li>Entidades e Atributos: Identifique as entidades (tabelas) e seus atributos (colunas).</li> <li>Relacionamentos: Defina como as entidades se relacionam entre si (um para um, um para muitos, muitos para muitos).</li> <li>Diagramas de Entidade-Relacionamento (ER): Crie diagramas ER para visualizar a estrutura do banco de dados.</li> </ul> <p>3. Normaliza\u00e7\u00e3o:</p> <ul> <li>Primeira Forma Normal (1FN): Cada c\u00e9lula deve conter apenas um valor at\u00f4mico.</li> <li>Segunda Forma Normal (2FN): Cada atributo n\u00e3o chave deve depender de toda a chave prim\u00e1ria.</li> <li>Terceira Forma Normal (3FN): Nenhum atributo n\u00e3o chave deve depender de outro atributo n\u00e3o chave.</li> <li>Formas Normais Superiores: Dependendo da complexidade do banco de dados, pode ser necess\u00e1rio aplicar formas normais superiores.</li> </ul> <p>4. Escolha do Sistema de Gerenciamento de Banco de Dados (SGBD):</p> <ul> <li>SQLite: Ideal para pequenos projetos e aplicativos m\u00f3veis.</li> <li>MySQL: Popular para aplica\u00e7\u00f5es web de m\u00e9dio porte.</li> <li>PostgreSQL: Conhecido por sua robustez e flexibilidade.</li> <li>SQL Server: Oferece recursos avan\u00e7ados e integra\u00e7\u00e3o com outras ferramentas da Microsoft.</li> <li>Oracle: Um dos SGBDs mais poderosos e escal\u00e1veis, mas tamb\u00e9m um dos mais complexos.</li> </ul> <p>5. Otimiza\u00e7\u00e3o de Desempenho:</p> <ul> <li>\u00cdndices: Crie \u00edndices para acelerar as consultas.</li> <li>Consultas Otimizadas: Escreva consultas eficientes para evitar gargalos de desempenho.</li> <li>Partitioning: Divida grandes tabelas em parti\u00e7\u00f5es menores para melhorar o desempenho de consultas.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#exemplo-pratico-banco-de-dados-para-uma-biblioteca","title":"Exemplo Pr\u00e1tico: Banco de Dados para uma Biblioteca","text":"<p>Entidades:</p> <ul> <li>Livros (id, t\u00edtulo, autor, ISBN, data_publica\u00e7\u00e3o)</li> <li>Autores (id, nome, nacionalidade)</li> <li>Empr\u00e9stimos (id, livro_id, usu\u00e1rio_id, data_emprestimo, data_devolu\u00e7\u00e3o)</li> <li>Usu\u00e1rios (id, nome, email, telefone)</li> </ul> <p>Relacionamentos:</p> <ul> <li>Um livro pode ter um ou mais autores (um para muitos).</li> <li>Um autor pode ter escrito v\u00e1rios livros (um para muitos).</li> <li>Um usu\u00e1rio pode emprestar v\u00e1rios livros (um para muitos).</li> <li>Um livro pode ser emprestado por v\u00e1rios usu\u00e1rios (um para muitos).</li> </ul> <p>Diagrama ER: [Insira aqui um diagrama ER representando as entidades e relacionamentos descritos]</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#ferramentas-para-modelagem-de-dados","title":"Ferramentas para Modelagem de Dados","text":"<ul> <li>Diagramas ER: Draw.io, Lucidchart, Microsoft Visio</li> <li>Ferramentas de modelagem de banco de dados: ERwin Data Modeler, MySQL Workbench, SQL Developer</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#consideracoes-adicionais","title":"Considera\u00e7\u00f5es Adicionais","text":"<ul> <li>Escalabilidade: Planeje o banco de dados para que ele possa crescer conforme a sua aplica\u00e7\u00e3o.</li> <li>Seguran\u00e7a: Implemente medidas de seguran\u00e7a para proteger os dados, como autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o e criptografia.</li> <li>Backup: Realize backups regulares do banco de dados para evitar perdas de dados.</li> <li>Manuten\u00e7\u00e3o: Agende tarefas de manuten\u00e7\u00e3o, como otimiza\u00e7\u00e3o e limpeza do banco de dados.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#preparando-o-projeto-conceitual-e-logico-para-uma-biblioteca","title":"Preparando o Projeto Conceitual e L\u00f3gico para uma Biblioteca","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#1-projeto-conceitual-entendendo-as-necessidades","title":"1. Projeto Conceitual: Entendendo as Necessidades","text":"<p>O projeto conceitual define a vis\u00e3o geral do sistema, identificando as entidades, seus atributos e os relacionamentos entre elas. Para uma biblioteca, podemos considerar as seguintes entidades e atributos:</p> <ul> <li>Livros: ID, t\u00edtulo, autor(es), ISBN, editora, ano de publica\u00e7\u00e3o, g\u00eanero, quantidade em estoque, localiza\u00e7\u00e3o na biblioteca.</li> <li>Autores: ID, nome, nacionalidade, data de nascimento, data de falecimento.</li> <li>Usu\u00e1rios: ID, nome, endere\u00e7o, telefone, email, data de cadastro, tipo de usu\u00e1rio (aluno, professor, funcion\u00e1rio, etc.).</li> <li>Empr\u00e9stimos: ID, livro_id, usu\u00e1rio_id, data_emprestimo, data_devolu\u00e7\u00e3o_prevista, data_devolu\u00e7\u00e3o_real.</li> <li>Reservas: ID, livro_id, usu\u00e1rio_id, data_reserva.</li> <li>Categorias: ID, nome (fic\u00e7\u00e3o, n\u00e3o-fic\u00e7\u00e3o, infantil, etc.).</li> </ul> <p>Relacionamentos:</p> <ul> <li>Um livro pode ter v\u00e1rios autores (um para muitos).</li> <li>Um autor pode escrever v\u00e1rios livros (um para muitos).</li> <li>Um livro pode pertencer a uma ou mais categorias (muitos para muitos).</li> <li>Um usu\u00e1rio pode fazer v\u00e1rios empr\u00e9stimos (um para muitos).</li> <li>Um livro pode ser emprestado por v\u00e1rios usu\u00e1rios (um para muitos).</li> <li>Um usu\u00e1rio pode fazer v\u00e1rias reservas (um para muitos).</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#2-projeto-logico-modelando-o-banco-de-dados","title":"2. Projeto L\u00f3gico: Modelando o Banco de Dados","text":"<p>O projeto l\u00f3gico traduz o projeto conceitual em uma estrutura de banco de dados. Para isso, utilizaremos um diagrama entidade-relacionamento (DER) e definiremos as tabelas e seus campos.</p> <p>Diagrama ER Simplificado:</p> <p>[Insira aqui um diagrama ER representando as entidades e relacionamentos descritos acima]</p> <p>Tabelas e Campos:</p> <ul> <li>livros: id (chave prim\u00e1ria), titulo, isbn, ano_publicacao, genero, quantidade_estoque, localizacao</li> <li>autores: id (chave prim\u00e1ria), nome, nacionalidade, data_nascimento, data_falecimento</li> <li>usuarios: id (chave prim\u00e1ria), nome, endereco, telefone, email, data_cadastro, tipo_usuario</li> <li>emprestimos: id (chave prim\u00e1ria), livro_id (chave estrangeira para livros), usuario_id (chave estrangeira para usuarios), data_emprestimo, data_devolucao_prevista, data_devolucao_real</li> <li>reservas: id (chave prim\u00e1ria), livro_id (chave estrangeira para livros), usuario_id (chave estrangeira para usuarios), data_reserva</li> <li>categorias: id (chave prim\u00e1ria), nome</li> <li>livros_categorias: id (chave prim\u00e1ria), livro_id (chave estrangeira para livros), categoria_id (chave estrangeira para categorias) - Tabela para relacionar muitos para muitos entre livros e categorias</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#3-consideracoes-adicionais","title":"3. Considera\u00e7\u00f5es Adicionais","text":"<ul> <li>Normaliza\u00e7\u00e3o: \u00c9 importante garantir que o banco de dados esteja normalizado para evitar redund\u00e2ncias e inconsist\u00eancias.</li> <li>\u00cdndices: Crie \u00edndices para campos que ser\u00e3o frequentemente utilizados em consultas (por exemplo, t\u00edtulo, autor, ISBN).</li> <li>Seguran\u00e7a: Implemente mecanismos de seguran\u00e7a para proteger os dados, como autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o.</li> <li>Desempenho: Otimize as consultas e o banco de dados para garantir um bom desempenho.</li> <li>Escalabilidade: Planeje o banco de dados para que ele possa crescer conforme a necessidade.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#4-proximos-passos","title":"4. Pr\u00f3ximos Passos","text":"<ul> <li>Detalhamento do Projeto: Refinar o modelo de dados, incluindo detalhes como tipos de dados, tamanhos de campos e restri\u00e7\u00f5es.</li> <li>Implementa\u00e7\u00e3o: Criar o banco de dados utilizando um SGBD (SQLite, MySQL, PostgreSQL, etc.) e as linguagens de consulta SQL.</li> <li>Desenvolvimento da Aplica\u00e7\u00e3o: Desenvolver a aplica\u00e7\u00e3o que interage com o banco de dados, permitindo a inser\u00e7\u00e3o, atualiza\u00e7\u00e3o e consulta de dados.</li> </ul> <p>Ainda poder\u00edamo discutir sobre:</p> <ul> <li>Normaliza\u00e7\u00e3o: Como garantir que o banco de dados esteja na forma normal?</li> <li>\u00cdndices: Quais \u00edndices criar e como otimiz\u00e1-los?</li> <li>Seguran\u00e7a: Quais medidas de seguran\u00e7a implementar?</li> <li>Desempenho: Como otimizar o desempenho do banco de dados?</li> <li>Escolhendo um SGBD: Qual SGBD \u00e9 mais adequado para uma biblioteca?</li> <li>Linguagens de programa\u00e7\u00e3o: Quais linguagens s\u00e3o mais utilizadas para desenvolver aplica\u00e7\u00f5es que interagem com bancos de dados?</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#criando-um-diagrama-de-classes-para-uma-biblioteca-usando-plantuml","title":"Criando um Diagrama de Classes para uma Biblioteca usando PlantUML","text":"<p>Excelente escolha! PlantUML \u00e9 uma ferramenta poderosa para criar diagramas UML de forma simples e r\u00e1pida. Vamos criar um diagrama de classes para a nossa biblioteca, baseado no modelo de dados que j\u00e1 desenvolvemos.</p> <p>Entendendo o Diagrama de Classes:</p> <p>Um diagrama de classes em UML representa as classes de um sistema, seus atributos e m\u00e9todos, al\u00e9m das rela\u00e7\u00f5es entre elas. No contexto de um banco de dados, cada tabela pode ser considerada uma classe, e os campos das tabelas correspondem aos atributos.</p> <p>Criando o Diagrama em PlantUML:</p> <pre>ccfd057ceda4559c4ca89e406c19b2866162091323972673b95224ee275ad63e326602580f19713ca48ad18921e1ad3ea61ba3345b62449cfce5ae05c99789f4</pre><pre>2606bbe819042ded64befc7ba764805a40980d0d8bf610373ec49f9e2d7c02110578dc4c55da27b67ca0bfb47fc43001e6ee7df39d65fd7aa070aebaad383128</pre> <p>Explicando o C\u00f3digo:</p> <ul> <li>Classes: Cada classe representa uma tabela do banco de dados.</li> <li>Atributos: Os atributos dentro das classes correspondem aos campos das tabelas.</li> <li>Relacionamentos: As linhas entre as classes representam os relacionamentos.</li> <li>Multiplicidade: Os n\u00fameros ao lado das linhas indicam a quantidade de objetos que podem participar de um relacionamento (1 para um, 1 para muitos, muitos para muitos).</li> </ul> <p>Personalizando o Diagrama:</p> <ul> <li>Mais detalhes: Voc\u00ea pode adicionar mais atributos e m\u00e9todos \u00e0s classes, conforme necess\u00e1rio.</li> <li>Heran\u00e7a: Se houver classes que herdam de outras, utilize a nota\u00e7\u00e3o de heran\u00e7a.</li> <li>Agrega\u00e7\u00e3o e composi\u00e7\u00e3o: Utilize as nota\u00e7\u00f5es adequadas para representar diferentes tipos de associa\u00e7\u00e3o entre classes.</li> <li>Interfaces: Se houver interfaces, defina-as e mostre a implementa\u00e7\u00e3o por classes.</li> </ul> <p>Visualizando o Diagrama:</p> <p>Voc\u00ea pode visualizar o diagrama de v\u00e1rias maneiras:</p> <ul> <li>Online: Utilize ferramentas online como PlantText (https://planttext.com/) para colar o c\u00f3digo e ver o resultado.</li> <li>Ferramentas de modelagem: Utilize ferramentas como Visual Studio Code, IntelliJ IDEA ou outras que suportem PlantUML para criar e visualizar diagramas.</li> </ul> <p>Exemplo Visual:</p> <p>[Insira aqui a imagem gerada pelo PlantUML]</p> <p>Pr\u00f3ximos Passos:</p> <ul> <li>Refine o diagrama: Adicione mais detalhes e ajuste os relacionamentos conforme necess\u00e1rio.</li> <li>Documente o diagrama: Crie uma documenta\u00e7\u00e3o explicando o significado de cada classe, atributo e relacionamento.</li> <li>Utilize o diagrama: Use o diagrama como refer\u00eancia para desenvolver a aplica\u00e7\u00e3o e o banco de dados.</li> </ul> <p>Dicas:</p> <ul> <li>Utilize um editor de c\u00f3digo: Um editor de c\u00f3digo com suporte a PlantUML facilitar\u00e1 a cria\u00e7\u00e3o e edi\u00e7\u00e3o dos diagramas.</li> <li>Explore as funcionalidades do PlantUML: A ferramenta oferece diversas op\u00e7\u00f5es de personaliza\u00e7\u00e3o, como cores, fontes e estilos.</li> <li>Crie diagramas espec\u00edficos: Voc\u00ea pode criar diagramas para diferentes partes do sistema, como diagramas de sequ\u00eancia para representar o fluxo de controle.</li> </ul> <p>Com este diagrama de classes, voc\u00ea ter\u00e1 uma vis\u00e3o clara da estrutura do seu sistema e poder\u00e1 utiliz\u00e1-lo como guia para o desenvolvimento da sua aplica\u00e7\u00e3o.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/BD/sqlite/#detalhamento-do-modelo-de-dados-para-uma-biblioteca-em-sqlite","title":"Detalhamento do Modelo de Dados para uma Biblioteca em SQLite","text":"<p>Entendendo os Tipos de Dados no SQLite:</p> <p>O SQLite oferece uma variedade de tipos de dados, mas os mais comuns para um banco de dados de biblioteca s\u00e3o:</p> <ul> <li>INTEGER: N\u00fameros inteiros.</li> <li>REAL: N\u00fameros de ponto flutuante.</li> <li>TEXT: Texto de tamanho vari\u00e1vel.</li> <li>BLOB: Dados bin\u00e1rios.</li> <li>DATE: Data no formato YYYY-MM-DD.</li> </ul> <p>Definindo os Campos e seus Tipos:</p> <pre><code>CREATE TABLE livros (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    titulo TEXT,\n    autor TEXT,\n    isbn TEXT,\n    editora TEXT,\n    ano_publicacao INTEGER,\n    genero TEXT,\n    quantidade_estoque INTEGER,\n    localizacao TEXT\n);\n\nCREATE TABLE autores (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nome TEXT,\n    nacionalidade TEXT,\n    data_nascimento DATE,\n    data_falecimento DATE\n);\n\nCREATE TABLE usuarios (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nome TEXT,\n    endereco TEXT,\n    telefone TEXT,\n    email TEXT,\n    data_cadastro DATE,\n    tipo_usuario TEXT\n);\n\nCREATE TABLE emprestimos (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    livro_id INTEGER,\n    usuario_id INTEGER,\n    data_emprestimo DATE,\n    data_devolucao_prevista DATE,\n    data_devolucao_real DATE,\n    FOREIGN KEY(livro_id) REFERENCES livros(id),\n    FOREIGN KEY(usuario_id) REFERENCES usuarios(id)\n);\n\nCREATE TABLE reservas (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    livro_id INTEGER,\n    usuario_id INTEGER,\n    data_reserva DATE,\n    FOREIGN KEY(livro_id) REFERENCES livros(id),\n    FOREIGN KEY(usuario_id) REFERENCES usuarios(id)\n);\n\nCREATE TABLE categorias (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nome TEXT\n);\n\nCREATE TABLE livros_categorias (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    livro_id INTEGER,\n    categoria_id INTEGER,\n    FOREIGN KEY(livro_id) REFERENCES livros(id),\n    FOREIGN KEY(categoria_id) REFERENCES categorias(id)\n);\n</code></pre> <p>Justificativa dos Tipos de Dados:</p> <ul> <li>INTEGER: Ideal para IDs, anos de publica\u00e7\u00e3o e quantidade em estoque.</li> <li>TEXT: Utilizado para campos que armazenam texto, como t\u00edtulo, autor, g\u00eanero, etc.</li> <li>DATE: Armazena datas no formato YYYY-MM-DD.</li> <li>AUTOINCREMENT: Incrementa automaticamente o valor do ID a cada nova inser\u00e7\u00e3o.</li> </ul> <p>Restri\u00e7\u00f5es Adicionais:</p> <ul> <li>UNIQUE: Garante que um valor seja \u00fanico em uma coluna (ex: ISBN).</li> <li>NOT NULL: Impede que um campo seja nulo (ex: t\u00edtulo, autor).</li> <li>CHECK: Imp\u00f5e uma condi\u00e7\u00e3o que deve ser verdadeira para cada linha (ex: quantidade_estoque &gt;= 0).</li> </ul> <p>Exemplo com Restri\u00e7\u00f5es:</p> <pre><code>CREATE TABLE livros (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    isbn TEXT UNIQUE NOT NULL,\n    ...\n    CHECK (quantidade_estoque &gt;= 0)\n);\n</code></pre> <p>Considera\u00e7\u00f5es Adicionais:</p> <ul> <li>Tamanho dos campos: O SQLite ajusta automaticamente o tamanho dos campos de texto, mas \u00e9 poss\u00edvel definir um tamanho m\u00e1ximo se necess\u00e1rio.</li> <li>\u00cdndices: Crie \u00edndices em campos que ser\u00e3o frequentemente utilizados em consultas (ex: t\u00edtulo, autor, ISBN).</li> <li>Normaliza\u00e7\u00e3o: Verifique se o modelo est\u00e1 normalizado para evitar redund\u00e2ncias.</li> <li>Otimiza\u00e7\u00e3o: Avalie a necessidade de criar triggers ou views para realizar opera\u00e7\u00f5es complexas.</li> </ul> <p>Pr\u00f3ximos Passos:</p> <ul> <li>Popular o banco de dados: Inserir dados nas tabelas.</li> <li>Desenvolver a aplica\u00e7\u00e3o: Criar uma interface para interagir com o banco de dados.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/","title":"Roteiro: Criando um Dashboard de Censo Demogr\u00e1fico com Streamlit","text":"<p>Este roteiro explica passo a passo como criar um dashboard interativo para an\u00e1lise de dados demogr\u00e1ficos utilizando o Streamlit, uma biblioteca Python para constru\u00e7\u00e3o r\u00e1pida de aplica\u00e7\u00f5es web de dados.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#1-instalacao-das-bibliotecas","title":"1. Instala\u00e7\u00e3o das Bibliotecas","text":"<p>Antes de come\u00e7ar, instale as bibliotecas necess\u00e1rias:</p> <pre><code>pip install streamlit pandas numpy matplotlib\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#2-estrutura-do-projeto","title":"2. Estrutura do Projeto","text":"<ul> <li><code>dashmock.md</code> (este roteiro)</li> <li><code>dashboard.py</code> (c\u00f3digo do dashboard)</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#3-importacao-das-bibliotecas","title":"3. Importa\u00e7\u00e3o das Bibliotecas","text":"<p>No in\u00edcio do seu script, importe as bibliotecas essenciais:</p> <pre><code>import streamlit as st\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#4-configuracao-da-pagina","title":"4. Configura\u00e7\u00e3o da P\u00e1gina","text":"<p>Configure o layout e o t\u00edtulo da p\u00e1gina do Streamlit:</p> <pre><code>st.set_page_config(layout=\"wide\", page_title=\"Dashboard Censo Demogr\u00e1fico\")\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#5-geracao-dos-dados-ficticios","title":"5. Gera\u00e7\u00e3o dos Dados Fict\u00edcios","text":"<p>Crie uma fun\u00e7\u00e3o para gerar dados simulados do censo, incluindo domic\u00edlios e moradores, com caracter\u00edsticas como UF, munic\u00edpio, sexo, cor/ra\u00e7a, idade, renda, abastecimento de \u00e1gua, esgoto e lixo.</p> <ul> <li>Utilize dicion\u00e1rios para mapear c\u00f3digos para descri\u00e7\u00f5es.</li> <li>Gere dados aleat\u00f3rios para cada domic\u00edlio e seus moradores.</li> <li>Junte os dados em um DataFrame do Pandas.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#6-carregamento-dos-dados","title":"6. Carregamento dos Dados","text":"<p>No in\u00edcio da execu\u00e7\u00e3o, gere ou carregue os dados. Em um cen\u00e1rio real, voc\u00ea pode ler de um CSV ou banco de dados. Aqui, usamos dados fict\u00edcios:</p> <pre><code>if 'df_censo' not in st.session_state:\n    st.session_state.df_censo = gerar_dados_ficticios(num_domicilios=5000, num_max_moradores_por_domicilio=6)\ndf = st.session_state.df_censo\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#7-barra-lateral-de-filtros","title":"7. Barra Lateral de Filtros","text":"<p>Implemente filtros interativos na barra lateral para permitir ao usu\u00e1rio selecionar:</p> <ul> <li>UF (Estado)</li> <li>Munic\u00edpio (dependente da UF)</li> <li>Sexo</li> <li>Cor/Ra\u00e7a</li> <li>Faixa Et\u00e1ria</li> <li>Esp\u00e9cie de Domic\u00edlio</li> <li>Faixa de Rendimento</li> </ul> <p>Cada filtro refina os dados exibidos no painel principal.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#8-painel-principal","title":"8. Painel Principal","text":"<p>Exiba os principais indicadores e gr\u00e1ficos:</p> <ul> <li>Indicadores Chave (KPIs): Total de moradores e domic\u00edlios filtrados.</li> <li>Gr\u00e1ficos de Distribui\u00e7\u00e3o: Por sexo, cor/ra\u00e7a, abastecimento de \u00e1gua, destino do lixo e faixa de rendimento.</li> <li>Alfabetiza\u00e7\u00e3o: Percentual de pessoas com 5 anos ou mais que sabem ler e escrever.</li> </ul> <p>Utilize <code>matplotlib</code> para criar gr\u00e1ficos e <code>st.pyplot</code> para exibi-los no Streamlit.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#9-exibicao-de-amostras-dos-dados","title":"9. Exibi\u00e7\u00e3o de Amostras dos Dados","text":"<p>Inclua a op\u00e7\u00e3o de mostrar uma amostra dos dados filtrados para inspe\u00e7\u00e3o detalhada.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#10-informacoes-finais","title":"10. Informa\u00e7\u00f5es Finais","text":"<p>Adicione mensagens informativas na barra lateral para explicar o prop\u00f3sito do dashboard e lembrar que os dados s\u00e3o fict\u00edcios.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#11-execucao-do-dashboard","title":"11. Execu\u00e7\u00e3o do Dashboard","text":"<p>Para rodar o dashboard, execute no terminal:</p> <pre><code>streamlit run dashboard.py\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/dashmock/#12-dicas-finais","title":"12. Dicas Finais","text":"<ul> <li>Adapte os filtros e gr\u00e1ficos conforme as necessidades do seu projeto.</li> <li>Para dados reais, substitua a fun\u00e7\u00e3o de gera\u00e7\u00e3o por leitura de arquivos ou banco de dados.</li> <li>Explore outros componentes do Streamlit para enriquecer a experi\u00eancia do usu\u00e1rio.</li> </ul> <p>Com este roteiro, voc\u00ea pode criar dashboards interativos e informativos para an\u00e1lise de dados demogr\u00e1ficos ou de outras naturezas usando Python e Streamlit.</p> <pre><code>import streamlit as st\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\n\n# Configura\u00e7\u00e3o da p\u00e1gina do Streamlit\nst.set_page_config(layout=\"wide\", page_title=\"Dashboard Censo Demogr\u00e1fico\")\n\n# Fun\u00e7\u00e3o para gerar dados fict\u00edcios\ndef gerar_dados_ficticios(num_domicilios=1000, num_max_moradores_por_domicilio=5):\n    \"\"\"\n    Gera um DataFrame do Pandas com dados fict\u00edcios do censo.\n    \"\"\"\n    ufs = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO']\n    municipios_por_uf = {uf: [f'Munic\u00edpio {i+1}-{uf}' for i in range(np.random.randint(1, 5))] for uf in ufs}\n\n    especie_domicilio_opcoes = {\n        1: 'DOMIC\u00cdLIO PARTICULAR PERMANENTE OCUPADO',\n        5: 'DOMIC\u00cdLIO PARTICULAR IMPROVISADO OCUPADO',\n        6: 'DOMIC\u00cdLIO COLETIVO COM MORADOR'\n    }\n\n    tipo_domicilio_opcoes = {\n        '011': 'CASA', '012': 'CASA DE VILA OU EM CONDOM\u00cdNIO', '013': 'APARTAMENTO',\n        '014': 'HABITA\u00c7\u00c3O EM CASA DE C\u00d4MODOS OU CORTI\u00c7O',\n        '051': 'TENDA OU BARRACA',\n        '061': 'ASILO', '062': 'HOTEL OU PENS\u00c3O'\n    }\n\n    sexo_opcoes = {1: 'MASCULINO', 2: 'FEMININO'}\n    cor_raca_opcoes = {1: 'BRANCA', 2: 'PRETA', 3: 'AMARELA', 4: 'PARDA', 5: 'IND\u00cdGENA'}\n\n    abastecimento_agua_opcoes = {\n        1: 'REDE GERAL DE DISTRIBUI\u00c7\u00c3O', 2: 'PO\u00c7O PROFUNDO OU ARTESIANO', 3: 'PO\u00c7O RASO, FRE\u00c1TICO OU CACIMBA',\n        4: 'FONTE, NASCENTE OU MINA', 5: 'CARRO-PIPA', 6: '\u00c1GUA DA CHUVA ARMAZENADA',\n        7: 'RIOS, A\u00c7UDES, C\u00d3RREGOS, LAGOS E IGARAP\u00c9S', 8: 'OUTRA FORMA'\n    }\n\n    esgoto_opcoes = {\n        1: 'REDE GERAL OU PLUVIAL', 2: 'FOSSA S\u00c9PTICA LIGADA \u00c0 REDE', 3: 'FOSSA S\u00c9PTICA N\u00c3O LIGADA \u00c0 REDE',\n        4: 'FOSSA RUDIMENTAR OU BURACO', 5: 'VALA', 6: 'RIO, LAGO, C\u00d3RREGO OU MAR', 7: 'OUTRA FORMA'\n    }\n\n    lixo_opcoes = {\n        1: 'COLETADO NO DOMIC\u00cdLIO POR SERVI\u00c7O DE LIMPEZA', 2: 'DEPOSITADO EM CA\u00c7AMBA DE SERVI\u00c7O DE LIMPEZA',\n        3: 'QUEIMADO NA PROPRIEDADE', 4: 'ENTERRADO NA PROPRIEDADE',\n        5: 'JOGADO EM TERRENO BALDIO, ENCOSTA OU \u00c1REA P\u00daBLICA', 6: 'OUTRO DESTINO'\n    }\n\n    renda_faixa_opcoes = {\n        1: 'R$ 1,00 A R$ 500,00', 2: 'R$ 501,00 A R$ 1.000,00', 3: 'R$ 1.001,00 A R$ 2.000,00',\n        4: 'R$ 2.001,00 A R$ 3.000,00', 5: 'R$ 3.001,00 A R$ 5.000,00', 6: 'R$ 5.001,00 A R$ 10.000,00',\n        7: 'R$ 10.001,00 A R$ 20.000,00', 8: 'R$ 20.001,00 A R$ 100.000,00', 9: 'R$ 100.001,00 OU MAIS',\n        0: 'SEM RENDIMENTO' # Adicionado para quem n\u00e3o tem rendimento\n    }\n\n    sabe_ler_escrever_opcoes = {1: 'SIM', 2: 'N\u00c3O'}\n\n    dados_domicilios = []\n    dados_moradores = []\n    id_morador_global = 0\n\n    for i in range(num_domicilios):\n        id_domicilio = f'DOM{i+1:05d}'\n        uf_escolhida = np.random.choice(ufs)\n        municipio_escolhido = np.random.choice(municipios_por_uf[uf_escolhida])\n        especie_dom_cod = np.random.choice(list(especie_domicilio_opcoes.keys()))\n        tipo_dom_cod = np.random.choice(list(tipo_domicilio_opcoes.keys()))\n\n        abastecimento_cod = np.random.choice(list(abastecimento_agua_opcoes.keys()))\n        esgoto_cod = np.random.choice(list(esgoto_opcoes.keys()))\n        lixo_cod = np.random.choice(list(lixo_opcoes.keys()))\n\n        # Renda \u00e9 por domic\u00edlio (para o respons\u00e1vel)\n        renda_responsavel_cod = np.random.choice(list(renda_faixa_opcoes.keys()))\n\n        num_moradores_neste_domicilio = np.random.randint(1, num_max_moradores_por_domicilio + 1)\n\n        dados_domicilios.append({\n            'ID_DOMICILIO': id_domicilio,\n            'UF': uf_escolhida,\n            'MUNICIPIO': municipio_escolhido,\n            'ESPECIE_DOMICILIO_COD': especie_dom_cod,\n            'ESPECIE_DOMICILIO_DESC': especie_domicilio_opcoes[especie_dom_cod],\n            'TIPO_DOMICILIO_COD': tipo_dom_cod,\n            'TIPO_DOMICILIO_DESC': tipo_domicilio_opcoes[tipo_dom_cod],\n            'ABASTECIMENTO_AGUA_COD': abastecimento_cod,\n            'ABASTECIMENTO_AGUA_DESC': abastecimento_agua_opcoes[abastecimento_cod],\n            'ESGOTO_COD': esgoto_cod,\n            'ESGOTO_DESC': esgoto_opcoes[esgoto_cod],\n            'LIXO_COD': lixo_cod,\n            'LIXO_DESC': lixo_opcoes[lixo_cod],\n            'RENDA_FAIXA_RESPONSAVEL_COD': renda_responsavel_cod,\n            'RENDA_FAIXA_RESPONSAVEL_DESC': renda_faixa_opcoes[renda_responsavel_cod],\n            'NUM_MORADORES': num_moradores_neste_domicilio\n        })\n\n        for j in range(num_moradores_neste_domicilio):\n            id_morador_global += 1\n            sexo_cod = np.random.choice(list(sexo_opcoes.keys()))\n            cor_raca_cod = np.random.choice(list(cor_raca_opcoes.keys()))\n            idade = np.random.randint(0, 100)\n            sabe_ler_escrever_cod = np.random.choice(list(sabe_ler_escrever_opcoes.keys())) if idade &gt;= 5 else 2 # S\u00f3 para maiores de 5 anos\n\n            dados_moradores.append({\n                'ID_MORADOR': f'MOR{id_morador_global:07d}',\n                'ID_DOMICILIO': id_domicilio,\n                'SEXO_COD': sexo_cod,\n                'SEXO_DESC': sexo_opcoes[sexo_cod],\n                'IDADE': idade,\n                'COR_RACA_COD': cor_raca_cod,\n                'COR_RACA_DESC': cor_raca_opcoes[cor_raca_cod],\n                'SABE_LER_ESCREVER_COD': sabe_ler_escrever_cod,\n                'SABE_LER_ESCREVER_DESC': sabe_ler_escrever_opcoes[sabe_ler_escrever_cod] if idade &gt;=5 else sabe_ler_escrever_opcoes[2]\n            })\n\n    df_domicilios = pd.DataFrame(dados_domicilios)\n    df_moradores = pd.DataFrame(dados_moradores)\n\n    # Juntar os dataframes\n    df_completo = pd.merge(df_moradores, df_domicilios, on='ID_DOMICILIO', how='left')\n\n    return df_completo\n\n# Carregar ou gerar os dados\n# Em um aplicativo real, voc\u00ea carregaria os dados de um arquivo CSV, banco de dados, etc.\n# Ex: df = pd.read_csv('seus_dados_do_censo.csv')\nif 'df_censo' not in st.session_state:\n    st.session_state.df_censo = gerar_dados_ficticios(num_domicilios=5000, num_max_moradores_por_domicilio=6)\n\ndf = st.session_state.df_censo\n\n# --- BARRA LATERAL DE FILTROS ---\nst.sidebar.header('Filtros Demogr\u00e1ficos')\n\n# Filtro de UF\nufs_disponiveis = ['Todos'] + sorted(df['UF'].unique().tolist())\nuf_selecionada = st.sidebar.selectbox('UF (Estado):', ufs_disponiveis)\n\n# Filtrar dados por UF\nif uf_selecionada != 'Todos':\n    df_filtrado_sidebar = df[df['UF'] == uf_selecionada].copy() # Usar .copy() para evitar SettingWithCopyWarning\nelse:\n    df_filtrado_sidebar = df.copy()\n\n# Filtro de Munic\u00edpio (dependente da UF)\nif uf_selecionada != 'Todos':\n    municipios_disponiveis = ['Todos'] + sorted(df_filtrado_sidebar['MUNICIPIO'].unique().tolist())\nelse:\n    municipios_disponiveis = ['Todos'] # Se UF for Todos, mostrar todos os munic\u00edpios seria demais\n\nmunicipio_selecionado = st.sidebar.selectbox('Munic\u00edpio:', municipios_disponiveis)\n\n# Filtrar dados por Munic\u00edpio\nif municipio_selecionado != 'Todos':\n    df_filtrado_sidebar = df_filtrado_sidebar[df_filtrado_sidebar['MUNICIPIO'] == municipio_selecionado].copy()\n\n\n# Filtro de Sexo\nsexos_disponiveis = ['Todos'] + df_filtrado_sidebar['SEXO_DESC'].unique().tolist()\nsexo_selecionado = st.sidebar.selectbox('Sexo:', sexos_disponiveis)\nif sexo_selecionado != 'Todos':\n    df_filtrado_sidebar = df_filtrado_sidebar[df_filtrado_sidebar['SEXO_DESC'] == sexo_selecionado].copy()\n\n# Filtro de Cor/Ra\u00e7a\ncor_raca_disponiveis = ['Todos'] + df_filtrado_sidebar['COR_RACA_DESC'].unique().tolist()\ncor_raca_selecionada = st.sidebar.selectbox('Cor ou Ra\u00e7a:', cor_raca_disponiveis)\nif cor_raca_selecionada != 'Todos':\n    df_filtrado_sidebar = df_filtrado_sidebar[df_filtrado_sidebar['COR_RACA_DESC'] == cor_raca_selecionada].copy()\n\n# Filtro de Faixa de Idade\nst.sidebar.subheader('Faixa Et\u00e1ria (Moradores)')\nidade_min, idade_max = int(df_filtrado_sidebar['IDADE'].min()), int(df_filtrado_sidebar['IDADE'].max())\nfaixa_idade_selecionada = st.sidebar.slider(\n    'Selecione a faixa et\u00e1ria:',\n    min_value=idade_min,\n    max_value=idade_max,\n    value=(idade_min, idade_max)\n)\ndf_filtrado_sidebar = df_filtrado_sidebar[\n    (df_filtrado_sidebar['IDADE'] &gt;= faixa_idade_selecionada[0]) &amp;\n    (df_filtrado_sidebar['IDADE'] &lt;= faixa_idade_selecionada[1])\n].copy()\n\n\n# Filtro de Esp\u00e9cie de Domic\u00edlio\nespecies_dom_disponiveis = ['Todos'] + df_filtrado_sidebar['ESPECIE_DOMICILIO_DESC'].unique().tolist()\nespecie_dom_selecionada = st.sidebar.selectbox('Esp\u00e9cie de Domic\u00edlio:', especies_dom_disponiveis)\nif especie_dom_selecionada != 'Todos':\n    df_filtrado_sidebar = df_filtrado_sidebar[df_filtrado_sidebar['ESPECIE_DOMICILIO_DESC'] == especie_dom_selecionada].copy()\n\n# Filtro de Faixa de Rendimento do Respons\u00e1vel (por domic\u00edlio)\nrendas_disponiveis = ['Todos'] + sorted(df_filtrado_sidebar['RENDA_FAIXA_RESPONSAVEL_DESC'].unique().tolist(), key=lambda x: (x.startswith('R$'), x)) # Ordenar corretamente\nrenda_selecionada = st.sidebar.selectbox('Faixa de Rendimento do Respons\u00e1vel:', rendas_disponiveis)\nif renda_selecionada != 'Todos':\n    df_filtrado_sidebar = df_filtrado_sidebar[df_filtrado_sidebar['RENDA_FAIXA_RESPONSAVEL_DESC'] == renda_selecionada].copy()\n\n\n# --- PAINEL PRINCIPAL ---\nst.title('Painel Censo Demogr\u00e1fico IBGE 2022 (Dados Fict\u00edcios)')\n\nif df_filtrado_sidebar.empty:\n    st.warning(\"Nenhum dado encontrado para os filtros selecionados.\")\nelse:\n    # Indicadores Chave (KPIs)\n    st.header('Indicadores Gerais')\n    total_moradores = df_filtrado_sidebar['ID_MORADOR'].nunique()\n    total_domicilios = df_filtrado_sidebar['ID_DOMICILIO'].nunique()\n\n    col1, col2 = st.columns(2)\n    with col1:\n        st.metric(label=\"Total de Moradores Selecionados\", value=f\"{total_moradores:,}\".replace(\",\", \".\"))\n    with col2:\n        st.metric(label=\"Total de Domic\u00edlios Selecionados\", value=f\"{total_domicilios:,}\".replace(\",\", \".\"))\n\n    st.markdown(\"---\")\n\n    # Gr\u00e1ficos\n    st.header('Distribui\u00e7\u00f5es da Popula\u00e7\u00e3o')\n\n    col_graf1, col_graf2 = st.columns(2)\n\n    with col_graf1:\n        st.subheader('Distribui\u00e7\u00e3o por Sexo')\n        if total_moradores &gt; 0:\n            sexo_counts = df_filtrado_sidebar['SEXO_DESC'].value_counts()\n            fig_sexo, ax_sexo = plt.subplots(figsize=(6, 4))\n            wedges, texts, autotexts = ax_sexo.pie(\n                sexo_counts, \n                labels=sexo_counts.index, \n                autopct='%1.1f%%', \n                startangle=90,\n                colors=['#66b3ff','#ff9999','#99ff99','#ffcc99'] # Cores amig\u00e1veis\n            )\n            ax_sexo.axis('equal') # Equal aspect ratio ensures that pie is drawn as a circle.\n            plt.setp(autotexts, size=8, weight=\"bold\", color=\"white\")\n            plt.setp(texts, size=7)\n            st.pyplot(fig_sexo)\n        else:\n            st.info(\"Sem dados de sexo para exibir.\")\n\n    with col_graf2:\n        st.subheader('Distribui\u00e7\u00e3o por Cor ou Ra\u00e7a')\n        if total_moradores &gt; 0:\n            cor_raca_counts = df_filtrado_sidebar['COR_RACA_DESC'].value_counts().sort_index()\n            fig_cor, ax_cor = plt.subplots(figsize=(7, 5))\n            bars = ax_cor.bar(cor_raca_counts.index, cor_raca_counts.values, color='skyblue')\n            ax_cor.set_ylabel('N\u00famero de Pessoas')\n            ax_cor.set_xlabel('Cor ou Ra\u00e7a')\n            plt.xticks(rotation=45, ha=\"right\", fontsize=8)\n            plt.yticks(fontsize=8)\n            ax_cor.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ','))) # Formatar eixo Y\n            # Adicionar r\u00f3tulos nas barras\n            for bar in bars:\n                yval = bar.get_height()\n                ax_cor.text(bar.get_x() + bar.get_width()/2.0, yval + 0.05 * yval, f'{int(yval):,}', ha='center', va='bottom', fontsize=7)\n\n            st.pyplot(fig_cor)\n        else:\n            st.info(\"Sem dados de cor/ra\u00e7a para exibir.\")\n\n    st.markdown(\"---\")\n    st.header('Caracter\u00edsticas dos Domic\u00edlios')\n\n    # Agrupar por domic\u00edlio para caracter\u00edsticas do domic\u00edlio\n    df_domicilios_filtrados = df_filtrado_sidebar.drop_duplicates(subset=['ID_DOMICILIO']).copy()\n\n    if df_domicilios_filtrados.empty:\n        st.info(\"Sem dados de domic\u00edlios para os filtros selecionados.\")\n    else:\n        col_dom1, col_dom2 = st.columns(2)\n        with col_dom1:\n            st.subheader('Principal Forma de Abastecimento de \u00c1gua')\n            abastecimento_counts = df_domicilios_filtrados['ABASTECIMENTO_AGUA_DESC'].value_counts()\n            fig_agua, ax_agua = plt.subplots(figsize=(7, 5))\n            bars_agua = ax_agua.barh(abastecimento_counts.index, abastecimento_counts.values, color='lightcoral')\n            ax_agua.set_xlabel('N\u00famero de Domic\u00edlios')\n            ax_agua.set_ylabel('Forma de Abastecimento')\n            plt.xticks(fontsize=8)\n            plt.yticks(fontsize=7)\n            ax_agua.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n            # Adicionar r\u00f3tulos nas barras\n            for i, v in enumerate(abastecimento_counts.values):\n                 ax_agua.text(v + 0.01 * abastecimento_counts.max() , i , str(f'{v:,}'), color='black', va='center', fontsize=7)\n            st.pyplot(fig_agua)\n\n        with col_dom2:\n            st.subheader('Destino do Lixo')\n            lixo_counts = df_domicilios_filtrados['LIXO_DESC'].value_counts()\n            fig_lixo, ax_lixo = plt.subplots(figsize=(7, 5))\n            bars_lixo = ax_lixo.barh(lixo_counts.index, lixo_counts.values, color='mediumseagreen')\n            ax_lixo.set_xlabel('N\u00famero de Domic\u00edlios')\n            ax_lixo.set_ylabel('Destino do Lixo')\n            plt.xticks(fontsize=8)\n            plt.yticks(fontsize=7)\n            ax_lixo.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n            for i, v in enumerate(lixo_counts.values):\n                 ax_lixo.text(v + 0.01 * lixo_counts.max() , i , str(f'{v:,}'), color='black', va='center', fontsize=7)\n            st.pyplot(fig_lixo)\n\n        st.markdown(\"---\")\n        st.subheader('Distribui\u00e7\u00e3o de Rendimento Mensal do Respons\u00e1vel pelo Domic\u00edlio')\n        renda_counts = df_domicilios_filtrados['RENDA_FAIXA_RESPONSAVEL_DESC'].value_counts().sort_index(key=lambda x: (x.str.startswith('R$'), x))\n\n        fig_renda, ax_renda = plt.subplots(figsize=(10, 6))\n        bars_renda = ax_renda.bar(renda_counts.index, renda_counts.values, color='gold')\n        ax_renda.set_ylabel('N\u00famero de Domic\u00edlios')\n        ax_renda.set_xlabel('Faixa de Rendimento')\n        plt.xticks(rotation=45, ha=\"right\", fontsize=8)\n        plt.yticks(fontsize=8)\n        ax_renda.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n        for bar in bars_renda:\n            yval = bar.get_height()\n            ax_renda.text(bar.get_x() + bar.get_width()/2.0, yval + 0.05 * yval, f'{int(yval):,}', ha='center', va='bottom', fontsize=7)\n        st.pyplot(fig_renda)\n\n\n    st.markdown(\"---\")\n    st.header(\"Alfabetiza\u00e7\u00e3o (Pessoas com 5 anos ou mais)\")\n    df_alfabetizacao = df_filtrado_sidebar[df_filtrado_sidebar['IDADE'] &gt;= 5].copy()\n    if not df_alfabetizacao.empty:\n        sabe_ler_counts = df_alfabetizacao['SABE_LER_ESCREVER_DESC'].value_counts()\n        fig_ler, ax_ler = plt.subplots(figsize=(6,4))\n        wedges_ler, texts_ler, autotexts_ler = ax_ler.pie(\n            sabe_ler_counts,\n            labels=sabe_ler_counts.index,\n            autopct='%1.1f%%',\n            startangle=90,\n            colors=['#c2c2f0','#ffb3e6']\n        )\n        ax_ler.axis('equal')\n        plt.setp(autotexts_ler, size=8, weight=\"bold\", color=\"white\")\n        plt.setp(texts_ler, size=7)\n        st.pyplot(fig_ler)\n    else:\n        st.info(\"Sem dados de alfabetiza\u00e7\u00e3o para exibir para os filtros selecionados.\")\n\n\n    # Exibir uma amostra dos dados filtrados (opcional)\n    st.markdown(\"---\")\n    if st.checkbox('Mostrar amostra dos dados filtrados'):\n        st.subheader('Amostra dos Dados Filtrados (Moradores)')\n        st.dataframe(df_filtrado_sidebar.head(100))\n\n        st.subheader('Amostra dos Dados Filtrados (Domic\u00edlios - \u00fanicos)')\n        st.dataframe(df_domicilios_filtrados.head(100))\n\nst.sidebar.markdown(\"---\")\nst.sidebar.info(\"Este \u00e9 um dashboard com dados fict\u00edcios gerados para simular o Censo Demogr\u00e1fico IBGE 2022.\")\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/","title":"Dashboard com Streamlit + Django REST API","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<ul> <li>O que \u00e9 o Streamlit? (ferramenta Python para dashboards interativos)</li> <li>O que \u00e9 uma API REST? (interface para acessar dados remotamente)</li> <li>Objetivo: Construir um dashboard que consome dados de um censo via API Django REST e gera relat\u00f3rios interativos.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#2-preparando-o-ambiente","title":"2. Preparando o Ambiente","text":"<ul> <li>Instalar depend\u00eancias:     <pre><code>pip install streamlit requests pandas matplotlib\n</code></pre></li> <li>Ter uma API Django REST rodando (como a do seu projeto).</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#3-estrutura-sugerida-da-api","title":"3. Estrutura Sugerida da API","text":"<ul> <li>Endpoints RESTful para:<ul> <li><code>/api/domicilios/</code> (lista de domic\u00edlios)</li> <li><code>/api/moradores/</code> (lista de moradores)</li> <li><code>/api/responsaveis/</code> (lista de respons\u00e1veis)</li> </ul> </li> <li>Cada endpoint retorna dados em JSON, por exemplo:     <pre><code>[\n  {\"id\": 1, \"uf\": \"SP\", \"municipio\": \"S\u00e3o Paulo\", ...}\n]\n</code></pre></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#4-consumindo-a-api-no-streamlit","title":"4. Consumindo a API no Streamlit","text":"<ul> <li>Usar a biblioteca <code>requests</code> para buscar dados:     <pre><code>import requests\nimport pandas as pd\n\nurl = \"http://localhost:8000/api/domicilios/\"\nresponse = requests.get(url)\ndata = response.json()\ndf = pd.DataFrame(data)\n</code></pre></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#5-montando-o-dashboard","title":"5. Montando o Dashboard","text":"<ul> <li>Estrutura b\u00e1sica do app:     <pre><code>import streamlit as st\n\nst.title(\"Relat\u00f3rio do Censo - Dashboard\")\n# Carregar dados da API\n# Mostrar filtros (UF, munic\u00edpio, faixa et\u00e1ria, etc)\n# Mostrar gr\u00e1ficos (pie, bar, etc)\n# Mostrar tabela de dados filtrados\n</code></pre></li> <li>Exemplos de filtros:     <pre><code>uf = st.sidebar.selectbox(\"UF\", df['uf'].unique())\nmunicipio = st.sidebar.selectbox(\"Munic\u00edpio\", df[df['uf'] == uf]['municipio'].unique())\n</code></pre></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#6-visualizacoes","title":"6. Visualiza\u00e7\u00f5es","text":"<ul> <li>Gr\u00e1ficos com <code>matplotlib</code> ou <code>plotly</code>:<ul> <li>Distribui\u00e7\u00e3o por sexo, faixa et\u00e1ria, cor/ra\u00e7a, renda, etc.</li> <li>Exemplo:     <pre><code>import matplotlib.pyplot as plt\nfig, ax = plt.subplots()\ndf['sexo'].value_counts().plot.pie(autopct='%1.1f%%', ax=ax)\nst.pyplot(fig)\n</code></pre></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitapi/#7-gerando-relatorios","title":"7. Gerando Relat\u00f3rios","text":"<ul> <li>Permitir download de relat\u00f3rios filtrados (CSV, PDF, etc):     <pre><code>st.download_button(\"Baixar CSV\", df_filtrado.to_csv(index=False), \"relatorio.csv\")\n</code></pre></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Dashboard/streamlit/streamlitutorial/","title":"Streamlitutorial","text":"<p>Passo 1: Estrutura do Projeto e Arquivo JSON de Exemplo</p> <p>Primeiro, vamos definir uma estrutura simples para o nosso projeto e um arquivo JSON de exemplo.</p> <p>Crie uma pasta para o seu projeto, por exemplo, dashboard_json_project. Dentro desta pasta, crie uma subpasta chamada data e, dentro dela, um arquivo JSON chamado dados_censo.json. Exemplo de dados_censo.json:</p> <pre><code>[\n  {\n    \"id_domicilio\": \"D001\",\n    \"uf\": \"SP\",\n    \"municipio\": \"S\u00e3o Paulo\",\n    \"idade_responsavel\": 45,\n    \"renda_domiciliar\": 3500.50,\n    \"num_moradores\": 4,\n    \"tipo_domicilio\": \"Casa\"\n  },\n  {\n    \"id_domicilio\": \"D002\",\n    \"uf\": \"RJ\",\n    \"municipio\": \"Rio de Janeiro\",\n    \"idade_responsavel\": 32,\n    \"renda_domiciliar\": 2200.00,\n    \"num_moradores\": 2,\n    \"tipo_domicilio\": \"Apartamento\"\n  },\n  {\n    \"id_domicilio\": \"D003\",\n    \"uf\": \"SP\",\n    \"municipio\": \"Campinas\",\n    \"idade_responsavel\": 55,\n    \"renda_domiciliar\": 5000.75,\n    \"num_moradores\": 3,\n    \"tipo_domicilio\": \"Casa\"\n  },\n  {\n    \"id_domicilio\": \"D004\",\n    \"uf\": \"MG\",\n    \"municipio\": \"Belo Horizonte\",\n    \"idade_responsavel\": 28,\n    \"renda_domiciliar\": 1800.00,\n    \"num_moradores\": 1,\n    \"tipo_domicilio\": \"Apartamento\"\n  },\n  {\n    \"id_domicilio\": \"D005\",\n    \"uf\": \"RJ\",\n    \"municipio\": \"Niter\u00f3i\",\n    \"idade_responsavel\": 60,\n    \"renda_domiciliar\": 4500.00,\n    \"num_moradores\": 2,\n    \"tipo_domicilio\": \"Casa\"\n  }\n]\n</code></pre> <p>Passo 2: Criar o Script do Dashboard</p> <p>Agora, crie um arquivo Python, por exemplo, app_dashboard.py, na pasta raiz do seu projeto (dashboard_json_project).</p> <pre><code>import streamlit as st\nimport pandas as pd\nimport json\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# --- Configura\u00e7\u00f5es da P\u00e1gina ---\nst.set_page_config(layout=\"wide\", page_title=\"Dashboard Estat\u00edstico\")\n\n# --- Fun\u00e7\u00f5es Auxiliares ---\n\n@st.cache_data # Cache para otimizar o carregamento de dados\ndef carregar_dados_json(caminho_arquivo_json):\n    \"\"\"Carrega dados de um arquivo JSON.\"\"\"\n    try:\n        with open(caminho_arquivo_json, 'r', encoding='utf-8') as f:\n            dados = json.load(f)\n        return pd.DataFrame(dados)\n    except FileNotFoundError:\n        st.error(f\"Erro: Arquivo JSON n\u00e3o encontrado em '{caminho_arquivo_json}'.\")\n        return pd.DataFrame()\n    except json.JSONDecodeError:\n        st.error(f\"Erro: O arquivo JSON em '{caminho_arquivo_json}' n\u00e3o \u00e9 v\u00e1lido.\")\n        return pd.DataFrame()\n    except Exception as e:\n        st.error(f\"Ocorreu um erro ao carregar os dados: {e}\")\n        return pd.DataFrame()\n\ndef plotar_histograma(df, coluna, titulo, xlabel, ylabel=\"Frequ\u00eancia\"):\n    \"\"\"Cria e exibe um histograma no Streamlit.\"\"\"\n    if coluna not in df.columns or df[coluna].empty:\n        st.warning(f\"Coluna '{coluna}' n\u00e3o encontrada ou vazia para o gr\u00e1fico '{titulo}'.\")\n        return\n\n    fig, ax = plt.subplots()\n    sns.histplot(df[coluna].dropna(), kde=True, ax=ax)\n    ax.set_title(titulo, fontsize=15)\n    ax.set_xlabel(xlabel, fontsize=12)\n    ax.set_ylabel(ylabel, fontsize=12)\n    plt.tight_layout()\n    st.pyplot(fig)\n    plt.clf() # Limpa a figura para o pr\u00f3ximo gr\u00e1fico\n\ndef plotar_barras(df, coluna, titulo, xlabel, ylabel=\"Contagem\"):\n    \"\"\"Cria e exibe um gr\u00e1fico de barras no Streamlit.\"\"\"\n    if coluna not in df.columns or df[coluna].empty:\n        st.warning(f\"Coluna '{coluna}' n\u00e3o encontrada ou vazia para o gr\u00e1fico '{titulo}'.\")\n        return\n\n    contagem = df[coluna].value_counts()\n    fig, ax = plt.subplots()\n    sns.barplot(x=contagem.index, y=contagem.values, ax=ax, palette=\"viridis\")\n    ax.set_title(titulo, fontsize=15)\n    ax.set_xlabel(xlabel, fontsize=12)\n    ax.set_ylabel(ylabel, fontsize=12)\n    plt.xticks(rotation=45, ha=\"right\")\n    plt.tight_layout()\n    st.pyplot(fig)\n    plt.clf()\n\n# --- T\u00edtulo Principal do Dashboard ---\nst.title(\"\ud83d\udcca Dashboard Estat\u00edstico a partir de JSON\")\nst.markdown(\"Visualiza\u00e7\u00e3o de dados estat\u00edsticos carregados de um arquivo JSON local.\")\n\n# --- Carregamento dos Dados ---\n# Substitua pelo caminho correto do seu arquivo JSON\ncaminho_json = \"data/dados_censo.json\" \ndf_dados = carregar_dados_json(caminho_json)\n\nif df_dados.empty:\n    st.warning(\"N\u00e3o foi poss\u00edvel carregar os dados. Verifique o arquivo JSON e o caminho.\")\n    st.stop() # Interrompe a execu\u00e7\u00e3o se os dados n\u00e3o puderem ser carregados\n\n# --- Exibi\u00e7\u00e3o de Estat\u00edsticas Descritivas ---\nst.header(\"Estat\u00edsticas Descritivas Gerais\")\n\n# Mostrar um resumo dos dados\nif st.checkbox(\"Mostrar resumo dos dados (DataFrame.describe())\"):\n    st.dataframe(df_dados.describe(include='all'))\n\n# Indicadores Chave (KPIs)\ntotal_registros = len(df_dados)\nmedia_idade_responsavel = df_dados['idade_responsavel'].mean() if 'idade_responsavel' in df_dados.columns else \"N/A\"\nmedia_renda_domiciliar = df_dados['renda_domiciliar'].mean() if 'renda_domiciliar' in df_dados.columns else \"N/A\"\n\ncol1, col2, col3 = st.columns(3)\ncol1.metric(\"Total de Domic\u00edlios\", f\"{total_registros:,}\".replace(\",\", \".\"))\nif isinstance(media_idade_responsavel, (int, float)):\n    col2.metric(\"Idade M\u00e9dia do Respons\u00e1vel\", f\"{media_idade_responsavel:.1f} anos\")\nelse:\n    col2.metric(\"Idade M\u00e9dia do Respons\u00e1vel\", media_idade_responsavel)\n\nif isinstance(media_renda_domiciliar, (int, float)):\n    col3.metric(\"Renda M\u00e9dia Domiciliar\", f\"R$ {media_renda_domiciliar:,.2f}\".replace(\",\", \"X\").replace(\".\", \",\").replace(\"X\", \".\"))\nelse:\n    col3.metric(\"Renda M\u00e9dia Domiciliar\", media_renda_domiciliar)\n\n\nst.markdown(\"---\")\n\n# --- Visualiza\u00e7\u00f5es Estat\u00edsticas ---\nst.header(\"Visualiza\u00e7\u00f5es dos Dados\")\n\ncol_graf1, col_graf2 = st.columns(2)\n\nwith col_graf1:\n    if 'idade_responsavel' in df_dados.columns:\n        plotar_histograma(df_dados, 'idade_responsavel', \n                          'Distribui\u00e7\u00e3o da Idade dos Respons\u00e1veis', \n                          'Idade do Respons\u00e1vel')\n    else:\n        st.info(\"Coluna 'idade_responsavel' n\u00e3o encontrada para plotar histograma.\")\n\nwith col_graf2:\n    if 'uf' in df_dados.columns:\n        plotar_barras(df_dados, 'uf', \n                      'Distribui\u00e7\u00e3o de Domic\u00edlios por UF', \n                      'UF')\n    else:\n        st.info(\"Coluna 'uf' n\u00e3o encontrada para plotar gr\u00e1fico de barras.\")\n\ncol_graf3, col_graf4 = st.columns(2)\n\nwith col_graf3:\n    if 'renda_domiciliar' in df_dados.columns:\n        plotar_histograma(df_dados, 'renda_domiciliar', \n                          'Distribui\u00e7\u00e3o da Renda Domiciliar', \n                          'Renda Domiciliar (R$)')\n    else:\n        st.info(\"Coluna 'renda_domiciliar' n\u00e3o encontrada para plotar histograma.\")\n\nwith col_graf4:\n    if 'tipo_domicilio' in df_dados.columns:\n        plotar_barras(df_dados, 'tipo_domicilio', \n                      'Distribui\u00e7\u00e3o por Tipo de Domic\u00edlio', \n                      'Tipo de Domic\u00edlio')\n    else:\n        st.info(\"Coluna 'tipo_domicilio' n\u00e3o encontrada para plotar gr\u00e1fico de barras.\")\n\n# --- Exibir Dados Brutos (Opcional) ---\nst.markdown(\"---\")\nif st.checkbox(\"Mostrar dados brutos carregados do JSON\"):\n    st.subheader(\"Dados Brutos\")\n    st.dataframe(df_dados)\n\nst.sidebar.info(\"Dashboard para visualiza\u00e7\u00e3o de dados de um arquivo JSON.\")\n</code></pre> <p>Passo 3: Criar o arquivo de estilo (opcional)</p> <p>Crie um arquivo style.css na mesma pasta do app_dashboard.py se quiser adicionar estilos personalizados (o exemplo acima j\u00e1 inclui uma refer\u00eancia a ele, mas \u00e9 opcional).</p> <pre><code>/* Exemplo de style.css - pode estar vazio ou conter seus estilos */\nbody {\n    font-family: sans-serif;\n}\n\nh1, h2, h3 {\n    color: #333;\n}\n</code></pre> <p>Passo 4: Instalar as Bibliotecas Necess\u00e1rias</p> <p>Se ainda n\u00e3o as tiver, instale as bibliotecas:</p> <pre><code>pip install streamlit pandas matplotlib seaborn\nPasso 5: Executar o Dashboard\n</code></pre> <p>Abra o terminal na pasta raiz do seu projeto (dashboard_json_project).</p> <p>Execute o comando:</p> <pre><code>streamlit run app_dashboard.py\n</code></pre> <p>O Streamlit abrir\u00e1 o dashboard no seu navegador automaticamente.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/","title":"Introdu\u00e7\u00e3o ao Django","text":"<p>Roteiro para Desenvolvimento de Aplica\u00e7\u00e3o Web Django com SQLite no VS Code</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Visual Studio Code instalado</li> <li>Python instalado (vers\u00e3o 3.8 ou superior)</li> <li>Extens\u00e3o Python para VS Code (recomendado)</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-1-configurar-ambiente-virtual","title":"Passo 1: Configurar Ambiente Virtual","text":"<ol> <li>Abra o terminal no VS Code (<code>Ctrl+</code> ou Terminal &gt; Novo Terminal)</li> <li>Navegue at\u00e9 a pasta onde deseja criar o projeto</li> <li>Crie o ambiente virtual:</li> </ol> <pre><code>ctrl +shift + P\nPython Create Enviroment\n</code></pre> <p>ou </p> <pre><code>python -m venv venv\n</code></pre> <ol> <li>Ative o ambiente virtual:</li> <li> <p>Windows:</p> <pre><code>.\\venv\\Scripts\\activate\n</code></pre> </li> <li> <p>Linux/MacOS:</p> <pre><code>source venv/bin/activate\n</code></pre> </li> <li> <p>Verifique que o ambiente est\u00e1 ativo (deve aparecer <code>(venv)</code> no in\u00edcio da linha do terminal)</p> </li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-2-instalar-django-e-dependencias","title":"Passo 2: Instalar Django e Depend\u00eancias","text":"<ol> <li>Com o ambiente virtual ativo, instale o Django:</li> </ol> <pre><code>pip install django\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-3-criar-projeto-django","title":"Passo 3: Criar Projeto Django","text":"<ol> <li>Crie o projeto Django:</li> </ol> <pre><code>django-admin startproject myproject .\n</code></pre> <p>(O ponto no final cria o projeto no diret\u00f3rio atual)</p> <ol> <li>Verifique a estrutura criada:</li> </ol> <pre><code>myproject/\n  __init__.py\n  settings.py\n  urls.py\n  wsgi.py\nmanage.py\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-4-configurar-o-banco-de-dados-sqlite","title":"Passo 4: Configurar o Banco de Dados SQLite","text":"<ol> <li>O Django j\u00e1 vem configurado para usar SQLite por padr\u00e3o (verifique em <code>myproject/settings.py</code>):</li> </ol> <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n</code></pre> <ol> <li>Execute as migra\u00e7\u00f5es iniciais:</li> </ol> <pre><code>python manage.py migrate\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-5-criar-uma-aplicacao-django","title":"Passo 5: Criar uma Aplica\u00e7\u00e3o Django","text":"<ol> <li>Crie uma nova aplica\u00e7\u00e3o:</li> </ol> <pre><code>python manage.py startapp myapp\n</code></pre> <ol> <li>Adicione a aplica\u00e7\u00e3o ao <code>INSTALLED_APPS</code> em <code>myproject/settings.py</code>:</li> </ol> <pre><code>INSTALLED_APPS = [\n    ...\n    'myapp',\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-6-configurar-urls-e-views-basicas","title":"Passo 6: Configurar URLs e Views B\u00e1sicas","text":"<ol> <li>Crie um arquivo <code>urls.py</code> na pasta <code>myapp</code>:</li> </ol> <pre><code>from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n]\n</code></pre> <ol> <li>Inclua as URLs da aplica\u00e7\u00e3o no projeto principal (<code>myproject/urls.py</code>):</li> </ol> <pre><code>from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]\n</code></pre> <ol> <li>Crie uma view b\u00e1sica em <code>myapp/views.py</code>:</li> </ol> <pre><code>from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef home(request):\n    return HttpResponse(\"Bem-vindo ao meu site!\")\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-7-criar-modelos-e-migracoes","title":"Passo 7: Criar Modelos e Migra\u00e7\u00f5es","text":"<ol> <li>Defina um modelo em <code>myapp/models.py</code>:</li> </ol> <pre><code>from django.db import models\n\nclass Produto(models.Model):\n    nome = models.CharField(max_length=100)\n    preco = models.DecimalField(max_digits=6, decimal_places=2)\n    descricao = models.TextField()\n    disponivel = models.BooleanField(default=True)\n\n    def __str__(self):\n        return self.nome\n</code></pre> <ol> <li>Crie e aplique as migra\u00e7\u00f5es:</li> </ol> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-8-configurar-o-painel-de-administracao","title":"Passo 8: Configurar o Painel de Administra\u00e7\u00e3o","text":"<ol> <li>Crie um superusu\u00e1rio:</li> </ol> <pre><code>python manage.py createsuperuser\n</code></pre> <ol> <li>Registre o modelo no admin (<code>myapp/admin.py</code>):</li> </ol> <pre><code>from django.contrib import admin\nfrom .models import Produto\n\nadmin.site.register(Produto)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/01_Intro/#passo-9-executar-o-servidor-de-desenvolvimento","title":"Passo 9: Executar o Servidor de Desenvolvimento","text":"<ol> <li>Inicie o servidor:</li> </ol> <pre><code>python manage.py runserver\n</code></pre> <ol> <li> <p>Acesse no navegador:</p> </li> <li> <p>http://localhost:8000/ (p\u00e1gina inicial)</p> </li> <li>http://localhost:8000/admin/ (painel admin)</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/","title":"Introdu\u00e7\u00e3o ao Django REST","text":"<p>Uma extens\u00e3o do aplicativo Django inicial para incluir uma API RESTful usando Django REST Framework, mantendo a funcionalidade existente e adicionando endpoints API.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/#1-instalacao-e-configuracao-inicial","title":"1. Instala\u00e7\u00e3o e Configura\u00e7\u00e3o Inicial","text":"<p>Primeiro, vamos instalar e configurar o DRF:</p> <pre><code>pip install djangorestframework\n</code></pre> <p>Adicione ao <code>INSTALLED_APPS</code> em <code>myproject/settings.py</code>:</p> <pre><code>INSTALLED_APPS = [\n    ...\n    'rest_framework',\n    'myapp',\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/#2-criacao-dos-serializers","title":"2. Cria\u00e7\u00e3o dos Serializers","text":"<p>Crie um arquivo <code>serializers.py</code> na aplica\u00e7\u00e3o <code>minhaapp</code>:</p> <pre><code># minhaapp/serializers.py\nfrom rest_framework import serializers\nfrom myapp.models import Produto\n\nclass ProdutoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Produto\n        fields = ['id', 'nome', 'preco', 'descricao', 'disponivel']\n        read_only_fields = ['id']\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/#3-criacao-das-viewsets-e-api-views","title":"3. Cria\u00e7\u00e3o das Viewsets e API Views","text":"<p>Atualize ou crie um arquivo <code>api.py</code> na aplica\u00e7\u00e3o:</p> <pre><code># minhaapp/api.py\nfrom rest_framework import viewsets, generics\nfrom rest_framework.response import Response\nfrom rest_framework.decorators import action\nfrom myapp.models import Produto\nfrom myapp.serializers import ProdutoSerializer\n\nclass ProdutoViewSet(viewsets.ModelViewSet):\n    queryset = Produto.objects.all()\n    serializer_class = ProdutoSerializer\n\n    @action(detail=False, methods=['get'])\n    def disponiveis(self, request):\n        produtos = Produto.objects.filter(disponivel=True)\n        serializer = self.get_serializer(produtos, many=True)\n        return Response(serializer.data)\n\nclass ProdutosBaratosAPIView(generics.ListAPIView):\n    serializer_class = ProdutoSerializer\n\n    def get_queryset(self):\n        return Produto.objects.filter(preco__lt=1000)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/#4-configuracao-das-urls-da-api","title":"4. Configura\u00e7\u00e3o das URLs da API","text":"<p>Crie um arquivo <code>api_urls.py</code> na aplica\u00e7\u00e3o:</p> <pre><code># myapp/api_urls.py\nfrom django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom minhaapp.api import ProdutoViewSet, ProdutosBaratosAPIView\n\nrouter = DefaultRouter()\nrouter.register(r'produtos', ProdutoViewSet, basename='produto')\n\nurlpatterns = [\n    path('', include(router.urls)),\n    path('produtos/baratos/', ProdutosBaratosAPIView.as_view(), name='produtos-baratos'),\n]\n</code></pre> <p>Atualize o <code>urls.py</code> principal do projeto:</p> <pre><code># myproject/urls.py\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),  # URLs tradicionais\n    path('api/', include('minhaapp.api_urls')),  # URLs da API\n    path('api-auth/', include('rest_framework.urls')),  # Login para a API\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/#5-documentacao-da-api-com-swaggeropenapi","title":"5. Documenta\u00e7\u00e3o da API com Swagger/OpenAPI","text":"<p>Instale o drf-yasg para documenta\u00e7\u00e3o:</p> <pre><code>pip install drf-yasg\n</code></pre> <p>Adicione ao <code>INSTALLED_APPS</code>:</p> <pre><code>INSTALLED_APPS = [\n    ...\n    'drf_yasg',\n]\n</code></pre> <p>Atualize o <code>urls.py</code> principal:</p> <pre><code># myproject/urls.py\nfrom rest_framework import permissions\nfrom drf_yasg.views import get_schema_view\nfrom drf_yasg import openapi\n\nschema_view = get_schema_view(\n   openapi.Info(\n      title=\"API de Produtos\",\n      default_version='v1',\n      description=\"API para gerenciamento de produtos\",\n      terms_of_service=\"https://www.google.com/policies/terms/\",\n      contact=openapi.Contact(email=\"contato@empresa.com\"),\n      license=openapi.License(name=\"BSD License\"),\n   ),\n   public=True,\n   permission_classes=(permissions.AllowAny,),\n)\n\nurlpatterns = [\n    # ... URLs existentes\n    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/02_Intro%20Django%20Rest/#6-testando-a-api","title":"6. Testando a API","text":"<p>Agora voc\u00ea pode testar os endpoints da API:</p> <ol> <li>Listar todos os produtos: <code>GET /api/produtos/</code></li> <li>Criar novo produto: <code>POST /api/produtos/</code></li> <li>Detalhes de um produto: <code>GET /api/produtos/1/</code></li> <li>Atualizar produto: <code>PUT /api/produtos/1/</code></li> <li>Produtos dispon\u00edveis: <code>GET /api/produtos/disponiveis/</code></li> <li>Produtos baratos: <code>GET /api/produtos/baratos/</code></li> <li>Documenta\u00e7\u00e3o Swagger: <code>GET /swagger/</code></li> <li>Documenta\u00e7\u00e3o ReDoc: <code>GET /redoc/</code></li> </ol> <p>Esta extens\u00e3o transforma seu aplicativo Django em uma API RESTful poderosa enquanto mant\u00e9m a funcionalidade web tradicional. Voc\u00ea agora pode:</p> <ul> <li>Consumir a API com frontends modernos (React, Vue, Angular)</li> <li>Oferecer servi\u00e7os para aplicativos m\u00f3veis</li> <li>Integrar com outros sistemas via API</li> <li>Manter uma arquitetura escal\u00e1vel e bem organizada</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/","title":"Acessando a API do Django REST Framework","text":"<p>Para acessar sua API usando os endpoints do DRF e o Postman, siga estes passos:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#endpoints-disponiveis","title":"Endpoints Dispon\u00edveis","text":"<p>Considerando a estrutura proposta anteriormente, seus endpoints principais ser\u00e3o:</p> <ul> <li><code>GET /api/produtos/</code> - Lista todos os produtos</li> <li><code>POST /api/produtos/</code> - Cria um novo produto</li> <li><code>GET /api/produtos/&lt;id&gt;/</code> - Detalhes de um produto espec\u00edfico</li> <li><code>PUT /api/produtos/&lt;id&gt;/</code> - Atualiza um produto</li> <li><code>PATCH /api/produtos/&lt;id&gt;/</code> - Atualiza\u00e7\u00e3o parcial de um produto</li> <li><code>DELETE /api/produtos/&lt;id&gt;/</code> - Remove um produto</li> <li><code>GET /api/produtos/disponiveis/</code> - Lista produtos dispon\u00edveis</li> <li><code>GET /api/produtos/baratos/</code> - Lista produtos com pre\u00e7o &lt; 1000</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#acessando-via-navegador-drf-ui","title":"Acessando via Navegador (DRF UI)","text":"<p>1.Execute o servidor de desenvolvimento:</p> <pre><code>   python manage.py runserver\n</code></pre> <p>2.Acesse os endpoints no navegador:</p> <ul> <li>http://localhost:8000/api/produtos/]</li> <li>http://localhost:8000/api/produtos/1/</li> <li>http://localhost:8000/api/produtos/disponiveis/</li> </ul> <p>3.A interface web do DRF permitir\u00e1:</p> <ul> <li>Visualiza\u00e7\u00e3o dos dados em formato naveg\u00e1vel</li> <li>Teste de m\u00e9todos GET diretamente</li> <li>Formul\u00e1rio para testar POST, PUT, PATCH e DELETE</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#acessando-via-postman","title":"Acessando via Postman","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#1-configurando-o-postman","title":"1. Configurando o Postman","text":"<ul> <li>Abra o Postman</li> <li>Crie uma nova cole\u00e7\u00e3o (opcional, mas recomendado)</li> <li>Configure o ambiente (opcional) com vari\u00e1vel <code>base_url</code> = <code>http://localhost:8000/api</code></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#2-exemplos-de-requisicoes","title":"2. Exemplos de Requisi\u00e7\u00f5es","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#get-listar-todos-os-produtos","title":"GET - Listar todos os produtos","text":"<ul> <li>M\u00e9todo: GET</li> <li>URL: <code>{{base_url}}/produtos/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body: Nenhum</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#post-criar-novo-produto","title":"POST - Criar novo produto","text":"<ul> <li>M\u00e9todo: POST</li> <li>URL: <code>{{base_url}}/produtos/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body (raw, JSON):</li> </ul> <pre><code>  {\n      \"nome\": \"Novo Produto\",\n      \"preco\": 99.90,\n      \"descricao\": \"Descri\u00e7\u00e3o do novo produto\",\n      \"disponivel\": true\n  }\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#get-detalhes-de-um-produto-especifico","title":"GET - Detalhes de um produto espec\u00edfico","text":"<ul> <li>M\u00e9todo: GET</li> <li>URL: <code>{{base_url}}/produtos/1/</code> (onde 1 \u00e9 o ID do produto)</li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body: Nenhum</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#put-atualizar-um-produto-completo","title":"PUT - Atualizar um produto completo","text":"<ul> <li>M\u00e9todo: PUT</li> <li>URL: <code>{{base_url}}/produtos/1/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body (raw, JSON):</li> </ul> <pre><code>  {\n      \"nome\": \"Produto Atualizado\",\n      \"preco\": 129.90,\n      \"descricao\": \"Nova descri\u00e7\u00e3o\",\n      \"disponivel\": false\n  }\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#patch-atualizacao-parcial","title":"PATCH - Atualiza\u00e7\u00e3o parcial","text":"<ul> <li>M\u00e9todo: PATCH</li> <li>URL: <code>{{base_url}}/produtos/1/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body (raw, JSON):</li> </ul> <pre><code>  {\n      \"preco\": 149.90\n  }\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#delete-remover-um-produto","title":"DELETE - Remover um produto","text":"<ul> <li>M\u00e9todo: DELETE</li> <li>URL: <code>{{base_url}}/produtos/1/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body: Nenhum</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#get-produtos-disponiveis","title":"GET - Produtos dispon\u00edveis","text":"<ul> <li>M\u00e9todo: GET</li> <li>URL: <code>{{base_url}}/produtos/disponiveis/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body: Nenhum</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#get-produtos-baratos","title":"GET - Produtos baratos","text":"<ul> <li>M\u00e9todo: GET</li> <li>URL: <code>{{base_url}}/produtos/baratos/</code></li> <li>Headers:</li> <li><code>Content-Type: application/json</code></li> <li>Body: Nenhum</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#3-dicas-para-uso-no-postman","title":"3. Dicas para Uso no Postman","text":"<ul> <li> <p>Salve as requisi\u00e7\u00f5es: Crie uma cole\u00e7\u00e3o para seu projeto e salve cada endpoint como uma requisi\u00e7\u00e3o diferente</p> </li> <li> <p>Use vari\u00e1veis de ambiente: Configure vari\u00e1veis como <code>base_url</code> para facilitar a mudan\u00e7a entre ambientes</p> </li> <li> <p>Teste os status codes:</p> </li> <li>200 OK para GET bem-sucedido</li> <li>201 Created para POST bem-sucedido</li> <li>400 Bad Request para dados inv\u00e1lidos</li> <li> <p>404 Not Found para recursos n\u00e3o existentes</p> </li> <li> <p>Exporte a cole\u00e7\u00e3o: Voc\u00ea pode exportar como JSON e compartilhar com sua equipe</p> </li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#solucao-de-problemas-comuns","title":"Solu\u00e7\u00e3o de Problemas Comuns","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#1-erro-403-forbidden","title":"1. Erro 403 Forbidden","text":"<ul> <li>Causa: Permiss\u00f5es ainda est\u00e3o ativas</li> <li>Solu\u00e7\u00e3o: Verifique <code>DEFAULT_PERMISSION_CLASSES</code> no <code>settings.py</code> e defina como <code>AllowAny</code></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#2-erro-415-unsupported-media-type","title":"2. Erro 415 Unsupported Media Type","text":"<ul> <li>Causa: Header <code>Content-Type</code> incorreto</li> <li>Solu\u00e7\u00e3o: Sempre inclua <code>Content-Type: application/json</code></li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#3-dados-nao-aparecem-apos-post","title":"3. Dados n\u00e3o aparecem ap\u00f3s POST","text":"<ul> <li>Causa: Pode ser um problema com o banco de dados em mem\u00f3ria durante testes</li> <li>Solu\u00e7\u00e3o: Verifique se voc\u00ea est\u00e1 usando <code>python manage.py runserver</code> e n\u00e3o fechou o terminal</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#4-campos-obrigatorios-faltando","title":"4. Campos obrigat\u00f3rios faltando","text":"<ul> <li>Causa: Campos required no serializer n\u00e3o foram fornecidos</li> <li>Solu\u00e7\u00e3o: Verifique a resposta de erro para ver quais campos s\u00e3o obrigat\u00f3rios</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/03_Consume/#exemplo-completo-de-requisicao-no-postman","title":"Exemplo Completo de Requisi\u00e7\u00e3o no Postman","text":"<ul> <li>Configura\u00e7\u00e3o inicial:</li> <li>Abra o Postman</li> <li>Clique em \"New Request\"</li> <li>Selecione o m\u00e9todo HTTP desejado (GET, POST, etc)</li> <li> <p>Digite a URL: <code>http://localhost:8000/api/produtos/</code></p> </li> <li> <p>Para POST/PUT/PATCH:</p> </li> <li>V\u00e1 para a aba \"Body\"</li> <li>Selecione \"raw\"</li> <li>Escolha \"JSON\" no dropdown</li> <li> <p>Cole o JSON com os dados</p> </li> <li> <p>Enviando a requisi\u00e7\u00e3o:</p> </li> <li>Clique em \"Send\"</li> <li>Verifique o status code na resposta</li> <li>Visualize os dados retornados na aba \"Body\" da resposta</li> </ul> <p>Com esses passos, voc\u00ea poder\u00e1 testar completamente sua API Django REST Framework tanto pelo navegador (usando a interface web do DRF) quanto pelo Postman, sem a necessidade de configurar autentica\u00e7\u00e3o.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/","title":"00 - Projeto Streaming","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Para propor um processo de desenvolvimento de um aplicativo de streaming de \u00e1udio e v\u00eddeo, \u00e9 necess\u00e1rio levar em considera\u00e7\u00e3o as etapas de planejamento, design, implementa\u00e7\u00e3o e manuten\u00e7\u00e3o, al\u00e9m de aspectos t\u00e9cnicos e de infraestrutura. Abaixo, apresentamos um processo detalhado dividido em fases principais:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#1-planejamento","title":"1. Planejamento","text":"<ul> <li>Definir os objetivos: Estabelecer qual ser\u00e1 o p\u00fablico-alvo e as principais funcionalidades (ex: transmiss\u00e3o ao vivo, playlists personalizadas, v\u00eddeos on demand, etc.).</li> <li>Pesquisa de mercado: Analisar apps concorrentes (Spotify, YouTube, Netflix, etc.) para identificar oportunidades e nichos espec\u00edficos.</li> <li> <p>Requisitos funcionais:</p> </li> <li> <p>Cadastro e login de usu\u00e1rios.</p> </li> <li>Upload de conte\u00fado por criadores.</li> <li>Streaming de \u00e1udio e v\u00eddeo.</li> <li>Qualidade adaptativa do stream (ABR \u2013 Adaptive Bitrate Streaming).</li> <li>Recomenda\u00e7\u00f5es personalizadas.</li> <li> <p>Fun\u00e7\u00f5es de compartilhamento e integra\u00e7\u00e3o social.</p> </li> <li> <p>Requisitos t\u00e9cnicos:</p> </li> <li>Suporte a diversos dispositivos (web, mobile, smart TVs).</li> <li>Suporte a diferentes formatos de arquivo (MP3, MP4, HLS, DASH).</li> <li>Sistema de cache para otimizar o carregamento de v\u00eddeos.</li> <li>Integra\u00e7\u00e3o com sistemas de pagamento para assinaturas.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#2-arquitetura-do-sistema","title":"2. Arquitetura do Sistema","text":"<ul> <li> <p>Backend:</p> </li> <li> <p>Escolher uma plataforma para gerenciar a infraestrutura (ex: AWS, Azure, Google Cloud).</p> </li> <li>Utilizar servidores de m\u00eddia para transcodifica\u00e7\u00e3o (FFmpeg, Wowza, etc.).</li> <li>Implementar APIs RESTful (pode ser com Django para Python, .NET ou Node.js).</li> <li>Banco de dados para armazenar informa\u00e7\u00f5es sobre os usu\u00e1rios, conte\u00fados e hist\u00f3rico de navega\u00e7\u00e3o (ex: PostgreSQL, MongoDB).</li> <li> <p>Servi\u00e7os de recomenda\u00e7\u00e3o de conte\u00fado com machine learning (ex: TensorFlow, PyTorch).</p> </li> <li> <p>Frontend:</p> </li> <li> <p>Criar interfaces responsivas usando frameworks como React, Vue.js ou Angular.</p> </li> <li> <p>Garantir uma boa experi\u00eancia do usu\u00e1rio (UX) e uma interface intuitiva (UI), especialmente no consumo de m\u00eddia.</p> </li> <li> <p>Entrega de conte\u00fado:</p> </li> <li> <p>Utilizar uma CDN (Content Delivery Network) para distribuir o conte\u00fado globalmente com baixa lat\u00eancia.</p> </li> <li>Implementar uma estrat\u00e9gia de entrega adaptativa (HLS, DASH) para que o usu\u00e1rio receba uma qualidade de streaming adequada \u00e0 sua conex\u00e3o.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#3-design","title":"3. Design","text":"<ul> <li>Wireframes e Prototipagem: Desenvolver esbo\u00e7os das interfaces, com navega\u00e7\u00e3o clara e layout que permita f\u00e1cil consumo de conte\u00fado.</li> <li>Design da Experi\u00eancia do Usu\u00e1rio (UX): Definir fluxos de intera\u00e7\u00e3o como login, navega\u00e7\u00e3o por categorias, busca de conte\u00fado, player de v\u00eddeo/\u00e1udio, e feedback ao usu\u00e1rio.</li> <li>Identidade visual: Desenvolver a identidade visual do app, cores, tipografia e estilo, mantendo consist\u00eancia com o p\u00fablico-alvo.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#4-implementacao","title":"4. Implementa\u00e7\u00e3o","text":"<ul> <li> <p>Desenvolvimento do Backend:</p> </li> <li> <p>Criar as APIs para o gerenciamento de conte\u00fado (upload, streaming, recomenda\u00e7\u00f5es).</p> </li> <li>Configurar a CDN e servidores de m\u00eddia.</li> <li>Desenvolver um sistema de autentica\u00e7\u00e3o com OAuth2 para permitir login via redes sociais ou e-mail.</li> <li> <p>Implementar um sistema de transcodifica\u00e7\u00e3o para converter os v\u00eddeos/\u00e1udios para diferentes formatos e resolu\u00e7\u00f5es.</p> </li> <li> <p>Desenvolvimento do Frontend:</p> </li> <li> <p>Desenvolver a interface de usu\u00e1rio responsiva, com componentes de player de v\u00eddeo e \u00e1udio.</p> </li> <li>Integrar o frontend com as APIs do backend para autentica\u00e7\u00e3o, carregamento e busca de conte\u00fados.</li> <li> <p>Criar funcionalidade de recomenda\u00e7\u00e3o e playlists personalizadas.</p> </li> <li> <p>Integra\u00e7\u00e3o de pagamento: Configurar gateways de pagamento (ex: Stripe, PayPal) para planos de assinatura ou compra de conte\u00fado.</p> </li> <li> <p>Implementar seguran\u00e7a:</p> </li> <li> <p>SSL/TLS para proteger dados transmitidos.</p> </li> <li>DRM (Digital Rights Management) para proteger o conte\u00fado de c\u00f3pias ilegais.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#5-testes","title":"5. Testes","text":"<ul> <li>Testes de Unidade e Funcionais: Validar cada funcionalidade individualmente e o fluxo geral do app (upload de conte\u00fado, streaming, pagamento).</li> <li> <p>Testes de Desempenho e Escalabilidade:</p> </li> <li> <p>Simular a carga de milhares de usu\u00e1rios simult\u00e2neos.</p> </li> <li> <p>Verificar a lat\u00eancia do sistema e capacidade do servidor.</p> </li> <li> <p>Testes de UX: Realizar testes de usabilidade com usu\u00e1rios reais para avaliar a experi\u00eancia e encontrar pontos de melhoria.</p> </li> <li>Testes de Seguran\u00e7a: Testar vulnerabilidades como inje\u00e7\u00e3o de SQL, CSRF, XSS, entre outros.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#6-lancamento","title":"6. Lan\u00e7amento","text":"<ul> <li>Publica\u00e7\u00e3o:</li> <li>Publicar o app nas lojas (Google Play, Apple App Store) e na web.</li> <li> <p>Realizar um lan\u00e7amento progressivo para monitorar o desempenho com uma base de usu\u00e1rios controlada antes de expandir.</p> </li> <li> <p>Marketing:</p> </li> <li>Estrat\u00e9gias de SEO para aumentar a visibilidade.</li> <li>Utilizar campanhas de marketing digital (Google Ads, redes sociais, etc.).</li> <li>Parcerias com criadores de conte\u00fado para promover a plataforma.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/00_Projeto_Streaming/#7-manutencao-e-suporte","title":"7. Manuten\u00e7\u00e3o e Suporte","text":"<ul> <li>Monitoramento e An\u00e1lise:</li> <li>Monitorar o desempenho da infraestrutura com ferramentas como New Relic, AWS CloudWatch, etc.</li> <li> <p>Implementar uma an\u00e1lise cont\u00ednua do comportamento do usu\u00e1rio para ajustar o algoritmo de recomenda\u00e7\u00f5es.</p> </li> <li> <p>Atualiza\u00e7\u00f5es cont\u00ednuas:</p> </li> <li> <p>Realizar melhorias peri\u00f3dicas com base no feedback dos usu\u00e1rios.</p> </li> <li>Implementar novas funcionalidades e corrigir bugs.</li> <li>Escalar a infraestrutura conforme o n\u00famero de usu\u00e1rios cresce.</li> </ul> <p>Este processo garante que o desenvolvimento de um app de streaming de \u00e1udio e v\u00eddeo seja bem estruturado, escal\u00e1vel e capaz de oferecer uma boa experi\u00eancia para os usu\u00e1rios finais.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/","title":"01 - Regras de Neg\u00f3cio","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#1-regras-de-negocio-para-usuarios","title":"1. Regras de Neg\u00f3cio para Usu\u00e1rios","text":"<ul> <li>Cadastro e Login:</li> <li>Apenas usu\u00e1rios registrados podem acessar funcionalidades como cria\u00e7\u00e3o de playlists, upload de conte\u00fado e gerenciamento de conte\u00fado.</li> <li> <p>Um sistema de verifica\u00e7\u00e3o por e-mail deve ser implementado para garantir que apenas e-mails v\u00e1lidos sejam utilizados para cadastro.</p> </li> <li> <p>Perfis de Usu\u00e1rio e Permiss\u00f5es:</p> </li> <li> <p>Usu\u00e1rios b\u00e1sicos podem criar e gerenciar suas playlists pessoais, mas n\u00e3o podem fazer upload de conte\u00fado.</p> </li> <li>Criadores de conte\u00fado e administradores possuem permiss\u00f5es adicionais para fazer upload de conte\u00fado e gerenciar suas cria\u00e7\u00f5es.</li> <li> <p>Os administradores possuem acesso completo ao sistema, incluindo edi\u00e7\u00e3o e exclus\u00e3o de conte\u00fados e playlists de qualquer usu\u00e1rio.</p> </li> <li> <p>Gerenciamento de Contas:</p> </li> <li> <p>Cada usu\u00e1rio deve poder visualizar e gerenciar suas playlists e conte\u00fados.</p> </li> <li>Somente o propriet\u00e1rio de uma playlist pode edit\u00e1-la ou exclu\u00ed-la, com exce\u00e7\u00e3o dos administradores.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#2-regras-de-negocio-para-playlists","title":"2. Regras de Neg\u00f3cio para Playlists","text":"<ul> <li> <p>Cria\u00e7\u00e3o e Gerenciamento de Playlists:</p> </li> <li> <p>Um usu\u00e1rio pode criar um n\u00famero limitado de playlists (limite configur\u00e1vel) para evitar excesso de dados no sistema.</p> </li> <li>Playlists devem ter um t\u00edtulo \u00fanico dentro do contexto do usu\u00e1rio para facilitar a busca e organiza\u00e7\u00e3o.</li> <li>Conte\u00fados podem ser adicionados a uma playlist apenas uma vez; duplicatas n\u00e3o s\u00e3o permitidas.</li> <li> <p>\u00c9 permitido que o usu\u00e1rio compartilhe suas playlists publicamente se o recurso for ativado (op\u00e7\u00e3o de playlist p\u00fablica).</p> </li> <li> <p>Conte\u00fados em Playlists:</p> </li> <li> <p>Somente conte\u00fados p\u00fablicos podem ser adicionados a playlists p\u00fablicas.</p> </li> <li>Conte\u00fados privados podem ser adicionados a playlists privadas, mas n\u00e3o podem ser compartilhados ou visualizados por outros usu\u00e1rios.</li> <li>Usu\u00e1rios podem reordenar conte\u00fados dentro de suas playlists.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#3-regras-de-negocio-para-conteudos","title":"3. Regras de Neg\u00f3cio para Conte\u00fados","text":"<ul> <li> <p>Upload e Gerenciamento de Conte\u00fados:</p> </li> <li> <p>Apenas usu\u00e1rios com permiss\u00e3o de criador de conte\u00fado podem fazer uploads. O conte\u00fado deve estar nos formatos de arquivo suportados (ex.: <code>.mp4</code>, <code>.mp3</code>).</p> </li> <li>Cada conte\u00fado deve ter uma miniatura (thumbnail) e uma descri\u00e7\u00e3o para melhorar a experi\u00eancia do usu\u00e1rio e facilitar a navega\u00e7\u00e3o.</li> <li> <p>O t\u00edtulo de cada conte\u00fado deve ser \u00fanico por criador para evitar confus\u00e3o.</p> </li> <li> <p>Pol\u00edticas de Publica\u00e7\u00e3o:</p> </li> <li> <p>Todo conte\u00fado passa por uma verifica\u00e7\u00e3o automatizada para garantir que n\u00e3o contenha materiais impr\u00f3prios ou viola\u00e7\u00f5es de direitos autorais.</p> </li> <li>Criadores podem definir se seu conte\u00fado ser\u00e1 p\u00fablico ou privado.</li> <li>Conte\u00fados p\u00fablicos podem ser visualizados e adicionados a playlists de qualquer usu\u00e1rio, enquanto conte\u00fados privados s\u00e3o acess\u00edveis apenas ao criador e a playlists privadas.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#4-regras-de-negocio-para-consumo-de-conteudos","title":"4. Regras de Neg\u00f3cio para Consumo de Conte\u00fados","text":"<ul> <li>Streaming e Download:</li> <li>Conte\u00fados p\u00fablicos podem ser reproduzidos via streaming por qualquer usu\u00e1rio, desde que respeite as permiss\u00f5es de visualiza\u00e7\u00e3o.</li> <li>Downloads de conte\u00fados podem ser restritos a usu\u00e1rios premium, com limita\u00e7\u00e3o de n\u00famero de downloads mensais.</li> <li>Usu\u00e1rios podem marcar conte\u00fados como favoritos para acess\u00e1-los rapidamente, mas essa funcionalidade est\u00e1 limitada a um certo n\u00famero de favoritos por perfil b\u00e1sico.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#5-notificacoes-e-feedback","title":"5. Notifica\u00e7\u00f5es e Feedback","text":"<ul> <li> <p>Sistema de Notifica\u00e7\u00f5es:</p> </li> <li> <p>Os usu\u00e1rios devem ser notificados quando novos conte\u00fados de criadores que eles seguem s\u00e3o publicados.</p> </li> <li> <p>Notifica\u00e7\u00f5es tamb\u00e9m devem alertar sobre o status de uma playlist ou conte\u00fado, como exclus\u00f5es, altera\u00e7\u00f5es de privacidade, entre outros.</p> </li> <li> <p>Feedback e Reportes:</p> </li> <li> <p>Usu\u00e1rios devem poder reportar conte\u00fados impr\u00f3prios ou que violam as regras da plataforma.</p> </li> <li>Coment\u00e1rios e avalia\u00e7\u00f5es de conte\u00fados s\u00e3o permitidos para incentivar o engajamento e fornecer feedback aos criadores.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#6-regras-de-negocio-para-assinaturas-e-recursos-premium","title":"6. Regras de Neg\u00f3cio para Assinaturas e Recursos Premium","text":"<ul> <li> <p>Modelo de Assinatura:</p> </li> <li> <p>Usu\u00e1rios podem fazer upgrade para uma conta premium, que oferece vantagens como downloads ilimitados, acesso antecipado a conte\u00fados, e acesso exclusivo a playlists e conte\u00fados especiais.</p> </li> <li> <p>O sistema deve garantir a renova\u00e7\u00e3o autom\u00e1tica das assinaturas premium e permitir cancelamento a qualquer momento.</p> </li> <li> <p>Benef\u00edcios Premium:</p> </li> <li> <p>Assinantes premium podem ter um n\u00famero maior de playlists e favoritos, bem como maior capacidade de armazenamento de playlists.</p> </li> <li>Conte\u00fados premium (acess\u00edveis apenas por assinantes) podem ser disponibilizados para atrair novos criadores e assinantes.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#7-regras-de-seguranca-e-conformidade","title":"7. Regras de Seguran\u00e7a e Conformidade","text":"<ul> <li> <p>Pol\u00edticas de Privacidade e Compliance:</p> </li> <li> <p>Todos os dados de usu\u00e1rios devem ser armazenados em conformidade com a GDPR ou outra legisla\u00e7\u00e3o local aplic\u00e1vel.</p> </li> <li> <p>Somente administradores e o pr\u00f3prio usu\u00e1rio podem acessar dados pessoais sens\u00edveis.</p> </li> <li> <p>Limites de Acesso e Prote\u00e7\u00e3o de Dados:</p> </li> <li> <p>Taxas de requisi\u00e7\u00e3o (rate-limiting) devem ser aplicadas para evitar uso excessivo ou ataques \u00e0 API.</p> </li> <li>Um sistema de autentica\u00e7\u00e3o robusto deve ser implementado, incluindo verifica\u00e7\u00e3o de senha forte e autentica\u00e7\u00e3o multifator (2FA) para usu\u00e1rios premium ou criadores de conte\u00fado.</li> </ul> <p>Essas regras de neg\u00f3cio ajudam a definir o comportamento do app, permitindo que ele seja usado de maneira organizada, segura e eficiente tanto por usu\u00e1rios finais quanto por administradores e criadores.</p> <p>Para um aplicativo de streaming que inclui funcionalidades de cria\u00e7\u00e3o e gerenciamento de playlists e upload de conte\u00fado por criadores, as regras de neg\u00f3cio s\u00e3o essenciais para garantir uma experi\u00eancia consistente e segura para os usu\u00e1rios. Abaixo, seguem algumas regras de neg\u00f3cio que podem ser aplicadas a esse tipo de aplica\u00e7\u00e3o:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#1-regras-de-negocio-para-usuarios-detalhado","title":"1. Regras de Neg\u00f3cio para Usu\u00e1rios (Detalhado)","text":"<ul> <li> <p>Cadastro e Login:</p> </li> <li> <p>Apenas usu\u00e1rios registrados podem acessar funcionalidades como cria\u00e7\u00e3o de playlists, upload de conte\u00fado e gerenciamento de conte\u00fado.</p> </li> <li> <p>Um sistema de verifica\u00e7\u00e3o por e-mail deve ser implementado para garantir que apenas e-mails v\u00e1lidos sejam utilizados para cadastro.</p> </li> <li> <p>Perfis de Usu\u00e1rio e Permiss\u00f5es:</p> </li> <li> <p>Usu\u00e1rios b\u00e1sicos podem criar e gerenciar suas playlists pessoais, mas n\u00e3o podem fazer upload de conte\u00fado.</p> </li> <li>Criadores de conte\u00fado e administradores possuem permiss\u00f5es adicionais para fazer upload de conte\u00fado e gerenciar suas cria\u00e7\u00f5es.</li> <li> <p>Os administradores possuem acesso completo ao sistema, incluindo edi\u00e7\u00e3o e exclus\u00e3o de conte\u00fados e playlists de qualquer usu\u00e1rio.</p> </li> <li> <p>Gerenciamento de Contas:</p> </li> <li>Cada usu\u00e1rio deve poder visualizar e gerenciar suas playlists e conte\u00fados.</li> <li>Somente o propriet\u00e1rio de uma playlist pode edit\u00e1-la ou exclu\u00ed-la, com exce\u00e7\u00e3o dos administradores.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#2-regras-de-negocio-para-playlists-detalhado","title":"2. Regras de Neg\u00f3cio para Playlists (Detalhado)","text":"<ul> <li> <p>Cria\u00e7\u00e3o e Gerenciamento de Playlists:</p> </li> <li> <p>Um usu\u00e1rio pode criar um n\u00famero limitado de playlists (limite configur\u00e1vel) para evitar excesso de dados no sistema.</p> </li> <li>Playlists devem ter um t\u00edtulo \u00fanico dentro do contexto do usu\u00e1rio para facilitar a busca e organiza\u00e7\u00e3o.</li> <li>Conte\u00fados podem ser adicionados a uma playlist apenas uma vez; duplicatas n\u00e3o s\u00e3o permitidas.</li> <li> <p>\u00c9 permitido que o usu\u00e1rio compartilhe suas playlists publicamente se o recurso for ativado (op\u00e7\u00e3o de playlist p\u00fablica).</p> </li> <li> <p>Conte\u00fados em Playlists:</p> </li> <li>Somente conte\u00fados p\u00fablicos podem ser adicionados a playlists p\u00fablicas.</li> <li>Conte\u00fados privados podem ser adicionados a playlists privadas, mas n\u00e3o podem ser compartilhados ou visualizados por outros usu\u00e1rios.</li> <li>Usu\u00e1rios podem reordenar conte\u00fados dentro de suas playlists.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#3-regras-de-negocio-para-conteudos-detalhado","title":"3. Regras de Neg\u00f3cio para Conte\u00fados (Detalhado)","text":"<ul> <li> <p>Upload e Gerenciamento de Conte\u00fados:</p> </li> <li> <p>Apenas usu\u00e1rios com permiss\u00e3o de criador de conte\u00fado podem fazer uploads. O conte\u00fado deve estar nos formatos de arquivo suportados (ex.: <code>.mp4</code>, <code>.mp3</code>).</p> </li> <li>Cada conte\u00fado deve ter uma miniatura (thumbnail) e uma descri\u00e7\u00e3o para melhorar a experi\u00eancia do usu\u00e1rio e facilitar a navega\u00e7\u00e3o.</li> <li> <p>O t\u00edtulo de cada conte\u00fado deve ser \u00fanico por criador para evitar confus\u00e3o.</p> </li> <li> <p>Pol\u00edticas de Publica\u00e7\u00e3o:</p> </li> <li>Todo conte\u00fado passa por uma verifica\u00e7\u00e3o automatizada para garantir que n\u00e3o contenha materiais impr\u00f3prios ou viola\u00e7\u00f5es de direitos autorais.</li> <li>Criadores podem definir se seu conte\u00fado ser\u00e1 p\u00fablico ou privado.</li> <li>Conte\u00fados p\u00fablicos podem ser visualizados e adicionados a playlists de qualquer usu\u00e1rio, enquanto conte\u00fados privados s\u00e3o acess\u00edveis apenas ao criador e a playlists privadas.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#4-regras-de-negocio-para-consumo-de-conteudos-detalhado","title":"4. Regras de Neg\u00f3cio para Consumo de Conte\u00fados (Detalhado)","text":"<ul> <li>Streaming e Download:</li> <li>Conte\u00fados p\u00fablicos podem ser reproduzidos via streaming por qualquer usu\u00e1rio, desde que respeite as permiss\u00f5es de visualiza\u00e7\u00e3o.</li> <li>Downloads de conte\u00fados podem ser restritos a usu\u00e1rios premium, com limita\u00e7\u00e3o de n\u00famero de downloads mensais.</li> <li>Usu\u00e1rios podem marcar conte\u00fados como favoritos para acess\u00e1-los rapidamente, mas essa funcionalidade est\u00e1 limitada a um certo n\u00famero de favoritos por perfil b\u00e1sico.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#5-notificacoes-e-feedback-detalhado","title":"5. Notifica\u00e7\u00f5es e Feedback  (Detalhado)","text":"<ul> <li> <p>Sistema de Notifica\u00e7\u00f5es:</p> </li> <li> <p>Os usu\u00e1rios devem ser notificados quando novos conte\u00fados de criadores que eles seguem s\u00e3o publicados.</p> </li> <li> <p>Notifica\u00e7\u00f5es tamb\u00e9m devem alertar sobre o status de uma playlist ou conte\u00fado, como exclus\u00f5es, altera\u00e7\u00f5es de privacidade, entre outros.</p> </li> <li> <p>Feedback e Reportes:</p> </li> <li>Usu\u00e1rios devem poder reportar conte\u00fados impr\u00f3prios ou que violam as regras da plataforma.</li> <li>Coment\u00e1rios e avalia\u00e7\u00f5es de conte\u00fados s\u00e3o permitidos para incentivar o engajamento e fornecer feedback aos criadores.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#6-regras-de-negocio-para-assinaturas-e-recursos-premium-detalhado","title":"6. Regras de Neg\u00f3cio para Assinaturas e Recursos Premium  (Detalhado)","text":"<ul> <li> <p>Modelo de Assinatura:</p> </li> <li> <p>Usu\u00e1rios podem fazer upgrade para uma conta premium, que oferece vantagens como downloads ilimitados, acesso antecipado a conte\u00fados, e acesso exclusivo a playlists e conte\u00fados especiais.</p> </li> <li> <p>O sistema deve garantir a renova\u00e7\u00e3o autom\u00e1tica das assinaturas premium e permitir cancelamento a qualquer momento.</p> </li> <li> <p>Benef\u00edcios Premium:</p> </li> <li>Assinantes premium podem ter um n\u00famero maior de playlists e favoritos, bem como maior capacidade de armazenamento de playlists.</li> <li>Conte\u00fados premium (acess\u00edveis apenas por assinantes) podem ser disponibilizados para atrair novos criadores e assinantes.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/01_Regras_Neg%C3%B3cio_Streaming/#7-regras-de-negocio-para-seguranca-e-conformidade-detalhado","title":"7. Regras de Neg\u00f3cio para Seguran\u00e7a e Conformidade  (Detalhado)","text":"<ul> <li>Pol\u00edticas de Privacidade e Compliance:</li> </ul> <p>Todos os dados de usu\u00e1rios devem ser armazenados em conformidade com a GDPR ou outra legisla\u00e7\u00e3o local aplic\u00e1vel.   - Somente administradores e o pr\u00f3prio usu\u00e1rio podem acessar dados pessoais sens\u00edveis.</p> <ul> <li>Limites de Acesso e Prote\u00e7\u00e3o de Dados:</li> <li>Taxas de requisi\u00e7\u00e3o (rate-limiting) devem ser aplicadas para evitar uso excessivo ou ataques \u00e0 API.</li> <li>Um sistema de autentica\u00e7\u00e3o robusto deve ser implementado, incluindo verifica\u00e7\u00e3o de senha forte e autentica\u00e7\u00e3o multifator (2FA) para usu\u00e1rios premium ou criadores de conte\u00fado.</li> </ul> <p>Essas regras de neg\u00f3cio ajudam a definir o comportamento do app, permitindo que ele seja usado de maneira organizada, segura e eficiente tanto por usu\u00e1rios finais quanto por administradores e criadores.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/","title":"02 - Modelagem de Dados","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#projeto-fisico","title":"Projeto F\u00edsico","text":"<p>A modelagem de dados para um sistema que envolve o cadastro/login de usu\u00e1rios e o upload de conte\u00fado por criadores deve cobrir aspectos como autentica\u00e7\u00e3o, controle de permiss\u00f5es e gerenciamento de conte\u00fado. Abaixo est\u00e1 uma proposta de modelagem de dados com entidades essenciais.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#1-tabela-user-usuario","title":"1. Tabela <code>User</code> (Usu\u00e1rio)","text":"<p>Esta tabela armazenar\u00e1 os dados dos usu\u00e1rios, incluindo informa\u00e7\u00f5es b\u00e1sicas e de autentica\u00e7\u00e3o.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do usu\u00e1rio. <code>username</code> <code>VARCHAR</code> Nome de usu\u00e1rio, \u00fanico para cada usu\u00e1rio. <code>email</code> <code>VARCHAR</code> E-mail do usu\u00e1rio, \u00fanico e usado para login. <code>password_hash</code> <code>VARCHAR</code> Hash da senha do usu\u00e1rio para autentica\u00e7\u00e3o. <code>full_name</code> <code>VARCHAR</code> Nome completo do usu\u00e1rio. <code>profile_pic</code> <code>VARCHAR</code> URL da foto de perfil do usu\u00e1rio (opcional). <code>role</code> <code>VARCHAR</code> Fun\u00e7\u00e3o do usu\u00e1rio, como \"creator\" ou \"viewer\". <code>date_joined</code> <code>DATETIME</code> Data e hora do cadastro do usu\u00e1rio. <code>last_login</code> <code>DATETIME</code> \u00daltima data e hora em que o usu\u00e1rio fez login. <code>is_active</code> <code>BOOLEAN</code> Indica se o usu\u00e1rio est\u00e1 ativo ou foi suspenso. <ul> <li>Descri\u00e7\u00e3o: Esta tabela mant\u00e9m os dados principais dos usu\u00e1rios, incluindo informa\u00e7\u00f5es de login e permiss\u00f5es.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#2-tabela-content-conteudo","title":"2. Tabela <code>Content</code> (Conte\u00fado)","text":"<p>Esta tabela armazenar\u00e1 os dados do conte\u00fado carregado pelos criadores.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do conte\u00fado. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio criador do conte\u00fado. <code>title</code> <code>VARCHAR</code> T\u00edtulo do conte\u00fado. <code>description</code> <code>TEXT</code> Descri\u00e7\u00e3o detalhada do conte\u00fado. <code>file_url</code> <code>VARCHAR</code> URL do arquivo de m\u00eddia (\u00e1udio ou v\u00eddeo). <code>thumbnail_url</code> <code>VARCHAR</code> URL da imagem de miniatura do conte\u00fado. <code>content_type</code> <code>VARCHAR</code> Tipo de conte\u00fado: \"audio\" ou \"video\". <code>upload_date</code> <code>DATETIME</code> Data e hora do upload. <code>views</code> <code>INT</code> N\u00famero de visualiza\u00e7\u00f5es ou plays do conte\u00fado. <code>likes</code> <code>INT</code> N\u00famero de curtidas que o conte\u00fado recebeu. <code>is_public</code> <code>BOOLEAN</code> Indica se o conte\u00fado est\u00e1 dispon\u00edvel publicamente. <code>status</code> <code>VARCHAR</code> Status do conte\u00fado: \"published\", \"draft\", \"blocked\". <ul> <li>Descri\u00e7\u00e3o: Armazena os dados de cada conte\u00fado enviado pelos criadores, incluindo metadados, links de arquivos e status de visibilidade.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#3-tabela-role-permissoes-de-usuario","title":"3. Tabela <code>Role</code> (Permiss\u00f5es de Usu\u00e1rio)","text":"<p>Tabela para definir diferentes permiss\u00f5es de usu\u00e1rio.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da fun\u00e7\u00e3o. <code>role_name</code> <code>VARCHAR</code> Nome da fun\u00e7\u00e3o (creator, viewer). <code>description</code> <code>TEXT</code> Descri\u00e7\u00e3o das permiss\u00f5es dessa fun\u00e7\u00e3o. <ul> <li>Descri\u00e7\u00e3o: Cada usu\u00e1rio pode ter um papel (role), como criador de conte\u00fado ou visualizador.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#4-tabela-playlist-playlist","title":"4. Tabela <code>Playlist</code> (Playlist)","text":"<p>Usu\u00e1rios podem criar listas de reprodu\u00e7\u00e3o com o conte\u00fado carregado.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da playlist. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que criou a playlist. <code>title</code> <code>VARCHAR</code> T\u00edtulo da playlist. <code>description</code> <code>TEXT</code> Descri\u00e7\u00e3o da playlist. <code>is_public</code> <code>BOOLEAN</code> Indica se a playlist \u00e9 p\u00fablica ou privada. <code>creation_date</code> <code>DATETIME</code> Data de cria\u00e7\u00e3o da playlist. <ul> <li>Descri\u00e7\u00e3o: Usu\u00e1rios (criadores ou espectadores) podem organizar conte\u00fados em playlists.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#5-tabela-content_playlist-conteudo-em-playlist","title":"5. Tabela <code>Content_Playlist</code> (Conte\u00fado em Playlist)","text":"<p>Rela\u00e7\u00e3o entre conte\u00fados e playlists.</p> Campo Tipo Descri\u00e7\u00e3o <code>playlist_id</code> <code>INT</code> (FK) Refer\u00eancia \u00e0 playlist. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado. <ul> <li>Descri\u00e7\u00e3o: Relaciona conte\u00fados espec\u00edficos \u00e0s playlists criadas por usu\u00e1rios.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#6-tabela-comment-comentarios","title":"6. Tabela <code>Comment</code> (Coment\u00e1rios)","text":"<p>Usu\u00e1rios podem comentar sobre os conte\u00fados.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do coment\u00e1rio. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que fez o coment\u00e1rio. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado comentado. <code>comment_text</code> <code>TEXT</code> Texto do coment\u00e1rio. <code>comment_date</code> <code>DATETIME</code> Data e hora do coment\u00e1rio. <ul> <li>Descri\u00e7\u00e3o: Cada coment\u00e1rio est\u00e1 associado a um conte\u00fado e ao usu\u00e1rio que o postou.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#7-tabela-like-curtidas","title":"7. Tabela <code>Like</code> (Curtidas)","text":"<p>Armazena as curtidas de usu\u00e1rios nos conte\u00fados.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da curtida. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que curtiu o conte\u00fado. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado curtido. <code>like_date</code> <code>DATETIME</code> Data e hora da curtida. <ul> <li>Descri\u00e7\u00e3o: Registra as intera\u00e7\u00f5es de curtidas entre usu\u00e1rios e conte\u00fados.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#8-tabela-subscription-assinaturas","title":"8. Tabela <code>Subscription</code> (Assinaturas)","text":"<p>Gerencia as assinaturas dos usu\u00e1rios para acessar conte\u00fados premium.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico da assinatura. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que assinou. <code>start_date</code> <code>DATETIME</code> Data de in\u00edcio da assinatura. <code>end_date</code> <code>DATETIME</code> Data de t\u00e9rmino da assinatura. <code>status</code> <code>VARCHAR</code> Status da assinatura: \"active\", \"canceled\", \"expired\". <ul> <li>Descri\u00e7\u00e3o: Registra as assinaturas dos usu\u00e1rios ao servi\u00e7o para acessarem funcionalidades premium.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#9-tabela-view_history-historico-de-visualizacao","title":"9. Tabela <code>View_History</code> (Hist\u00f3rico de Visualiza\u00e7\u00e3o)","text":"<p>Armazena o hist\u00f3rico de consumo de m\u00eddia de cada usu\u00e1rio.</p> Campo Tipo Descri\u00e7\u00e3o <code>id</code> <code>INT</code> (PK) Identificador \u00fanico do hist\u00f3rico de visualiza\u00e7\u00e3o. <code>user_id</code> <code>INT</code> (FK) Refer\u00eancia ao usu\u00e1rio que assistiu/escutou o conte\u00fado. <code>content_id</code> <code>INT</code> (FK) Refer\u00eancia ao conte\u00fado visualizado/escutado. <code>view_date</code> <code>DATETIME</code> Data e hora em que o conte\u00fado foi acessado."},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#relacionamentos-principais","title":"Relacionamentos principais","text":"<ul> <li>User-Content: Cada conte\u00fado \u00e9 criado por um usu\u00e1rio (rela\u00e7\u00e3o 1:N).</li> <li>User-Playlist: Um usu\u00e1rio pode criar v\u00e1rias playlists (1:N).</li> <li>Content-Playlist: Conte\u00fados podem pertencer a v\u00e1rias playlists e vice-versa (N:M).</li> <li>User-Like-Content: Usu\u00e1rios podem curtir v\u00e1rios conte\u00fados, e cada conte\u00fado pode receber v\u00e1rias curtidas (N:M).</li> <li>User-Comment-Content: Um usu\u00e1rio pode fazer v\u00e1rios coment\u00e1rios sobre diferentes conte\u00fados (1:N).</li> </ul> <p>Esse modelo cobre os principais aspectos de um sistema de streaming com suporte a login, upload de conte\u00fado e intera\u00e7\u00f5es como curtidas e coment\u00e1rios.</p> <p>Abaixo est\u00e1 a proposta de um diagrama de classes para a modelagem de dados mencionada, considerando as entidades principais, atributos e relacionamentos:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#classes-principais","title":"Classes Principais","text":"<ol> <li> <p>User</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>username: str</code></li> <li><code>email: str</code></li> <li><code>password_hash: str</code></li> <li><code>full_name: str</code></li> <li><code>profile_pic: str</code></li> <li><code>role: str</code></li> <li><code>date_joined: datetime</code></li> <li><code>last_login: datetime</code></li> <li> <p><code>is_active: bool</code></p> </li> <li> <p>M\u00e9todos:</p> <ul> <li><code>login()</code></li> <li><code>register()</code></li> <li><code>updateProfile()</code></li> </ul> </li> <li> <p>Content</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>title: str</code></li> <li><code>description: str</code></li> <li><code>file_url: str</code></li> <li><code>thumbnail_url: str</code></li> <li><code>content_type: str</code></li> <li><code>upload_date: datetime</code></li> <li><code>views: int</code></li> <li><code>likes: int</code></li> <li><code>is_public: bool</code></li> <li><code>status: str</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>upload()</code></li> <li><code>deleteContent()</code></li> <li><code>updateContent()</code></li> </ul> </li> <li> <p>Playlist</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>title: str</code></li> <li><code>description: str</code></li> <li><code>is_public: bool</code></li> <li><code>creation_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addContent()</code></li> <li><code>removeContent()</code></li> </ul> </li> <li> <p>Comment</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>comment_text: str</code></li> <li><code>comment_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addComment()</code></li> <li><code>deleteComment()</code></li> </ul> </li> <li> <p>Like</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>like_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addLike()</code></li> <li><code>removeLike()</code></li> </ul> </li> <li> <p>Subscription</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>start_date: datetime</code></li> <li><code>end_date: datetime</code></li> <li><code>status: str</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>subscribe()</code></li> <li><code>cancelSubscription()</code></li> </ul> </li> <li> <p>ViewHistory</p> </li> <li> <p><code>id: int</code></p> </li> <li><code>view_date: datetime</code></li> <li> <p>M\u00e9todos:</p> <ul> <li><code>addView()</code></li> <li><code>getHistory()</code></li> </ul> </li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#relacionamentos","title":"Relacionamentos","text":"<ol> <li> <p>User - Content</p> <ul> <li>Rela\u00e7\u00e3o 1:N (Um usu\u00e1rio pode criar v\u00e1rios conte\u00fados).</li> <li>Um criador de conte\u00fado (<code>User</code>) possui uma cole\u00e7\u00e3o de conte\u00fados associados, o que pode ser modelado pela rela\u00e7\u00e3o de composi\u00e7\u00e3o entre <code>User</code> e <code>Content</code>.</li> </ul> </li> <li> <p>User - Playlist</p> </li> <li> <p>Rela\u00e7\u00e3o 1:N (Um usu\u00e1rio pode criar v\u00e1rias playlists).</p> </li> <li> <p>Uma playlist pode conter m\u00faltiplos conte\u00fados, e um usu\u00e1rio pode ser dono de v\u00e1rias playlists.</p> </li> <li> <p>Playlist - Content</p> </li> <li> <p>Rela\u00e7\u00e3o N:M (Uma playlist pode ter v\u00e1rios conte\u00fados, e um conte\u00fado pode estar em v\u00e1rias playlists).</p> </li> <li> <p>Essa rela\u00e7\u00e3o pode ser representada por uma classe associativa (ou intermedi\u00e1ria), ligando <code>Playlist</code> e <code>Content</code>.</p> </li> <li> <p>User - Comment</p> </li> <li> <p>Rela\u00e7\u00e3o 1:N (Um usu\u00e1rio pode fazer v\u00e1rios coment\u00e1rios).</p> </li> <li> <p>Um coment\u00e1rio sempre estar\u00e1 associado a um conte\u00fado espec\u00edfico.</p> </li> <li> <p>User - Like - Content</p> </li> <li> <p>Rela\u00e7\u00e3o N:M (Um usu\u00e1rio pode curtir v\u00e1rios conte\u00fados, e um conte\u00fado pode ter v\u00e1rias curtidas).</p> </li> <li> <p>A classe <code>Like</code> serve como a entidade intermedi\u00e1ria, conectando <code>User</code> e <code>Content</code>.</p> </li> <li> <p>User - Subscription</p> </li> <li> <p>Rela\u00e7\u00e3o 1:1 (Um usu\u00e1rio pode ter uma assinatura ativa).</p> </li> <li> <p>O usu\u00e1rio pode se inscrever ou cancelar a assinatura.</p> </li> <li> <p>User - ViewHistory - Content</p> </li> <li> <p>Rela\u00e7\u00e3o N:M (Um usu\u00e1rio pode assistir a v\u00e1rios conte\u00fados e um conte\u00fado pode ser assistido por v\u00e1rios usu\u00e1rios).</p> </li> <li>A classe <code>ViewHistory</code> serve como entidade intermedi\u00e1ria.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#diagrama-de-classes","title":"Diagrama de Classes","text":"<pre><code>+----------------+       1       +-----------------+       N        +--------------+\n|     User       |&lt;----------------|    Content     |&lt;----------------|  Playlist    |\n+----------------+                 +-----------------+                +--------------+\n| - id           |                 | - id            |                | - id         |\n| - username     |                 | - title         |                | - title      |\n| - email        |                 | - description   |                | - description|\n| - password_hash|                 | - file_url      |                | - is_public  |\n| - role         |                 | - content_type  |                | - creation_date|\n| - date_joined  |                 | - upload_date   |                +--------------+\n+----------------+                 +-----------------+                | addContent() |\n| login()        |                 | upload()        |                | removeContent()|\n| register()     |                 | deleteContent() |                +--------------+\n+----------------+                 +-----------------+\n           |                             |\n           |                             | N\n           | 1                           v\n           v                         +----------------+\n     +--------------+                 |     Comment    |\n     | Subscription |                 +----------------+\n     +--------------+                 | - id           |\n     | - id         |                 | - comment_text |\n     | - start_date |                 | - comment_date |\n     | - end_date   |                 +----------------+\n     | - status     |                 | addComment()   |\n     +--------------+                 | deleteComment()|\n     | subscribe()  |                 +----------------+\n     | cancelSub()  |\n     +--------------+\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/02_Modelagem_Streaming/#explicacao-do-diagrama","title":"Explica\u00e7\u00e3o do Diagrama","text":"<ul> <li>User: Centraliza a rela\u00e7\u00e3o com conte\u00fados, playlists, curtidas, assinaturas, hist\u00f3rico de visualiza\u00e7\u00e3o e coment\u00e1rios.</li> <li>Content: Relaciona-se diretamente com o usu\u00e1rio que o criou e pode estar em v\u00e1rias playlists.</li> <li>Playlist: Um usu\u00e1rio pode criar v\u00e1rias playlists, que por sua vez podem conter v\u00e1rios conte\u00fados.</li> <li>Comment e Like: Representam intera\u00e7\u00f5es dos usu\u00e1rios com os conte\u00fados.</li> <li>Subscription: Relaciona-se diretamente ao usu\u00e1rio, representando seu status de assinatura.</li> <li>ViewHistory: Armazena o hist\u00f3rico de visualiza\u00e7\u00e3o do usu\u00e1rio em rela\u00e7\u00e3o aos conte\u00fados consumidos.</li> </ul> <p>Este diagrama captura as intera\u00e7\u00f5es principais entre os dados de usu\u00e1rios, conte\u00fado e funcionalidades relacionadas ao streaming.</p> <p>Aqui est\u00e1 o c\u00f3digo em PlantUML para o diagrama de classes proposto:</p> <pre>b2cb55e5585d72f4ef2950020ed09eff7999a32c1d9e547437d8b20103fd16ee2cd4f1ca9bdd1f0a24b59f16f5c7bc8cb7296ac1036a90e4b32499facaf24a3d</pre><pre>7449f945f11d3859b3e2cddce5843a4e54b4b266e96269cefaefd69e4a5423ce831106dcb90e60b4c88b89099d0ea58d474f80bf4ee95cfc495515e915de22ed</pre> <p>Voc\u00ea pode copiar esse c\u00f3digo e col\u00e1-lo em um editor compat\u00edvel com PlantUML para gerar o diagrama de classes. O diagrama refletir\u00e1 os relacionamentos e atributos discutidos anteriormente.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/","title":"03 - Rest Streaming","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Para criar um aplicativo REST Django que inclua a classe <code>Content</code>, vamos seguir os passos abaixo:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#1-configuracao-inicial-do-projeto-django","title":"1. Configura\u00e7\u00e3o Inicial do Projeto Django","text":"<p>Primeiro, voc\u00ea precisar\u00e1 criar um novo projeto Django e adicionar um app para gerenciar o conte\u00fado.</p> <p>1. Adicionar o Virtual Enviroment</p> <pre><code>ctrl + shift + P\n</code></pre> <p>2. Instalar Django</p> <pre><code>pip install django\n</code></pre> <p>3. Crie um novo projeto Django:</p> <pre><code>django-admin startproject streaming_platform .\n</code></pre> <p>4. Crie um app dentro do projeto:</p> <pre><code>python manage.py startapp content_app\n</code></pre> <p>5. Instalar Rest Django Framework</p> <pre><code>pip install djangorestframework\n</code></pre> <p>6. Adicione o app no arquivo <code>settings.py</code>:</p> <pre><code>   INSTALLED_APPS = [\n       # outros apps padr\u00e3o\n       'rest_framework',\n       'content_app',\n   ]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#2-definindo-o-modelo-content","title":"2. Definindo o Modelo <code>Content</code>","text":"<p>No arquivo <code>content_app/models.py</code>, vamos definir a classe <code>Content</code> conforme o modelo proposto:</p> <pre><code>from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Content(models.Model):\n    CONTENT_TYPES = [\n        ('audio', 'Audio'),\n        ('video', 'Video'),\n    ]\n\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n    file_url = models.URLField()\n    thumbnail_url = models.URLField(blank=True, null=True)\n    content_type = models.CharField(max_length=10, choices=CONTENT_TYPES)\n    upload_date = models.DateTimeField(auto_now_add=True)\n    views = models.IntegerField(default=0)\n    likes = models.IntegerField(default=0)\n    is_public = models.BooleanField(default=True)\n    status = models.CharField(max_length=20, default='published')\n    creator = models.ForeignKey(User, related_name='contents', on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n</code></pre> <ul> <li>Explica\u00e7\u00e3o:</li> <li>O campo <code>creator</code> \u00e9 uma ForeignKey referenciando o usu\u00e1rio que criou o conte\u00fado.</li> <li><code>content_type</code> define se o conte\u00fado \u00e9 \u00e1udio ou v\u00eddeo.</li> <li><code>file_url</code> \u00e9 o campo que cont\u00e9m a URL do arquivo de m\u00eddia.</li> </ul> <p>2.1 Migrar o Banco de Dados Para aplicar as mudan\u00e7as do modelo no banco de dados, execute as migra\u00e7\u00f5es:</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre> <p>2.2. Acesso ao Django Admin</p> <pre><code>python manage.py createsuperuser\n</code></pre> <p>2.3. Rodar o nosso sistema</p> <pre><code>python manage.py runserver\n</code></pre> <p>2.4. Para visualizar classe content no Django Admin precisamos adicionar o registro no arquivo admin.py do content_app</p> <pre><code>from content_app import models\n\nadmin.site.register(models.Content)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#3-serializador-serializer-para-content","title":"3. Serializador (Serializer) para <code>Content</code>","text":"<p>No Django REST, precisamos de um serializador para transformar o modelo em um formato JSON que possa ser exposto via API.</p> <p>Crie o arquivo <code>content_app/serializers.py</code>:</p> <pre><code>from rest_framework import serializers\nfrom .models import Content\n\nclass ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Content\n        fields = '__all__'\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#4-views-para-o-content","title":"4. Views para o <code>Content</code>","text":"<p>No arquivo <code>content_app/views.py</code>, crie as views utilizando o Django REST framework para expor a API.</p> <pre><code>from rest_framework import viewsets\nfrom .models import Content\nfrom .serializers import ContentSerializer\nfrom rest_framework.permissions import IsAuthenticatedOrReadOnly\n\nclass ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\n    permission_classes = [IsAuthenticatedOrReadOnly]\n\n    def perform_create(self, serializer):\n        serializer.save(creator=self.request.user)\n</code></pre> <ul> <li>Explica\u00e7\u00e3o:</li> <li><code>ContentViewSet</code> fornece as a\u00e7\u00f5es padr\u00e3o de um ViewSet (list, create, retrieve, update, destroy).</li> <li><code>perform_create</code> sobrescreve o m\u00e9todo <code>create</code> para garantir que o criador (<code>creator</code>) seja o usu\u00e1rio logado.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#5-urls-para-o-app","title":"5. URLs para o App","text":"<p>Crie um arquivo <code>content_app/urls.py</code> e defina as rotas para o <code>ContentViewSet</code>:</p> <pre><code>from rest_framework.routers import DefaultRouter\nfrom .views import ContentViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'contents', ContentViewSet)\n\nurlpatterns = router.urls\n</code></pre> <p>Agora, no arquivo principal de URLs do projeto <code>streaming_platform/urls.py</code>, inclua o roteamento do app <code>content_app</code>:</p> <pre><code>from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('content_app.urls')),\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#6-configurar-autenticacao","title":"6. Configurar Autentica\u00e7\u00e3o","text":"<p>Como estamos utilizando o campo <code>creator</code> baseado no usu\u00e1rio logado, \u00e9 importante configurar a autentica\u00e7\u00e3o no Django REST framework.</p> <p>No arquivo <code>settings.py</code>, adicione a configura\u00e7\u00e3o para o Django REST framework:</p> <pre><code>REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.SessionAuthentication',\n        'rest_framework.authentication.BasicAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticatedOrReadOnly',\n    ],\n}\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#7-migrar-o-banco-de-dados","title":"7. Migrar o Banco de Dados","text":"<p>Para aplicar as mudan\u00e7as do modelo no banco de dados, execute as migra\u00e7\u00f5es:</p> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#8-testando-a-api","title":"8. Testando a API","text":"<p>Agora, voc\u00ea pode testar a API usando ferramentas como o Postman ou curl. Alguns endpoints dispon\u00edveis seriam:</p> <ul> <li><code>GET /api/contents/</code>: Lista todos os conte\u00fados.</li> <li><code>POST /api/contents/</code>: Cria um novo conte\u00fado (requer autentica\u00e7\u00e3o).</li> <li><code>GET /api/contents/&lt;id&gt;/</code>: Detalhes de um conte\u00fado espec\u00edfico.</li> <li><code>PUT /api/contents/&lt;id&gt;/</code>: Atualiza um conte\u00fado (requer autentica\u00e7\u00e3o).</li> <li><code>DELETE /api/contents/&lt;id&gt;/</code>: Remove um conte\u00fado (requer autentica\u00e7\u00e3o).</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#9-administracao-no-django-admin","title":"9. Administra\u00e7\u00e3o no Django Admin","text":"<p>Para facilitar a visualiza\u00e7\u00e3o dos conte\u00fados no Django Admin, voc\u00ea pode registrar o modelo <code>Content</code> no admin. No arquivo <code>content_app/admin.py</code>:</p> <pre><code>from django.contrib import admin\nfrom .models import Content\n\nadmin.site.register(Content)\n</code></pre> <p>Agora, ao acessar o painel de administra\u00e7\u00e3o do Django, voc\u00ea poder\u00e1 visualizar e gerenciar os conte\u00fados.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/03_Rest_Streaming/#resumo","title":"Resumo","text":"<p>Essa implementa\u00e7\u00e3o cria um app RESTful no Django com suporte \u00e0 cria\u00e7\u00e3o, leitura, atualiza\u00e7\u00e3o e exclus\u00e3o (CRUD) de conte\u00fados, incluindo autentica\u00e7\u00e3o e associa\u00e7\u00e3o com os criadores. Voc\u00ea pode expandir a aplica\u00e7\u00e3o para adicionar funcionalidades adicionais, como filtros ou buscas.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/","title":"04 - Consume API","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#introducao","title":"Introdu\u00e7\u00e3o","text":"<ul> <li>Para acessar a API criada no Django REST framework, siga os passos abaixo. A API est\u00e1 acess\u00edvel atrav\u00e9s de rotas prefixadas por <code>api/</code> conforme configurado no arquivo <code>urls.py</code>. Voc\u00ea pode testar a API usando ferramentas como Postman, Insomnia, ou at\u00e9 mesmo cURL no terminal.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#1-urls-principais-da-api","title":"1. URLs Principais da API","text":"<p>Com base na configura\u00e7\u00e3o do roteamento, as URLs dispon\u00edveis s\u00e3o:</p> <ul> <li>Listar todos os conte\u00fados: <code>GET /api/contents/</code></li> <li>Criar um novo conte\u00fado: <code>POST /api/contents/</code> </li> <li>Ver detalhes de um conte\u00fado espec\u00edfico: <code>GET /api/contents/&lt;id&gt;/</code></li> <li>Atualizar um conte\u00fado: <code>PUT /api/contents/&lt;id&gt;/</code> (Requer autentica\u00e7\u00e3o)</li> <li>Deletar um conte\u00fado: <code>DELETE /api/contents/&lt;id&gt;/</code> </li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#2-acessando-via-navegador","title":"2. Acessando via Navegador","text":"<p>Se voc\u00ea estiver rodando o servidor de desenvolvimento do Django localmente, use o comando:</p> <pre><code>python manage.py runserver\n</code></pre> <p>Agora, voc\u00ea pode acessar a API via navegador (ou Postman) em:</p> <ul> <li>Listar \u2014 para listar todos os conte\u00fados.</li> </ul> <p>O Django REST framework oferece uma interface de navega\u00e7\u00e3o de API embutida. Se voc\u00ea acessar a API pelo navegador, ver\u00e1 uma interface amig\u00e1vel onde pode visualizar, criar, editar e excluir registros.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#3-exemplos-de-requisicoes","title":"3. Exemplos de Requisi\u00e7\u00f5es","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#a-get-listar-todos-os-conteudos","title":"a) GET - Listar todos os conte\u00fados","text":"<p>Voc\u00ea pode listar todos os conte\u00fados dispon\u00edveis com a seguinte requisi\u00e7\u00e3o:</p> <p>Com cURL:</p> <pre><code>curl -X GET http://127.0.0.1:8000/api/contents/\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#b-post-criar-um-novo-conteudo","title":"b) POST - Criar um novo conte\u00fado","text":"<p>Para criar um novo conte\u00fado, voc\u00ea precisa estar autenticado e fornecer os dados adequados:</p> <p>No Postman:</p> <ol> <li>Defina o m\u00e9todo como <code>POST</code>.</li> <li>No campo URL, insira <code>http://127.0.0.1:8000/api/contents/</code>.</li> <li>V\u00e1 at\u00e9 a aba \"Body\" e selecione <code>raw</code> com o tipo <code>JSON</code>, e insira algo como:</li> </ol> <pre><code>{\n    \"title\": \"My Video\",\n    \"description\": \"A video description\",\n    \"file_url\": \"http://example.com/video.mp4\",\n    \"thumbnail_url\": \"http://example.com/thumbnail.jpg\",\n    \"content_type\": \"video\",\n    \"is_public\": true\n}\n</code></pre> <ol> <li>Envie a requisi\u00e7\u00e3o.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#c-put-atualizar-um-conteudo","title":"c) PUT - Atualizar um conte\u00fado","text":"<p>Com cURL:</p> <pre><code>curl -X PUT http://127.0.0.1:8000/api/contents/&lt;id&gt;/ \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n        \"title\": \"Updated Video Title\",\n        \"description\": \"Updated description\"\n      }'\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#d-delete-remover-um-conteudo","title":"d) DELETE - Remover um conte\u00fado","text":"<p>Para deletar um conte\u00fado:</p> <p>Com cURL:</p> <pre><code>curl -X DELETE http://127.0.0.1:8000/api/contents/&lt;id&gt;/\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/04_Consume_Streaming/#resumo","title":"Resumo","text":"<ol> <li>Acesse a API via <code>http://127.0.0.1:8000/api/contents/</code>.</li> <li>Use ferramentas como Postman ou cURL para testar os endpoints.</li> <li>Adicione filtros ou funcionalidades adicionais conforme necess\u00e1rio.</li> </ol> <p>Assim, a API est\u00e1 configurada e pronta para ser consumida por frontends, aplicativos m\u00f3veis ou outras aplica\u00e7\u00f5es REST.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/","title":"05 - Playlist -Relacionamento NxN","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#playlist","title":"Playlist","text":"<p>Para criar o modelo <code>Playlist</code> conforme a modelagem mencionada, ele deve ter relacionamentos com as classes <code>Content</code> e <code>User</code>. A <code>Playlist</code> representar\u00e1 uma cole\u00e7\u00e3o de conte\u00fados (\u00e1udios ou v\u00eddeos) que pertence a um usu\u00e1rio espec\u00edfico.</p> <p>Abaixo est\u00e1 o c\u00f3digo para definir o modelo <code>Playlist</code> no Django, assumindo que voc\u00ea j\u00e1 possui as classes <code>Content</code> e <code>User</code> configuradas.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#modelo-playlist","title":"Modelo <code>Playlist</code>","text":"<pre><code>from django.db import models\nfrom django.contrib.auth.models import User\nfrom content_app.models import Content  # Assumindo que o modelo Content est\u00e1 no app 'content_app'\n\nclass Playlist(models.Model):\n    title = models.CharField(max_length=255)  # T\u00edtulo da playlist\n    description = models.TextField(blank=True, null=True)  # Descri\u00e7\u00e3o opcional da playlist\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='playlists')  # Propriet\u00e1rio da playlist\n    contents = models.ManyToManyField(Content, related_name='playlists')  # Conte\u00fados inclu\u00eddos na playlist\n    created_at = models.DateTimeField(auto_now_add=True)  # Data de cria\u00e7\u00e3o\n    updated_at = models.DateTimeField(auto_now=True)  # Data de \u00faltima atualiza\u00e7\u00e3o\n\n    class Meta:\n        ordering = ['-created_at']\n        verbose_name = 'Playlist'\n        verbose_name_plural = 'Playlists'\n\n    def __str__(self):\n        return self.title\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#explicacao-dos-campos","title":"Explica\u00e7\u00e3o dos Campos","text":"<ol> <li><code>title</code>: Nome da playlist.</li> <li><code>description</code>: Descri\u00e7\u00e3o opcional, para explicar o prop\u00f3sito da playlist ou a sele\u00e7\u00e3o de conte\u00fados.</li> <li><code>user</code>: Chave estrangeira que faz refer\u00eancia ao modelo <code>User</code>, representando o dono da playlist.</li> <li><code>contents</code>: Relacionamento <code>ManyToMany</code> com <code>Content</code>, permitindo que v\u00e1rios conte\u00fados sejam adicionados \u00e0 playlist.</li> <li><code>created_at</code> e <code>updated_at</code>: Campos de data para registrar a cria\u00e7\u00e3o e a \u00faltima atualiza\u00e7\u00e3o da playlist.</li> </ol> <p>Para tornar o modelo <code>Playlist</code> acess\u00edvel via API REST no Django, vamos definir o serializador, as views e as URLs usando o Django REST Framework. Dessa forma, ser\u00e1 poss\u00edvel criar, listar, atualizar e deletar playlists, al\u00e9m de adicionar ou remover conte\u00fados de uma playlist.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#1-definindo-o-serializador","title":"1. Definindo o Serializador","text":"<p>O serializador converte as inst\u00e2ncias do modelo <code>Playlist</code> para JSON e valida os dados recebidos.</p> <p>Crie um arquivo <code>serializers.py</code> dentro do seu app, se ele ainda n\u00e3o existir.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#serializerspy","title":"<code>serializers.py</code>","text":"<pre><code>from rest_framework import serializers\nfrom .models import Playlist\nfrom content.models import Content\n\nclass ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Content\n        fields = ['id', 'title', 'file_url', 'thumbnail_url', 'content_type']\n\nclass PlaylistSerializer(serializers.ModelSerializer):\n    contents = ContentSerializer(many=True, read_only=True)\n    content_ids = serializers.PrimaryKeyRelatedField(\n        queryset=Content.objects.all(), write_only=True, many=True, source='contents'\n    )\n\n    class Meta:\n        model = Playlist\n        fields = ['id', 'title', 'description', 'user', 'contents', 'content_ids', 'created_at']\n        read_only_fields = ['user', 'created_at']\n\n    def create(self, validated_data):\n        content_data = validated_data.pop('contents', [])\n        playlist = super().create(validated_data)\n        playlist.contents.set(content_data)\n        return playlist\n\n    def update(self, instance, validated_data):\n        content_data = validated_data.pop('contents', None)\n        playlist = super().update(instance, validated_data)\n        if content_data is not None:\n            playlist.contents.set(content_data)\n        return playlist\n</code></pre> <ul> <li><code>contents</code>: Serializa os conte\u00fados da playlist de forma detalhada.</li> <li><code>content_ids</code>: Permite adicionar conte\u00fados \u00e0 playlist usando IDs.</li> <li><code>user</code>: \u00c9 preenchido automaticamente na view com o usu\u00e1rio autenticado.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#2-definindo-as-views","title":"2. Definindo as Views","text":"<p>Vamos usar o Django REST Framework ViewSets para definir as opera\u00e7\u00f5es de CRUD na <code>Playlist</code>.</p> <p>Crie ou edite o arquivo <code>views.py</code> no seu app.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#viewspy","title":"<code>views.py</code>","text":"<pre><code>from rest_framework import viewsets, permissions\nfrom .models import Playlist\nfrom .serializers import PlaylistSerializer\n\nclass PlaylistViewSet(viewsets.ModelViewSet):\n    queryset = Playlist.objects.all()\n    serializer_class = PlaylistSerializer\n\n    def perform_create(self, serializer):\n        serializer.save(user=self.request.user)\n\n    def get_queryset(self):\n        # Permite que o usu\u00e1rio veja apenas suas pr\u00f3prias playlists\n        return self.queryset.filter(user=self.request.user)\n</code></pre> <ul> <li><code>perform_create</code>: Define o usu\u00e1rio autenticado como propriet\u00e1rio da playlist.</li> <li><code>get_queryset</code>: Filtra as playlists para mostrar apenas as pertencentes ao usu\u00e1rio autenticado.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#3-definindo-as-urls","title":"3. Definindo as URLs","text":"<p>Crie ou edite o arquivo <code>urls.py</code> no seu app e configure as URLs para o endpoint <code>Playlist</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#urlspy","title":"<code>urls.py</code>","text":"<pre><code>#content_app/urls.py\nfrom django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom .views import PlaylistViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'playlists', PlaylistViewSet, basename='playlist')\n\nurlpatterns = [\n    path('', include(router.urls)),\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#4-testando-a-api","title":"4. Testando a API","text":"<p>Com o Django REST Framework, voc\u00ea pode acessar e interagir com a API nos seguintes endpoints:</p> <ul> <li><code>GET /api/playlists/</code> - Listar todas as playlists do usu\u00e1rio autenticado.</li> <li><code>POST /api/playlists/</code> - Criar uma nova playlist (enviar <code>title</code>, <code>description</code> e <code>content_ids</code>).</li> <li><code>GET /api/playlists/&lt;id&gt;/</code> - Obter detalhes de uma playlist espec\u00edfica.</li> <li><code>PUT /api/playlists/&lt;id&gt;/</code> - Atualizar uma playlist existente (enviar <code>title</code>, <code>description</code>, e <code>content_ids</code>).</li> <li><code>DELETE /api/playlists/&lt;id&gt;/</code> - Excluir uma playlist espec\u00edfica.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/05_Playlist%20NxN/#6-django-shell","title":"6. Django Shell","text":"<p>Com esse modelo, \u00e9 poss\u00edvel realizar opera\u00e7\u00f5es no Django Shell para criar playlists, adicionar conte\u00fados e verificar quais playlists pertencem a um usu\u00e1rio ou cont\u00eam um conte\u00fado espec\u00edfico.</p> <pre><code>python manage.py shell\n</code></pre> <pre><code>from content.models import Content\nfrom myapp.models import Playlist  # Substitua 'myapp' pelo nome do seu app\nfrom django.contrib.auth.models import User\n\n# Criando um usu\u00e1rio para teste\nuser = User.objects.create(username=\"testuser\")\n\n# Criando alguns conte\u00fados\ncontent1 = Content.objects.create(title=\"Video 1\", file_url=\"https://example.com/video1.mp4\")\ncontent2 = Content.objects.create(title=\"Audio 1\", file_url=\"https://example.com/audio1.mp3\")\n\n# Criando uma playlist e adicionando conte\u00fados\nplaylist = Playlist.objects.create(title=\"Minha Playlist\", user=user)\nplaylist.contents.add(content1, content2)\n\n# Verificando os conte\u00fados na playlist\nfor content in playlist.contents.all():\n    print(content.title)\n</code></pre> <p>Com essa estrutura, voc\u00ea pode facilmente gerenciar playlists associadas a conte\u00fados e usu\u00e1rios.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/","title":"06 - Django Shell","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Django Shell \u00e9 uma ferramenta interativa extremamente \u00fatil para trabalhar diretamente com os dados da sua aplica\u00e7\u00e3o, testar funcionalidades, e manipular modelos de forma r\u00e1pida. No caso do app de streaming de \u00e1udio e v\u00eddeo que criamos, o Django Shell pode ser usado para executar v\u00e1rias opera\u00e7\u00f5es no banco de dados sem precisar criar views ou usar a interface do admin.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#acessando-o-django-shell","title":"Acessando o Django Shell","text":"<p>Para abrir o Django Shell, voc\u00ea pode executar o seguinte comando no terminal, dentro do diret\u00f3rio do seu projeto Django:</p> <pre><code>python manage.py shell\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#possibilidades-no-django-shell","title":"Possibilidades no Django Shell","text":"<p>Aqui est\u00e3o algumas opera\u00e7\u00f5es que voc\u00ea pode realizar diretamente no shell, utilizando o modelo <code>Content</code> que criamos no app.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#1-criar-um-novo-conteudo","title":"1. Criar um novo conte\u00fado","text":"<p>No Django Shell, voc\u00ea pode criar novos registros no banco de dados, sem precisar usar o formul\u00e1rio HTML.</p> <pre><code>from content.models import Content\n\n# Criar um novo objeto de conte\u00fado\ncontent = Content.objects.create(\n    title=\"Django Tutorial\",\n    description=\"A comprehensive tutorial on Django framework.\",\n    file_url=\"https://example.com/videos/django_tutorial.mp4\",\n    thumbnail_url=\"https://example.com/thumbnails/django_thumb.jpg\",\n    content_type=\"video\",\n    is_public=True\n)\n\nprint(content)  # Ver o conte\u00fado criado\n</code></pre> <p>Esse c\u00f3digo cria um novo conte\u00fado e salva diretamente no banco de dados. O <code>Content.objects.create()</code> combina a cria\u00e7\u00e3o e o salvamento em uma \u00fanica linha.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#2-listar-todos-os-conteudos","title":"2. Listar todos os conte\u00fados","text":"<p>Para obter todos os conte\u00fados que foram criados at\u00e9 agora, voc\u00ea pode usar o m\u00e9todo <code>all()</code> do queryset.</p> <pre><code>contents = Content.objects.all()\nfor content in contents:\n    print(content.title, content.description)\n</code></pre> <p>Isso ir\u00e1 listar todos os conte\u00fados cadastrados, mostrando o t\u00edtulo e a descri\u00e7\u00e3o de cada um.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#3-filtrar-conteudos","title":"3. Filtrar conte\u00fados","text":"<p>Voc\u00ea pode filtrar registros espec\u00edficos com base em crit\u00e9rios. Por exemplo, listar apenas os conte\u00fados p\u00fablicos (<code>is_public=True</code>):</p> <pre><code>public_contents = Content.objects.filter(is_public=True)\nfor content in public_contents:\n    print(f\"T\u00edtulo: {content.title}, P\u00fablico: {content.is_public}\")\n</code></pre> <p>Ou buscar por tipo de conte\u00fado, como todos os v\u00eddeos:</p> <pre><code>videos = Content.objects.filter(content_type=\"video\")\nfor video in videos:\n    print(f\"V\u00eddeo: {video.title}\")\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#4-atualizar-um-conteudo-existente","title":"4. Atualizar um conte\u00fado existente","text":"<p>No Django Shell, voc\u00ea pode buscar um objeto e atualiz\u00e1-lo. Vamos modificar um conte\u00fado espec\u00edfico:</p> <pre><code># Encontrar um conte\u00fado pelo ID (ou por outro campo)\ncontent_to_update = Content.objects.get(id=1)\n\n# Atualizar os campos\ncontent_to_update.title = \"Updated Django Tutorial\"\ncontent_to_update.description = \"Updated description for the Django tutorial.\"\ncontent_to_update.save()  # Salvar as altera\u00e7\u00f5es no banco de dados\n\nprint(\"Conte\u00fado atualizado:\", content_to_update.title, content_to_update.description)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#5-excluir-um-conteudo","title":"5. Excluir um conte\u00fado","text":"<p>Se voc\u00ea quiser remover um conte\u00fado do banco de dados, pode usar o m\u00e9todo <code>delete()</code>:</p> <pre><code># Encontrar o conte\u00fado pelo ID e deletar\ncontent_to_delete = Content.objects.get(id=1)\ncontent_to_delete.delete()\n\nprint(\"Conte\u00fado deletado com sucesso!\")\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#6-consultas-avancadas","title":"6. Consultas avan\u00e7adas","text":"<p>Voc\u00ea tamb\u00e9m pode realizar consultas mais complexas, como ordenar os conte\u00fados por t\u00edtulo ou buscar aqueles criados recentemente:</p> <ul> <li>Ordenar por t\u00edtulo:</li> </ul> <pre><code>sorted_contents = Content.objects.order_by('title')\nfor content in sorted_contents:\n    print(content.title)\n</code></pre> <ul> <li>Filtrar por data de cria\u00e7\u00e3o (supondo que o modelo tem um campo <code>created_at</code>):</li> </ul> <pre><code>from django.utils import timezone\nrecent_contents = Content.objects.filter(created_at__gte=timezone.now() - timezone.timedelta(days=7))\nfor content in recent_contents:\n    print(content.title)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#7-verificar-metodos-personalizados-se-houver","title":"7. Verificar m\u00e9todos personalizados (se houver)","text":"<p>Se voc\u00ea tiver m\u00e9todos personalizados no modelo <code>Content</code>, pode test\u00e1-los diretamente no Django Shell.</p> <p>Por exemplo, se voc\u00ea tiver um m\u00e9todo que retorna se o conte\u00fado \u00e9 um v\u00eddeo:</p> <pre><code>class Content(models.Model):\n    # campos...\n\n    def is_video(self):\n        return self.content_type == 'video'\n</code></pre> <p>Voc\u00ea pode test\u00e1-lo no shell assim:</p> <pre><code>content = Content.objects.get(id=1)\nprint(content.is_video())  # True se for um v\u00eddeo, False se for \u00e1udio\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#8-verificar-a-contagem-de-conteudos","title":"8. Verificar a contagem de conte\u00fados","text":"<p>Se voc\u00ea quiser ver quantos conte\u00fados j\u00e1 foram cadastrados no total ou em categorias espec\u00edficas:</p> <pre><code># Total de conte\u00fados\ntotal_contents = Content.objects.count()\nprint(\"Total de conte\u00fados:\", total_contents)\n\n# Total de v\u00eddeos\nvideo_count = Content.objects.filter(content_type='video').count()\nprint(\"Total de v\u00eddeos:\", video_count)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Shell_Streaming/#conclusao","title":"Conclus\u00e3o","text":"<p>O Django Shell permite explorar o modelo de dados do seu app rapidamente, sem a necessidade de criar views, templates ou interagir com a API. Ele \u00e9 muito \u00fatil para testar funcionalidades, realizar consultas, manipular dados e garantir que os dados estejam sendo gerados e tratados conforme esperado. No contexto de um app de streaming, voc\u00ea pode facilmente listar, criar, atualizar e deletar conte\u00fados de \u00e1udio e v\u00eddeo diretamente pelo shell, otimizando o desenvolvimento e a manuten\u00e7\u00e3o da aplica\u00e7\u00e3o.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Swagger/","title":"06 - Swagger","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Swagger/#introducao-ao-swagger","title":"Introdu\u00e7\u00e3o ao Swagger","text":"<p>Para adicionar o Swagger ao seu projeto Django com Django REST Framework, voc\u00ea pode usar a biblioteca drf-yasg (Yet Another Swagger Generator). Esta biblioteca fornece uma interface Swagger para documentar e testar sua API REST.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Swagger/#passos-para-configurar-o-swagger-com-drf-yasg","title":"Passos para Configurar o Swagger com <code>drf-yasg</code>","text":"<ol> <li>Instalar o <code>drf-yasg</code></li> </ol> <p>Execute o seguinte comando para instalar a biblioteca <code>drf-yasg</code>:</p> <pre><code>pip install drf-yasg\n</code></pre> <ol> <li>Configurar o <code>drf-yasg</code> no Projeto</li> </ol> <p>Abra o arquivo <code>urls.py</code> do seu projeto Django (geralmente o <code>urls.py</code> no diret\u00f3rio principal do projeto) e adicione as seguintes configura\u00e7\u00f5es para incluir a documenta\u00e7\u00e3o Swagger.</p> <pre><code>#streaming_platform/urls.py\nfrom django.urls import path, re_path\nfrom rest_framework import permissions\nfrom drf_yasg.views import get_schema_view\nfrom drf_yasg import openapi\n\n# Configura\u00e7\u00e3o do Swagger\nschema_view = get_schema_view(\n    openapi.Info(\n        title=\"API de Conte\u00fados\",\n        default_version='v1',\n        description=\"Documenta\u00e7\u00e3o da API para o app de streaming de \u00e1udio e v\u00eddeo\",\n        terms_of_service=\"https://www.google.com/policies/terms/\",\n        contact=openapi.Contact(email=\"suporte@exemplo.com\"),\n        license=openapi.License(name=\"Licen\u00e7a BSD\"),\n    ),\n    public=True,\n    permission_classes=(permissions.AllowAny,),\n)\n\nurlpatterns = [\n    # Suas outras URLs\n    path('admin/', admin.site.urls),\n    path('api/', include('app.urls')),  # Inclua as URLs do seu app\n\n    # URLs do Swagger\n    re_path(r'^swagger/$', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    re_path(r'^redoc/$', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n]\n</code></pre> <ol> <li>Acessar a Documenta\u00e7\u00e3o Swagger e ReDoc</li> </ol> <p>Com a configura\u00e7\u00e3o acima, voc\u00ea ter\u00e1 acesso a dois tipos de documenta\u00e7\u00e3o:</p> <ul> <li> <p>Swagger UI: Interface de documenta\u00e7\u00e3o interativa. Acesse em:</p> <pre><code>http://localhost:8000/swagger/\n</code></pre> </li> <li> <p>ReDoc: Alternativa ao Swagger com uma interface de documenta\u00e7\u00e3o mais moderna. Acesse em:</p> <pre><code>http://localhost:8000/redoc/\n</code></pre> </li> <li> <p>Testar a Documenta\u00e7\u00e3o</p> </li> </ul> <p>Ao acessar <code>http://localhost:8000/swagger/</code>, voc\u00ea ver\u00e1 a documenta\u00e7\u00e3o de sua API com base nas views definidas e nos par\u00e2metros dos serializadores. A partir do Swagger, voc\u00ea tamb\u00e9m pode testar diretamente as endpoints da sua API, enviando requisi\u00e7\u00f5es com diferentes par\u00e2metros.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/06_Swagger/#configuracao-opcional","title":"Configura\u00e7\u00e3o Opcional","text":"<p>Para personalizar ainda mais o Swagger, voc\u00ea pode ajustar o <code>schema_view</code> no arquivo <code>urls.py</code> adicionando mais informa\u00e7\u00f5es ou incluindo permiss\u00f5es espec\u00edficas.</p> <p>Esses passos devem ser suficientes para configurar e visualizar o Swagger em seu projeto Django, facilitando o uso e a documenta\u00e7\u00e3o da sua API.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/07_Carga%20de%20Dados/","title":"07 - Cargas de Dados","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/07_Carga%20de%20Dados/#1-estrutura-do-json-contentsjson","title":"\u2705 1. Estrutura do JSON (<code>contents.json</code>)","text":"<p>Salve este conte\u00fado como <code>contents.json</code> na raiz do projeto ou em um diret\u00f3rio de sua escolha:</p> <pre><code>[\n  {\n    \"username\": \"criador1\",\n    \"title\": \"T\u00edtulo V\u00eddeo 1\",\n    \"description\": \"Descri\u00e7\u00e3o do v\u00eddeo 1\",\n    \"content_type\": \"video\",\n    \"file_url\": \"https://example.com/media/video1.mp4\",\n    \"thumbnail_url\": \"https://example.com/media/thumb1.jpg\"\n  },\n  {\n    \"username\": \"criador2\",\n    \"title\": \"T\u00edtulo \u00c1udio 2\",\n    \"description\": \"Descri\u00e7\u00e3o do \u00e1udio 2\",\n    \"content_type\": \"audio\",\n    \"file_url\": \"https://example.com/media/audio2.mp3\",\n    \"thumbnail_url\": \"https://example.com/media/thumb2.jpg\"\n  }\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/07_Carga%20de%20Dados/#2-comando-customizado-adaptado","title":"\u2705 2. Comando Customizado Adaptado","text":"<p>Crie o comando:</p> <p>\ud83d\udcc1 <code>seu_app/management/commands/load_contents_json.py</code></p> <pre><code>import json\nfrom django.core.management.base import BaseCommand\nfrom content.models import Content\nfrom django.contrib.auth.models import User\nfrom pathlib import Path\n\nclass Command(BaseCommand):\n    help = 'Carrega conte\u00fados a partir de um arquivo JSON'\n\n    def add_arguments(self, parser):\n        parser.add_argument('json_path', type=str, help='Caminho para o arquivo JSON')\n\n    def handle(self, *args, **kwargs):\n        json_path = kwargs['json_path']\n        json_file = Path(json_path)\n\n        if not json_file.exists():\n            self.stderr.write(self.style.ERROR(f\"Arquivo n\u00e3o encontrado: {json_path}\"))\n            return\n\n        with open(json_file, 'r', encoding='utf-8') as f:\n            data = json.load(f)\n\n        for item in data:\n            try:\n                user = User.objects.get(username=item['username'])\n                Content.objects.create(\n                    title=item['title'],\n                    description=item['description'],\n                    content_type=item['content_type'],\n                    file_url=item['file_url'],\n                    thumbnail_url=item['thumbnail_url'],\n                    owner=user\n                )\n                self.stdout.write(self.style.SUCCESS(f\"Conte\u00fado criado: {item['title']}\"))\n            except User.DoesNotExist:\n                self.stderr.write(self.style.WARNING(f\"Usu\u00e1rio n\u00e3o encontrado: {item['username']}\"))\n            except Exception as e:\n                self.stderr.write(self.style.ERROR(f\"Erro ao criar conte\u00fado: {e}\"))\n\n        self.stdout.write(self.style.SUCCESS('Importa\u00e7\u00e3o finalizada.'))\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/07_Carga%20de%20Dados/#3-executar-o-comando","title":"\u2705 3. Executar o Comando","text":"<p>Coloque o arquivo <code>contents.json</code> no diret\u00f3rio do projeto ou informe o caminho correto.</p> <p>Execute com:</p> <pre><code>python manage.py load_contents_json contents.json\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/","title":"08 - Cross-Origin","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Para habilitar o Cross-Origin Resource Sharing (CORS) no Django, voc\u00ea pode utilizar o pacote <code>django-cors-headers</code>. Ele permite configurar quais dom\u00ednios externos t\u00eam permiss\u00e3o para acessar sua API, especialmente \u00fatil para permitir que um front-end hospedado em um dom\u00ednio diferente consuma dados da sua aplica\u00e7\u00e3o Django. Veja o passo a passo:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/#passo-1-instalar-o-django-cors-headers","title":"Passo 1: Instalar o <code>django-cors-headers</code>","text":"<p>No terminal, execute:</p> <pre><code>pip install django-cors-headers\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/#passo-2-configurar-o-django-cors-headers","title":"Passo 2: Configurar o <code>django-cors-headers</code>","text":"<p>No arquivo <code>settings.py</code>, adicione <code>'corsheaders'</code> \u00e0 lista de aplicativos instalados:</p> <pre><code>INSTALLED_APPS = [\n    ...,\n    'corsheaders',\n    ...,\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/#passo-3-adicionar-o-middleware","title":"Passo 3: Adicionar o middleware","text":"<p>Adicione o middleware <code>CorsMiddleware</code> logo no in\u00edcio da lista de middlewares em <code>settings.py</code>:</p> <pre><code>MIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    ...,\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/#passo-4-configurar-os-dominios-permitidos","title":"Passo 4: Configurar os dom\u00ednios permitidos","text":"<p>Existem duas op\u00e7\u00f5es principais para configurar os dom\u00ednios que podem acessar sua API:</p> <ol> <li>Permitir todos os dom\u00ednios (n\u00e3o recomendado para produ\u00e7\u00e3o):</li> </ol> <pre><code>   CORS_ALLOW_ALL_ORIGINS = True\n</code></pre> <ol> <li>Permitir dom\u00ednios espec\u00edficos:</li> </ol> <pre><code>   CORS_ALLOWED_ORIGINS = [\n       \"https://example.com\",\n       \"https://sub.example.com\",\n       \"http://localhost:3000\",  # Exemplo para um app local\n   ]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/08_CorsOrigin/#passo-5-outras-configuracoes-uteis","title":"Passo 5: Outras configura\u00e7\u00f5es \u00fateis","text":"<ul> <li>Permitir credenciais (cookies e autentica\u00e7\u00e3o):</li> </ul> <pre><code>   CORS_ALLOW_CREDENTIALS = True\n</code></pre> <ul> <li>Permitir cabe\u00e7alhos espec\u00edficos:</li> </ul> <pre><code>   CORS_ALLOW_HEADERS = ['content-type', 'authorization']\n</code></pre> <p>Com isso, seu Django estar\u00e1 configurado para aceitar requisi\u00e7\u00f5es cross-origin de acordo com as permiss\u00f5es definidas.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/","title":"09 - Fetch consume API","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Para criar um aplicativo HTML/JavaScript que consome o endpoint <code>contents</code> da API Django REST, podemos usar fetch API para fazer as requisi\u00e7\u00f5es. Vou fornecer uma estrutura b\u00e1sica com um exemplo funcional que faz as opera\u00e7\u00f5es de GET para listar o conte\u00fado e POST para criar um novo conte\u00fado.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/#passos-para-implementacao","title":"Passos para Implementa\u00e7\u00e3o","text":"<ol> <li>Estrutura HTML: Vamos criar um formul\u00e1rio para adicionar novo conte\u00fado e uma tabela para listar os conte\u00fados.</li> <li>JavaScript: Fun\u00e7\u00f5es para realizar as requisi\u00e7\u00f5es HTTP utilizando <code>fetch</code>.</li> <li>CSS: Estiliza\u00e7\u00e3o b\u00e1sica para tornar a interface mais atraente.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/#1-criacao-do-arquivo-htmljavascript","title":"1. Cria\u00e7\u00e3o do arquivo HTML/JavaScript","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/#arquivo-indexhtml","title":"Arquivo: <code>index.html</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;App de Conte\u00fado&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;h1&gt;Conte\u00fados Dispon\u00edveis&lt;/h1&gt;\n\n    &lt;!-- Formul\u00e1rio para adicionar conte\u00fado --&gt;\n    &lt;div class=\"form-section\"&gt;\n        &lt;h2&gt;Adicionar Novo Conte\u00fado&lt;/h2&gt;\n        &lt;form id=\"contentForm\"&gt;\n            &lt;input type=\"text\" id=\"title\" placeholder=\"T\u00edtulo\" required&gt;\n            &lt;input type=\"text\" id=\"description\" placeholder=\"Descri\u00e7\u00e3o\" required&gt;\n            &lt;input type=\"url\" id=\"file_url\" placeholder=\"URL do arquivo\" required&gt;\n            &lt;input type=\"url\" id=\"thumbnail_url\" placeholder=\"URL da miniatura\" &gt;\n            &lt;select id=\"content_type\"&gt;\n                &lt;option value=\"video\"&gt;V\u00eddeo&lt;/option&gt;\n                &lt;option value=\"audio\"&gt;\u00c1udio&lt;/option&gt;\n            &lt;/select&gt;\n            &lt;label for=\"is_public\"&gt;P\u00fablico?&lt;/label&gt;\n            &lt;input type=\"checkbox\" id=\"is_public\" checked&gt;\n            &lt;input type=\"text\" id=\"creator\" value=\"1\" placeholder=\"Criador Admin = 1\" required&gt; \n            &lt;button type=\"submit\"&gt;Adicionar Conte\u00fado&lt;/button&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Listagem de conte\u00fados --&gt;\n    &lt;div class=\"content-list\"&gt;\n        &lt;h2&gt;Lista de Conte\u00fados&lt;/h2&gt;\n        &lt;table id=\"contentTable\"&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;ID&lt;/th&gt;\n                    &lt;th&gt;T\u00edtulo&lt;/th&gt;\n                    &lt;th&gt;Descri\u00e7\u00e3o&lt;/th&gt;\n                    &lt;th&gt;Tipo&lt;/th&gt;\n                    &lt;th&gt;P\u00fablico&lt;/th&gt;\n                    &lt;th&gt;Criador&lt;/th&gt;\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody&gt;\n                &lt;!-- Conte\u00fados ser\u00e3o inseridos aqui --&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/div&gt;\n\n   &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>body {\n    font-family: Arial, sans-serif;\n    padding: 20px;\n    background-color: #f4f4f4;\n}\nh1 {\n    color: #333;\n}\n.content-list {\n    margin-top: 20px;\n}\n.content-list table {\n    width: 100%;\n    border-collapse: collapse;\n}\n.content-list th, .content-list td {\n    border: 1px solid #ccc;\n    padding: 10px;\n    text-align: left;\n}\n.form-section {\n    margin-bottom: 20px;\n}\n.form-section input, .form-section button {\n    padding: 10px;\n    margin-right: 10px;\n}\n</code></pre> <pre><code>const apiUrl = \"http://127.0.0.1:8000/api/contents/\";\n\n// Fun\u00e7\u00e3o para obter e listar conte\u00fados\nasync function fetchContents() {\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    const contentTable = document.querySelector(\"#contentTable tbody\");\n    contentTable.innerHTML = \"\";\n\n    data.forEach((content) =&gt; {\n      const row = `\n                        &lt;tr&gt;\n                            &lt;td&gt;${content.id}&lt;/td&gt;\n                            &lt;td&gt;${content.title}&lt;/td&gt;\n                            &lt;td&gt;${content.description}&lt;/td&gt;\n                            &lt;td&gt;${content.content_type}&lt;/td&gt;\n                            &lt;td&gt;${content.is_public ? \"Sim\" : \"N\u00e3o\"}&lt;/td&gt;\n                            &lt;td&gt;${content.creator}&lt;/td&gt;\n                        &lt;/tr&gt;\n                    `;\n      contentTable.innerHTML += row;\n    });\n  } catch (error) {\n    console.error(\"Erro ao buscar conte\u00fados:\", error);\n  }\n}\n\n// Fun\u00e7\u00e3o para adicionar novo conte\u00fado\nasync function addContent(event) {\n  event.preventDefault();\n\n  const titleElement = document.getElementById(\"title\");\n  const descriptionElement = document.getElementById(\"description\");\n  const fileUrlElement = document.getElementById(\"file_url\");\n  const thumbnailUrlElement = document.getElementById(\"thumbnail_url\");\n  const contentTypeElement = document.getElementById(\"content_type\");\n  const isPublicElement = document.getElementById(\"is_public\");\n  const creatorElement = document.getElementById(\"creator\");\n\n  if (!titleElement || !descriptionElement || !fileUrlElement || !thumbnailUrlElement || !contentTypeElement || !isPublicElement || !creatorElement) {\n    alert(\"Erro: Um ou mais elementos do formul\u00e1rio n\u00e3o foram encontrados.\");\n    return;\n  }\n\n  const title = titleElement.value;\n  const description = descriptionElement.value;\n  const file_url = fileUrlElement.value;\n  const thumbnail_url = thumbnailUrlElement.value;\n  const content_type = contentTypeElement.value;\n  const is_public = isPublicElement.checked;\n  const creator = creatorElement.value;\n\n  const contentData = {\n    title,\n    description,\n    file_url,\n    thumbnail_url,\n    content_type,\n    is_public,\n    creator\n  };\n\n  try {\n    const response = await fetch(apiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(contentData),\n    });\n\n    if (response.ok) {\n      alert(\"Conte\u00fado adicionado com sucesso!\");\n      fetchContents(); // Atualiza a lista de conte\u00fados\n      document.getElementById(\"contentForm\").reset(); // Limpa o formul\u00e1rio\n    } else {\n      const errorData = await response.json();\n      alert(`Erro ao adicionar conte\u00fado 1: ${errorData.message || response.statusText}`);\n    }\n  } catch (error) {\n    console.error(\"Erro ao adicionar conte\u00fado 2:\", error);\n  }\n}\n\n// Inicializar a p\u00e1gina carregando os conte\u00fados\ndocument.addEventListener(\"DOMContentLoaded\", fetchContents);\n\n// Evento de envio do formul\u00e1rio\ndocument.getElementById(\"contentForm\").addEventListener(\"submit\", addContent);\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/#explicacao-do-codigo","title":"Explica\u00e7\u00e3o do C\u00f3digo","text":"<ol> <li> <p>HTML Estrutura:</p> </li> <li> <p>Um formul\u00e1rio na se\u00e7\u00e3o <code>form-section</code> permite adicionar um novo conte\u00fado, com campos para t\u00edtulo, descri\u00e7\u00e3o, URL do arquivo, URL da miniatura, tipo de conte\u00fado (v\u00eddeo ou \u00e1udio), e um checkbox para indicar se \u00e9 p\u00fablico.</p> </li> <li> <p>Uma tabela na se\u00e7\u00e3o <code>content-list</code> lista os conte\u00fados que s\u00e3o retornados da API.</p> </li> <li> <p>JavaScript:</p> </li> <li> <p>A fun\u00e7\u00e3o <code>fetchContents()</code> faz uma requisi\u00e7\u00e3o GET para o endpoint <code>contents</code> e preenche a tabela com os dados.</p> </li> <li>A fun\u00e7\u00e3o <code>addContent()</code> faz uma requisi\u00e7\u00e3o POST para o mesmo endpoint, criando um novo conte\u00fado com base nos dados fornecidos pelo usu\u00e1rio no formul\u00e1rio.</li> <li>A fun\u00e7\u00e3o <code>fetchContents()</code> \u00e9 chamada no evento <code>DOMContentLoaded</code> para listar os conte\u00fados assim que a p\u00e1gina \u00e9 carregada.</li> <li> <p>O evento de submit do formul\u00e1rio \u00e9 tratado por <code>addContent()</code> para enviar o conte\u00fado \u00e0 API.</p> </li> <li> <p>CSS:</p> </li> <li> <p>O CSS b\u00e1sico estiliza o layout da p\u00e1gina, a tabela e o formul\u00e1rio, mantendo a interface limpa e funcional.</p> </li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/09_Consume_Streaming_Web/#como-testar-o-aplicativo","title":"Como Testar o Aplicativo","text":"<ol> <li> <p>Rodar a API Django:    Certifique-se de que a API Django REST est\u00e1 rodando localmente, acess\u00edvel em <code>http://127.0.0.1:8000/api/contents/</code>.</p> </li> <li> <p>Servir o Arquivo HTML:    Salve o arquivo como <code>index.html</code> e abra no navegador.</p> </li> <li> <p>Testando as Fun\u00e7\u00f5es:</p> </li> <li>Voc\u00ea pode adicionar conte\u00fados pelo formul\u00e1rio e, ao fazer isso, a tabela ser\u00e1 atualizada automaticamente com o novo conte\u00fado.</li> <li>Todos os conte\u00fados da API ser\u00e3o listados na tabela assim que a p\u00e1gina for carregada.</li> </ol> <p>Dessa forma, voc\u00ea ter\u00e1 um app front-end em HTML e JavaScript que consome a API Django REST e permite listar e adicionar conte\u00fados facilmente.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/","title":"10 - Django Admin","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Django Admin \u00e9 uma ferramenta robusta e personaliz\u00e1vel, que permite gerenciar os dados do banco e configurar o backend da aplica\u00e7\u00e3o atrav\u00e9s de uma interface administrativa. A seguir, est\u00e3o algumas das principais caracter\u00edsticas de personaliza\u00e7\u00e3o do Django Admin, que tornam a ferramenta ainda mais poderosa para desenvolvedores e administradores:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#1-modeladmin-customizacao-de-exibicao-dos-modelos","title":"1. ModelAdmin: Customiza\u00e7\u00e3o de Exibi\u00e7\u00e3o dos Modelos","text":"<p>Atrav\u00e9s do <code>ModelAdmin</code>, voc\u00ea pode controlar a forma como cada modelo \u00e9 exibido no Django Admin. Algumas personaliza\u00e7\u00f5es incluem:</p> <ul> <li><code>list_display</code>: Define os campos que ser\u00e3o exibidos na lista de registros do modelo. Por exemplo:</li> </ul> <pre><code>class ContentAdmin(admin.ModelAdmin):\n    list_display = ('title', 'content_type', 'is_public')\n</code></pre> <ul> <li><code>list_filter</code>: Adiciona filtros laterais para facilitar a segmenta\u00e7\u00e3o dos registros. Exemplo:</li> </ul> <pre><code>list_filter = ('content_type', 'is_public')\n</code></pre> <ul> <li><code>search_fields</code>: Permite adicionar um campo de busca para procurar registros espec\u00edficos. Exemplo:</li> </ul> <pre><code>search_fields = ('title', 'description')\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#2-campos-de-ordenacao","title":"2. Campos de Ordena\u00e7\u00e3o","text":"<p>Com a op\u00e7\u00e3o <code>ordering</code>, voc\u00ea pode definir a ordem padr\u00e3o em que os registros ser\u00e3o exibidos.</p> <pre><code>ordering = ['-updated_at']\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#3-campos-de-edicao-inline","title":"3. Campos de Edi\u00e7\u00e3o Inline","text":"<p>Django Admin permite editar objetos relacionados dentro de um formul\u00e1rio de outro objeto, usando inlines. Por exemplo, se voc\u00ea tem um modelo <code>Comment</code> relacionado a um <code>Content</code>, pode configurar o <code>Comment</code> como inline no <code>ContentAdmin</code>.</p> <pre><code>class CommentInline(admin.TabularInline):\n    model = Comment\n    extra = 1  # N\u00famero de campos de coment\u00e1rio exibidos inicialmente\n\nclass ContentAdmin(admin.ModelAdmin):\n    inlines = [CommentInline]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#4-personalizacao-dos-formularios-de-edicao","title":"4. Personaliza\u00e7\u00e3o dos Formul\u00e1rios de Edi\u00e7\u00e3o","text":"<p>Voc\u00ea pode definir quais campos ser\u00e3o exibidos na p\u00e1gina de edi\u00e7\u00e3o, bem como organiz\u00e1-los em se\u00e7\u00f5es:</p> <ul> <li><code>fields</code>: Define os campos que estar\u00e3o dispon\u00edveis no formul\u00e1rio.</li> </ul> <pre><code>fields = ('title', 'description', 'file_url', 'thumbnail_url')\n</code></pre> <ul> <li><code>fieldsets</code>: Agrupa os campos em se\u00e7\u00f5es, permitindo adicionar cabe\u00e7alhos de se\u00e7\u00e3o:</li> </ul> <pre><code>fieldsets = (\n    ('Informa\u00e7\u00f5es B\u00e1sicas', {'fields': ('title', 'description')}),\n    ('Detalhes do Arquivo', {'fields': ('file_url', 'thumbnail_url')}),\n  )\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#5-acoes-personalizadas","title":"5. A\u00e7\u00f5es Personalizadas","text":"<p>Com o Django Admin, voc\u00ea pode definir a\u00e7\u00f5es customizadas para executar opera\u00e7\u00f5es em lote nos registros selecionados. Por exemplo, uma a\u00e7\u00e3o para marcar conte\u00fados como p\u00fablicos:</p> <pre><code>def make_public(modeladmin, request, queryset):\n    queryset.update(is_public=True)\n    make_public.short_description = \"Marcar conte\u00fados como p\u00fablicos\"\n\nclass ContentAdmin(admin.ModelAdmin):\n    actions = [make_public]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#6-filtros-e-campos-de-busca-personalizados","title":"6. Filtros e Campos de Busca Personalizados","text":"<p>Al\u00e9m dos filtros de lista, voc\u00ea pode criar filtros personalizados para necessidades espec\u00edficas e adicionar campos de busca din\u00e2micos.</p> <ul> <li>Filtros Personalizados: Use o <code>SimpleListFilter</code> para definir filtros avan\u00e7ados.</li> </ul> <pre><code>from django.contrib.admin import SimpleListFilter\n\nclass PublicContentFilter(SimpleListFilter):\n    title = 'public'\n    parameter_name = 'is_public'\n\n    def lookups(self, request, model_admin):\n        return [('yes', 'Public'), ('no', 'Private')]\n\n    def queryset(self, request, queryset):\n        if self.value() == 'yes':\n            return queryset.filter(is_public=True)\n        if self.value() == 'no':\n            return queryset.filter(is_public=False)\n\nclass ContentAdmin(admin.ModelAdmin):\n    list_filter = (PublicContentFilter,)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#7-edicao-em-lote","title":"7. Edi\u00e7\u00e3o em Lote","text":"<p>A edi\u00e7\u00e3o em lote facilita a atualiza\u00e7\u00e3o r\u00e1pida de registros selecionados ao permitir que se aplique a\u00e7\u00f5es de uma s\u00f3 vez.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#8-customizacao-de-templates-e-css","title":"8. Customiza\u00e7\u00e3o de Templates e CSS","text":"<p>O Django permite que voc\u00ea substitua os templates do admin ou altere o CSS para refletir um estilo espec\u00edfico, modificando o visual da interface administrativa.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#exemplo-completo","title":"Exemplo Completo","text":"<pre><code>from django.contrib import admin\nfrom .models import Content, Comment\n\nclass CommentInline(admin.TabularInline):\n    model = Comment\n    extra = 1\n\nclass ContentAdmin(admin.ModelAdmin):\n    list_display = ('title', 'content_type', 'is_public')\n    list_filter = ('content_type', 'is_public')\n    search_fields = ('title', 'description')\n    ordering = ['-updated_at']\n    inlines = [CommentInline]\n    actions = [make_public]\n    fieldsets = (\n        ('Informa\u00e7\u00f5es B\u00e1sicas', {'fields': ('title', 'description')}),\n        ('Detalhes do Arquivo', {'fields': ('file_url', 'thumbnail_url')}),\n    )\n\nadmin.site.register(Content, ContentAdmin)\n</code></pre> <p>Com essas configura\u00e7\u00f5es, o Django Admin se torna uma interface poderosa para a administra\u00e7\u00e3o do seu app de streaming, com filtros, personaliza\u00e7\u00f5es e uma apar\u00eancia adaptada ao fluxo de trabalho. Isso otimiza o gerenciamento de conte\u00fado, facilitando a navega\u00e7\u00e3o e a organiza\u00e7\u00e3o dos registros.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#9-permissoes-e-controle-de-acesso","title":"9. Permiss\u00f5es e Controle de Acesso","text":"<p>O Django Admin permite definir permiss\u00f5es espec\u00edficas por modelo e campo, como:</p> <ul> <li>Permiss\u00f5es por modelo: No <code>ModelAdmin</code>, voc\u00ea pode restringir quem pode visualizar, adicionar, editar ou excluir registros.</li> <li>Controle de campos espec\u00edficos: Restringe quem pode ver ou editar campos espec\u00edficos. Isso \u00e9 feito criando m\u00e9todos como <code>has_change_permission</code>.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#modelo-content-exemplo-base","title":"\ud83e\udde9 Modelo Content (exemplo base)","text":"<pre><code># models.py\nfrom django.db import models\nfrom django.contrib.auth.models import User\n\nclass Content(models.Model):\n    CONTENT_TYPE_CHOICES = (\n        ('audio', '\u00c1udio'),\n        ('video', 'V\u00eddeo'),\n    )\n\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n    file_url = models.URLField()\n    thumbnail_url = models.URLField()\n    content_type = models.CharField(max_length=10, choices=CONTENT_TYPE_CHOICES)\n    created_at = models.DateTimeField(auto_now_add=True)\n    owner = models.ForeignKey(User, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#admin-personalizado","title":"\ud83d\udee0\ufe0f Admin personalizado","text":"<pre><code># admin.py\nfrom django.contrib import admin\nfrom .models import Content\n\n@admin.register(Content)\nclass ContentAdmin(admin.ModelAdmin):\n    list_display = ('title', 'owner', 'content_type', 'created_at')\n    list_filter = ('content_type', 'created_at')\n    search_fields = ('title', 'description')\n\n    def has_view_permission(self, request, obj=None):\n        return request.user.has_perm(\"app.view_content\") or request.user.is_superuser\n\n    def has_add_permission(self, request):\n        return request.user.groups.filter(name='Criadores').exists()\n\n    def has_change_permission(self, request, obj=None):\n        if obj and obj.owner != request.user and not request.user.is_superuser:\n            return False\n        return True\n\n    def has_delete_permission(self, request, obj=None):\n        return request.user.is_superuser\n\n    def get_fields(self, request, obj=None):\n        fields = ['title', 'description', 'file_url', 'thumbnail_url', 'content_type']\n        if request.user.is_superuser:\n            fields.append('owner')\n        return fields\n\n    def get_readonly_fields(self, request, obj=None):\n        readonly = ['created_at']\n        if not request.user.is_superuser:\n            readonly.extend(['owner'])\n        return readonly\n\n    def save_model(self, request, obj, form, change):\n        if not obj.pk:  # Se for cria\u00e7\u00e3o\n            obj.owner = request.user\n        super().save_model(request, obj, form, change)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/10_Admin_Streaming/#regras-aplicadas","title":"\u2705 Regras aplicadas:","text":"<ul> <li>Apenas usu\u00e1rios do grupo \"Criadores\" podem adicionar.</li> <li>Somente o criador do conte\u00fado ou um superusu\u00e1rio pode editar.</li> <li>Apenas superusu\u00e1rios podem excluir conte\u00fados.</li> <li>Campos como <code>owner</code> e <code>created_at</code> s\u00e3o apenas leitura.</li> <li>Filtros e buscas est\u00e3o ativados por <code>content_type</code>, <code>created_at</code>, <code>title</code>, <code>description</code>.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/","title":"11 - Associa\u00e7\u00f5es","text":"<p>Aplicando os conceitos da Programa\u00e7\u00e3o Orientada a Objetos (POO) ao contexto do App de Streaming de \u00c1udio e V\u00eddeo com Django REST.</p> <p>Abaixo, temos cada conceito com uma explica\u00e7\u00e3o e exemplos baseados nas classes j\u00e1 envolvidas, como <code>User</code>, <code>Content</code>, <code>Playlist</code>, etc.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#1-associacao","title":"\u2705 1. Associa\u00e7\u00e3o","text":"<p>Objetos se comunicam temporariamente.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo","title":"\ud83d\udd38 Exemplo:","text":"<p>Na view de listagem, a <code>ContentView</code> pode acessar dados do usu\u00e1rio apenas enquanto executa a requisi\u00e7\u00e3o.</p> <pre><code>class ContentView(APIView):\n    def get(self, request):\n        user = request.user  # Associa\u00e7\u00e3o tempor\u00e1ria com o objeto User\n        contents = Content.objects.filter(owner=user)\n        ...\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#2-agregacao","title":"\u2705 2. Agrega\u00e7\u00e3o","text":"<p>Rela\u00e7\u00e3o \"tem-um\" onde a parte pode existir sem o todo.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_1","title":"\ud83d\udd38 Exemplo:","text":"<p>Um <code>Playlist</code> tem muitos <code>Content</code>, mas os <code>Content</code> podem existir fora da <code>Playlist</code>.</p> <pre><code>class Playlist(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=100)\n    contents = models.ManyToManyField(Content)\n</code></pre> <p>Aqui, <code>Content</code> existe independentemente da <code>Playlist</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#3-composicao","title":"\u2705 3. Composi\u00e7\u00e3o","text":"<p>Rela\u00e7\u00e3o \"parte-de\", onde a parte n\u00e3o existe sem o todo.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_2","title":"\ud83d\udd38 Exemplo:","text":"<p>Se cri\u00e1ssemos um modelo <code>Thumbnail</code> separado, mas exclusivo para um \u00fanico <code>Content</code>:</p> <pre><code>class Content(models.Model):\n    ...\n    # Cada content tem um thumbnail que \u00e9 exclu\u00eddo junto com ele\n    thumbnail = models.OneToOneField(\"Thumbnail\", on_delete=models.CASCADE)\n\nclass Thumbnail(models.Model):\n    url = models.URLField()\n</code></pre> <p>O <code>Thumbnail</code> n\u00e3o existiria fora do <code>Content</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#4-heranca","title":"\u2705 4. Heran\u00e7a","text":"<p>\"\u00c9-um\": Uma subclasse herda de uma superclasse.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_3","title":"\ud83d\udd38 Exemplo:","text":"<p>Se tivermos tipos espec\u00edficos de conte\u00fado:</p> <pre><code>class BaseContent(models.Model):\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n\nclass VideoContent(BaseContent):\n    duration = models.IntegerField()\n\nclass AudioContent(BaseContent):\n    bitrate = models.IntegerField()\n</code></pre> <p><code>VideoContent</code> \u00e9 um <code>BaseContent</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#5-dependencia","title":"\u2705 5. Depend\u00eancia","text":"<p>Uma classe usa outra temporariamente.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_4","title":"\ud83d\udd38 Exemplo:","text":"<p>Um serializer que depende temporariamente de outro modelo:</p> <pre><code>class PlaylistSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Playlist\n        fields = ['name', 'contents']\n</code></pre> <p>Aqui, o serializer depende temporariamente da estrutura do <code>Playlist</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#6-realizacao","title":"\u2705 6. Realiza\u00e7\u00e3o","text":"<p>Implementa\u00e7\u00e3o de uma interface (abstra\u00e7\u00e3o).</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_5","title":"\ud83d\udd38 Exemplo:","text":"<p>Django n\u00e3o usa interfaces formais como Java/C#, mas usamos abstra\u00e7\u00f5es como <code>APIView</code>:</p> <pre><code>class ContentListView(APIView):\n    def get(self, request):\n        ...\n</code></pre> <p>A <code>ContentListView</code> realiza (implementa) a interface da <code>APIView</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#7-associacao-bidirecional","title":"\u2705 7. Associa\u00e7\u00e3o Bidirecional","text":"<p>Duas classes se referenciam mutuamente.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_6","title":"\ud83d\udd38 Exemplo:","text":"<p>Um <code>User</code> tem <code>Playlists</code> e a <code>Playlist</code> tem um <code>User</code>.</p> <pre><code># Playlist aponta para User\nclass Playlist(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n\n# No c\u00f3digo, voc\u00ea pode acessar bidirecionalmente:\nplaylist.user  # da playlist para user\nuser.playlist_set.all()  # do user para as playlists\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#8-cardinalidade-11","title":"\u2705 8. Cardinalidade (1:1)","text":"<p>Uma inst\u00e2ncia de um modelo se relaciona com exatamente uma inst\u00e2ncia de outro.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#exemplo_7","title":"\ud83d\udd38 Exemplo:","text":"<p>Relacionamento entre <code>Content</code> e <code>Metadata</code>:</p> <pre><code>class Content(models.Model):\n    title = models.CharField(max_length=255)\n    metadata = models.OneToOneField('Metadata', on_delete=models.CASCADE)\n\nclass Metadata(models.Model):\n    resolution = models.CharField(max_length=50)\n    codec = models.CharField(max_length=50)\n</code></pre> <p>Cada <code>Content</code> tem um \u00fanico <code>Metadata</code>, e vice-versa.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#diagrama-de-classes","title":"Diagrama de Classes","text":"<p>Abaixo temos o diagrama UML em PlantUML representando os conceitos de POO aplicados ao seu app de streaming de \u00e1udio e v\u00eddeo com base nos modelos discutidos:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#plantuml","title":"\ud83d\udccc PlantUML","text":"<pre>22af677ac2145e89ac7f2f96872f095c04e1de76676f2332b206082b2bcc03b2d5e0a0f124d426916dca6870761ece324db6eaf817c965d23fdec6ce5c7da14b</pre><pre>ffc2d1cf6de9a2bbb91a84a0f8d2f17bc56a095867d66e137edb824e3edcd592c41b74852bcea0988e339e8bc6ae9fd10e45e93a59fac5c6d2e6c930625a742c</pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/11_Associa%C3%A7%C3%B5es/#como-usar","title":"\u2705 Como usar","text":"<ol> <li> <p>Copie esse c\u00f3digo para um arquivo com extens\u00e3o <code>.puml</code>, ou use um site como:</p> </li> <li> <p>PlantUML Live</p> </li> <li> <p>PlantText</p> </li> <li> <p>Renderize o diagrama para ver visualmente os relacionamentos.</p> </li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/","title":"12 - Autentica\u00e7\u00e3o","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Para autenticar no Django REST Framework (DRF) e consumir a API como um usu\u00e1rio logado, voc\u00ea pode usar v\u00e1rias abordagens de autentica\u00e7\u00e3o, como:</p> <ol> <li>Autentica\u00e7\u00e3o via Token.</li> <li>Autentica\u00e7\u00e3o via Sess\u00e3o/Cookie (principalmente para navegadores).</li> <li>Autentica\u00e7\u00e3o JWT (JSON Web Token).</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#autenticacao-via-token","title":"Autentica\u00e7\u00e3o via Token","text":"<p>Abaixo, vamos ver como configurar a Autentica\u00e7\u00e3o via Token no Django e como consumir a API com um token de autentica\u00e7\u00e3o.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#passo-1-configurar-autenticacao-por-token-no-django-rest-framework","title":"Passo 1: Configurar Autentica\u00e7\u00e3o por Token no Django REST Framework","text":"<p>1. Instale o pacote <code>djangorestframework</code> (caso ainda n\u00e3o tenha):</p> <pre><code>    pip install djangorestframework\n</code></pre> <p>2. Instale o pacote <code>django-rest-authtoken</code>, necess\u00e1rio para gerar e gerenciar tokens de autentica\u00e7\u00e3o:</p> <pre><code>   pip install django-rest-authtoken\n</code></pre> <p>3. Adicione <code>rest_framework</code> e <code>rest_framework.authtoken</code> ao <code>INSTALLED_APPS</code> no seu <code>settings.py</code>:</p> <pre><code>   INSTALLED_APPS = [\n       # Outros apps\n       'rest_framework',\n       'rest_framework.authtoken',\n   ]\n</code></pre> <p>4. Configure o Django REST Framework para usar a autentica\u00e7\u00e3o por token:</p> <pre><code>   # settings.py\n\n   REST_FRAMEWORK = {\n       'DEFAULT_AUTHENTICATION_CLASSES': [\n           'rest_framework.authentication.TokenAuthentication',\n       ],\n       'DEFAULT_PERMISSION_CLASSES': [\n           'rest_framework.permissions.IsAuthenticated',\n       ],\n   }\n</code></pre> <p>5. Execute a migra\u00e7\u00e3o para criar as tabelas necess\u00e1rias:</p> <pre><code>   python manage.py migrate\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#passo-2-gerar-tokens-de-autenticacao","title":"Passo 2: Gerar Tokens de Autentica\u00e7\u00e3o","text":"<p>Crie uma URL para o endpoint de obten\u00e7\u00e3o de tokens de autentica\u00e7\u00e3o. No seu <code>urls.py</code>, adicione:</p> <pre><code>from django.urls import path\nfrom rest_framework.authtoken.views import obtain_auth_token\n\nurlpatterns = [\n    # Outras rotas\n    path('api/token/', obtain_auth_token, name='api_token_auth'),\n]\n</code></pre> <p>Com isso, os usu\u00e1rios poder\u00e3o obter tokens enviando uma requisi\u00e7\u00e3o <code>POST</code> com suas credenciais (usu\u00e1rio e senha) para <code>api/token/</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#passo-3-obter-o-token-de-autenticacao","title":"Passo 3: Obter o Token de Autentica\u00e7\u00e3o","text":"<p>Para obter o token, voc\u00ea pode usar o <code>curl</code>, Postman, ou qualquer cliente HTTP. No Postman, por exemplo:</p> <ul> <li>Envie uma requisi\u00e7\u00e3o <code>POST</code> para <code>http://localhost:8000/api/token/</code>.</li> <li>No corpo da requisi\u00e7\u00e3o (<code>body</code>), envie as credenciais como <code>x-www-form-urlencoded</code>:</li> </ul> <pre><code>   username: seu_usuario\n   password: sua_senha\n</code></pre> <p>ou no body -&gt; raw -&gt; json</p> <pre><code>{\n        \"username\": \"admin\",\n        \"password\": \"123456\"\n\n    }\n\nA resposta ser\u00e1 o token de autentica\u00e7\u00e3o do usu\u00e1rio, por exemplo:\n\n```json\n{\n    \"token\": \"c1c82e123abc123abcde4567def01234abcd5678\"\n}\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#passo-4-usar-o-token-para-consumir-a-api","title":"Passo 4: Usar o Token para Consumir a API","text":"<p>Agora, ao consumir a API, adicione o token ao cabe\u00e7alho de autentica\u00e7\u00e3o (<code>Authorization</code>) usando o formato <code>Token &lt;token&gt;</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#exemplo-de-consumo-no-postman","title":"Exemplo de Consumo no Postman","text":"<ol> <li>Acesse qualquer endpoint da API protegido, como <code>http://localhost:8000/api/contents/</code>.</li> <li>No cabe\u00e7alho (<code>Headers</code>), adicione:</li> </ol> <pre><code>  Key: Authorization \n  value: token c1c82e123abc123abcde4567def01234abcd5678\n</code></pre> <p>Com esse cabe\u00e7alho, o Django REST Framework identificar\u00e1 o usu\u00e1rio autenticado e permitir\u00e1 o acesso aos recursos da API, desde que o usu\u00e1rio tenha as permiss\u00f5es necess\u00e1rias.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#alternativa-uso-no-frontend-com-javascript-fetch-api","title":"Alternativa: Uso no Frontend com JavaScript (Fetch API)","text":"<p>Se estiver consumindo a API com JavaScript no frontend, o c\u00f3digo para usar o token ficaria assim:</p> <pre><code>fetch('http://localhost:8000/api/contents/', {\n    method: 'GET',\n    headers: {\n        'Authorization': 'Token c1c82e123abc123abcde4567def01234abcd5678',\n        'Content-Type': 'application/json'\n    }\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data))\n.catch(error =&gt; console.error('Error:', error));\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/12_Autentica%C3%A7%C3%A3o/#consideracoes-finais","title":"Considera\u00e7\u00f5es Finais","text":"<ul> <li>Manter o Token Seguro: Evite expor o token em locais de f\u00e1cil acesso ou em JavaScript sem prote\u00e7\u00e3o.</li> <li>Token Expir\u00e1vel (opcional): O pacote <code>django-rest-framework-simplejwt</code> oferece tokens JWT com tempo de expira\u00e7\u00e3o configur\u00e1vel, se precisar de tokens mais seguros.</li> </ul> <p>Esse fluxo permite que seu app Django autentique usu\u00e1rios e proteja rotas da API, limitando o acesso a quem possui um token v\u00e1lido.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/","title":"13 - Filtros","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Para implementar o filtro voc\u00ea pode definir manualmente o filtro na sua view, utilizando par\u00e2metros de query (<code>query params</code>) para filtrar o <code>content_type</code> diretamente na sua consulta.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#exemplo-de-view-com-filtro-manual","title":"Exemplo de View com Filtro Manual","text":"<p>Aqui est\u00e1 uma implementa\u00e7\u00e3o usando uma <code>ListAPIView</code>, onde o filtro \u00e9 feito verificando o valor do par\u00e2metro <code>content_type</code> na requisi\u00e7\u00e3o.</p> <pre><code># app/views.py\n\nfrom rest_framework import generics\nfrom rest_framework.response import Response\nfrom .models import Content\nfrom .serializers import ContentSerializer\n\nclass ContentListView(generics.ListAPIView):\n    serializer_class = ContentSerializer\n\n    def get_queryset(self):\n        queryset = Content.objects.all()\n        content_type = self.request.query_params.get('content_type')\n\n        if content_type in [choice[0] for choice in Content.CONTENT_TYPE_CHOICES]:\n            queryset = queryset.filter(content_type=content_type)\n\n        return queryset\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#explicacao","title":"Explica\u00e7\u00e3o","text":"<ol> <li>Recupera\u00e7\u00e3o do Par\u00e2metro de Query: A fun\u00e7\u00e3o <code>get_queryset()</code> verifica se o par\u00e2metro <code>content_type</code> foi enviado na requisi\u00e7\u00e3o (<code>self.request.query_params.get('content_type')</code>).</li> <li>Valida\u00e7\u00e3o do Par\u00e2metro: A verifica\u00e7\u00e3o <code>if content_type in [choice[0] for choice in Content.CONTENT_TYPE_CHOICES]</code> assegura que o valor de <code>content_type</code> corresponde a uma das escolhas v\u00e1lidas definidas no modelo <code>Content</code>.</li> <li>Aplica\u00e7\u00e3o do Filtro: Se o par\u00e2metro <code>content_type</code> for v\u00e1lido (<code>audio</code> ou <code>video</code>), ele ser\u00e1 aplicado ao queryset usando <code>filter(content_type=content_type)</code>.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#testando-o-filtro","title":"Testando o Filtro","text":"<p>Voc\u00ea pode acessar os endpoints da seguinte forma:</p> <ul> <li>Para filtrar apenas conte\u00fados de \u00e1udio:</li> </ul> <pre><code>http://localhost:8000/api/contents/?content_type=audio\n</code></pre> <ul> <li>Para filtrar apenas conte\u00fados de v\u00eddeo:</li> </ul> <pre><code>http://localhost:8000/api/contents/?content_type=video\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#filtros-para-os-campos-title-e-description","title":"Filtros para os Campos Title e Description","text":"<p>Para adicionar filtros pelos campos <code>title</code> e <code>description</code>, voc\u00ea pode usar o mesmo m\u00e9todo de query params dentro da sua view, permitindo que os usu\u00e1rios filtrem os conte\u00fados com base em partes do t\u00edtulo ou descri\u00e7\u00e3o. No Django, voc\u00ea pode usar consultas <code>__icontains</code> para fazer uma busca parcial e insens\u00edvel a mai\u00fasculas e min\u00fasculas.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#atualizando-a-view-para-filtrar-title-e-description","title":"Atualizando a View para Filtrar <code>title</code> e <code>description</code>","text":"<p>Vamos modificar a fun\u00e7\u00e3o <code>get_queryset</code> para incluir os par\u00e2metros <code>title</code> e <code>description</code>:</p> <pre><code># app/views.py\n\nfrom rest_framework import generics\nfrom .models import Content\nfrom .serializers import ContentSerializer\n\nclass ContentListView(generics.ListAPIView):\n    serializer_class = ContentSerializer\n    queryset = Content.objects.all()\n\n    def get_queryset(self):\n        queryset = Content.objects.all()\n\n        # Filtro por tipo de conte\u00fado (audio/video)\n        content_type = self.request.query_params.get('content_type')\n        if content_type in [choice[0] for choice in Content.CONTENT_TYPE_CHOICES]:\n            queryset = queryset.filter(content_type=content_type)\n\n        # Filtro por t\u00edtulo (parcial e insens\u00edvel a mai\u00fasculas/min\u00fasculas)\n        title = self.request.query_params.get('title')\n        if title:\n            queryset = queryset.filter(title__icontains=title)\n\n        # Filtro por descri\u00e7\u00e3o (parcial e insens\u00edvel a mai\u00fasculas/min\u00fasculas)\n        description = self.request.query_params.get('description')\n        if description:\n            queryset = queryset.filter(description__icontains=description)\n\n        return queryset\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#explicacoes","title":"Explica\u00e7\u00f5es","text":"<ol> <li>Filtro de <code>content_type</code>: O mesmo que antes, filtrando apenas se <code>content_type</code> est\u00e1 presente nos valores v\u00e1lidos.</li> <li>Filtro de <code>title</code>: Se o par\u00e2metro <code>title</code> \u00e9 passado, a consulta <code>filter(title__icontains=title)</code> procura por conte\u00fados que contenham o valor de <code>title</code> em qualquer parte do t\u00edtulo, sem diferenciar mai\u00fasculas de min\u00fasculas.</li> <li>Filtro de <code>description</code>: O mesmo princ\u00edpio \u00e9 aplicado ao par\u00e2metro <code>description</code> com <code>filter(description__icontains=description)</code>.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/13_Filtros/#teste-o-filtro","title":"Teste o Filtro","text":"<p>Agora voc\u00ea pode usar os par\u00e2metros <code>content_type</code>, <code>title</code> e <code>description</code> para filtrar os conte\u00fados:</p> <ul> <li>Para buscar conte\u00fados de \u00e1udio com \"Music\" no t\u00edtulo:</li> </ul> <pre><code>http://localhost:8000/api/contents/?content_type=audio&amp;title=Music\n</code></pre> <ul> <li>Para buscar conte\u00fados com \"Tutorial\" na descri\u00e7\u00e3o:</li> </ul> <pre><code>http://localhost:8000/api/contents/?description=Tutorial\n</code></pre> <ul> <li>Para combinar filtros (exemplo, v\u00eddeos com \"Adventure\" no t\u00edtulo):</li> </ul> <pre><code>http://localhost:8000/api/contents/?content_type=video&amp;title=Adventure\n</code></pre> <p>Esse c\u00f3digo permite aplicar os filtros <code>title</code> e <code>description</code> de forma simples e diretamente na view.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/","title":"14 - Regras de neg\u00f3cio","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#regras-de-negocio","title":"\u2705 Regras de Neg\u00f3cio","text":"<ol> <li>Cada conte\u00fado deve ter uma miniatura (<code>thumbnail_url</code>) e uma descri\u00e7\u00e3o.</li> <li>O t\u00edtulo deve ser \u00fanico por criador (<code>User</code>).</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#modelo-content-com-validacoes","title":"\ud83e\udde9 Modelo <code>Content</code> com valida\u00e7\u00f5es","text":"<pre><code># models.py\nfrom django.db import models\nfrom django.core.exceptions import ValidationError\nfrom django.contrib.auth.models import User\n\nclass Content(models.Model):\n    CONTENT_TYPE_CHOICES = (\n        ('audio', '\u00c1udio'),\n        ('video', 'V\u00eddeo'),\n    )\n\n    title = models.CharField(max_length=255)\n    description = models.TextField()\n    file_url = models.URLField()\n    thumbnail_url = models.URLField()\n    content_type = models.CharField(max_length=10, choices=CONTENT_TYPE_CHOICES)\n    created_at = models.DateTimeField(auto_now_add=True)\n    creator = models.ForeignKey(User, on_delete=models.CASCADE, related_name='contents')\n\n    def clean(self):\n        # Regra 1: Descri\u00e7\u00e3o e miniatura obrigat\u00f3rias\n        if not self.description:\n            raise ValidationError(\"Descri\u00e7\u00e3o \u00e9 obrigat\u00f3ria.\")\n        if not self.thumbnail_url:\n            raise ValidationError(\"Miniatura (thumbnail) \u00e9 obrigat\u00f3ria.\")\n\n        # Regra 2: T\u00edtulo \u00fanico por criador\n        existing = Content.objects.filter(title=self.title, creator=self.creator)\n        if self.pk:\n            existing = existing.exclude(pk=self.pk)\n        if existing.exists():\n            raise ValidationError(\"Voc\u00ea j\u00e1 criou um conte\u00fado com este t\u00edtulo.\")\n\n    def save(self, *args, **kwargs):\n        self.full_clean()  # Chama `clean()` automaticamente antes de salvar\n        super().save(*args, **kwargs)\n\n    def __str__(self):\n        return f\"{self.title} ({self.content_type})\"\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#o-que-acontece-com-essas-regras","title":"\u2705 O que acontece com essas regras?","text":"<ul> <li>Se um usu\u00e1rio tentar salvar um conte\u00fado sem descri\u00e7\u00e3o ou sem miniatura, ele receber\u00e1 um erro.</li> <li>Se um mesmo criador tentar cadastrar dois conte\u00fados com o mesmo t\u00edtulo, receber\u00e1 erro de valida\u00e7\u00e3o.</li> </ul> <p>Se estiver usando <code>ModelSerializer</code> no Django REST Framework, ele tamb\u00e9m vai capturar e retornar essas valida\u00e7\u00f5es automaticamente como mensagens de erro no <code>POST</code> ou <code>PUT</code>.</p> <p>Perfeito! Abaixo est\u00e1 a adapta\u00e7\u00e3o das regras de neg\u00f3cio diretamente no <code>serializer</code> do Django REST Framework, para garantir:</p> <ul> <li>Que <code>description</code> e <code>thumbnail_url</code> sejam obrigat\u00f3rios.</li> <li>Que o <code>title</code> seja \u00fanico por criador (user).</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#serializerspy-com-validacoes-personalizadas","title":"\u2705 <code>serializers.py</code> com valida\u00e7\u00f5es personalizadas","text":"<pre><code># serializers.py\nfrom rest_framework import serializers\nfrom .models import Content\n\nclass ContentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Content\n        fields = '__all__'\n        read_only_fields = ['owner', 'created_at']\n\n    def validate(self, data):\n        # Regra: descri\u00e7\u00e3o e miniatura obrigat\u00f3rias\n        if not data.get('description'):\n            raise serializers.ValidationError({\"description\": \"Descri\u00e7\u00e3o \u00e9 obrigat\u00f3ria.\"})\n\n        if not data.get('thumbnail_url'):\n            raise serializers.ValidationError({\"thumbnail_url\": \"Miniatura \u00e9 obrigat\u00f3ria.\"})\n\n        # Regra: t\u00edtulo \u00fanico por criador\n        request = self.context.get('request')\n        owner = request.user if request else None\n        title = data.get('title')\n\n        if self.instance:\n            # Atualiza\u00e7\u00e3o: ignora o pr\u00f3prio objeto\n            exists = Content.objects.filter(title=title, owner=owner).exclude(pk=self.instance.pk).exists()\n        else:\n            exists = Content.objects.filter(title=title, owner=owner).exists()\n\n        if exists:\n            raise serializers.ValidationError({\"title\": \"Voc\u00ea j\u00e1 possui um conte\u00fado com esse t\u00edtulo.\"})\n\n        return data\n\n    def create(self, validated_data):\n        validated_data['owner'] = self.context['request'].user\n        return super().create(validated_data)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#o-que-foi-feito","title":"\ud83e\udde9 O que foi feito:","text":"<ul> <li>O m\u00e9todo <code>validate</code> trata m\u00faltiplos campos ao mesmo tempo.</li> <li><code>request.user</code> \u00e9 usado como o criador (owner).</li> <li>O <code>create</code> j\u00e1 insere o <code>owner</code> automaticamente com base no usu\u00e1rio logado.</li> <li>Campos <code>owner</code> e <code>created_at</code> s\u00e3o somente leitura (<code>read_only_fields</code>).</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#exemplo-de-viewspy","title":"\u2705 Exemplo de <code>views.py</code>","text":"<pre><code># views.py\nfrom rest_framework import viewsets, permissions\nfrom .models import Content\nfrom .serializers import ContentSerializer\n\nclass ContentViewSet(viewsets.ModelViewSet):\n    queryset = Content.objects.all()\n    serializer_class = ContentSerializer\n    permission_classes = [permissions.IsAuthenticated]\n\n    def perform_create(self, serializer):\n        serializer.save(owner=self.request.user)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#django-admin","title":"Django Admin","text":"<p>Agora temos as regras no admin Django para refor\u00e7ar a valida\u00e7\u00e3o em m\u00faltiplos pontos, garantindo uma camada adicional de valida\u00e7\u00e3o para:</p> <ol> <li>Miniatura (<code>thumbnail_url</code>) e descri\u00e7\u00e3o obrigat\u00f3rias.</li> <li>T\u00edtulo \u00fanico por criador.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#1-adicionar-validacoes-no-modeladmin","title":"\u2705 1. Adicionar valida\u00e7\u00f5es no <code>ModelAdmin</code>","text":"<pre><code># admin.py\nfrom django.contrib import admin\nfrom django.core.exceptions import ValidationError\nfrom django.forms import ModelForm\nfrom .models import Content\n\nclass ContentAdminForm(ModelForm):\n    def clean(self):\n        cleaned_data = super().clean()\n        title = cleaned_data.get(\"title\")\n        owner = cleaned_data.get(\"owner\")\n\n        # Valida\u00e7\u00e3o: descri\u00e7\u00e3o e miniatura\n        if not cleaned_data.get(\"description\"):\n            raise ValidationError(\"Descri\u00e7\u00e3o \u00e9 obrigat\u00f3ria.\")\n        if not cleaned_data.get(\"thumbnail_url\"):\n            raise ValidationError(\"Miniatura (thumbnail) \u00e9 obrigat\u00f3ria.\")\n\n        # Valida\u00e7\u00e3o: t\u00edtulo \u00fanico por criador\n        qs = Content.objects.filter(title=title, owner=owner)\n        if self.instance.pk:\n            qs = qs.exclude(pk=self.instance.pk)\n        if qs.exists():\n            raise ValidationError(\"Esse criador j\u00e1 possui um conte\u00fado com esse t\u00edtulo.\")\n\n        return cleaned_data\n\nclass ContentAdmin(admin.ModelAdmin):\n    form = ContentAdminForm\n    list_display = ['title', 'owner', 'content_type', 'created_at']\n    list_filter = ['content_type', 'owner']\n    search_fields = ['title', 'description']\n\nadmin.site.register(Content, ContentAdmin)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#2-beneficios-dessas-validacoes-no-admin","title":"\u2705 2. Benef\u00edcios dessas valida\u00e7\u00f5es no Admin","text":"<ul> <li>Garante que mesmas regras aplicadas na API tamb\u00e9m valem no admin.</li> <li>O admin exibe mensagens amig\u00e1veis quando h\u00e1 erros.</li> <li>Ajuda a prevenir inconsist\u00eancias se algu\u00e9m usar apenas o admin.</li> </ul> <p>Se voc\u00ea quiser, posso mostrar como adicionar permiss\u00f5es espec\u00edficas no admin para controlar quem pode ver, editar ou excluir conte\u00fados. Deseja seguir com isso?</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#playlist","title":"Playlist","text":"<p>A seguir temos as regras de neg\u00f3cio para a entidade <code>Playlist</code> no seu app Django REST. As regras s\u00e3o:</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#regras-de-negocio_1","title":"\u2705 Regras de Neg\u00f3cio","text":"<ol> <li>T\u00edtulo \u00fanico por usu\u00e1rio \u2014 o nome da playlist deve ser \u00fanico para cada criador.</li> <li>Conte\u00fados n\u00e3o podem ser duplicados dentro de uma mesma playlist.</li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#modelo-modelspy","title":"\ud83e\udde9 MODELO (<code>models.py</code>)","text":"<pre><code>from django.db import models\nfrom django.contrib.auth.models import User\nfrom django.core.exceptions import ValidationError\nfrom .models import Content  # supondo que Content j\u00e1 exista\n\nclass Playlist(models.Model):\n    title = models.CharField(max_length=255)\n    owner = models.ForeignKey(User, on_delete=models.CASCADE, related_name='playlists')\n    contents = models.ManyToManyField(Content, related_name='playlists', blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    class Meta:\n        unique_together = ('title', 'owner')\n        ordering = ['-created_at']\n\n    def clean(self):\n        # Regra 1: t\u00edtulo \u00fanico j\u00e1 garantido pelo unique_together\n        pass  # Regras adicionais podem ser adicionadas aqui\n\n    def __str__(self):\n        return f\"{self.title} - {self.owner.username}\"\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#serializer-serializerspy","title":"\ud83e\udde9 SERIALIZER (<code>serializers.py</code>)","text":"<pre><code>from rest_framework import serializers\nfrom .models import Playlist, Content\n\nclass PlaylistSerializer(serializers.ModelSerializer):\n    contents = serializers.PrimaryKeyRelatedField(\n        many=True, queryset=Content.objects.all(), required=False\n    )\n\n    class Meta:\n        model = Playlist\n        fields = ['id', 'title', 'owner', 'contents', 'created_at']\n        read_only_fields = ['owner', 'created_at']\n\n    def validate_title(self, value):\n        user = self.context['request'].user\n        if Playlist.objects.filter(title=value, owner=user).exists():\n            raise serializers.ValidationError(\"Voc\u00ea j\u00e1 tem uma playlist com esse t\u00edtulo.\")\n        return value\n\n    def validate_contents(self, value):\n        if len(value) != len(set(value)):\n            raise serializers.ValidationError(\"A playlist n\u00e3o pode conter conte\u00fados duplicados.\")\n        return value\n\n    def create(self, validated_data):\n        contents = validated_data.pop('contents', [])\n        playlist = Playlist.objects.create(owner=self.context['request'].user, **validated_data)\n        playlist.contents.set(contents)\n        return playlist\n\n    def update(self, instance, validated_data):\n        contents = validated_data.pop('contents', None)\n        if contents is not None:\n            if len(contents) != len(set(contents)):\n                raise serializers.ValidationError(\"A playlist n\u00e3o pode conter conte\u00fados duplicados.\")\n            instance.contents.set(contents)\n        return super().update(instance, validated_data)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#views-viewspy","title":"\ud83e\udde9 VIEWS (<code>views.py</code>)","text":"<pre><code>from rest_framework import viewsets, permissions\nfrom .models import Playlist\nfrom .serializers import PlaylistSerializer\n\nclass PlaylistViewSet(viewsets.ModelViewSet):\n    queryset = Playlist.objects.all()\n    serializer_class = PlaylistSerializer\n    permission_classes = [permissions.IsAuthenticated]\n\n    def get_queryset(self):\n        # Apenas as playlists do usu\u00e1rio autenticado\n        return Playlist.objects.filter(owner=self.request.user)\n\n    def perform_create(self, serializer):\n        serializer.save(owner=self.request.user)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#urls-urlspy","title":"\ud83e\udde9 URLs (<code>urls.py</code>)","text":"<pre><code>from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom .views import PlaylistViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'playlists', PlaylistViewSet)\n\nurlpatterns = [\n    path('', include(router.urls)),\n]\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#django-admin-adminpy","title":"\ud83e\udde9 DJANGO ADMIN (<code>admin.py</code>)","text":"<pre><code>from django.contrib import admin\nfrom .models import Playlist\n\nclass PlaylistAdmin(admin.ModelAdmin):\n    list_display = ('title', 'owner', 'created_at')\n    list_filter = ('owner',)\n    search_fields = ('title',)\n    filter_horizontal = ('contents',)\n\n    def save_model(self, request, obj, form, change):\n        # For\u00e7a o owner no admin\n        if not obj.pk:\n            obj.owner = request.user\n        super().save_model(request, obj, form, change)\n\nadmin.site.register(Playlist, PlaylistAdmin)\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/14_Regras%20de%20Neg%C3%B3cio/#resultado","title":"\u2705 Resultado","text":"<ul> <li>Playlists com nomes \u00fanicos por usu\u00e1rio.</li> <li>Conte\u00fados duplicados s\u00e3o rejeitados.</li> <li>Funciona no admin, API REST, serializers, valida\u00e7\u00f5es autom\u00e1ticas.</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/","title":"15 - Deploy","text":"<p>O deploy mais simples de um projeto Django REST com SQLite \u00e9 usando o Render.com \u2014 ideal para testes, MVPs ou prot\u00f3tipos.</p> <p>Tutorial Render/Django Postgres</p> <p>Tutorial deploy com apenas um Fork do reposit\u00f3rio</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#1-pre-requisitos","title":"\u2705 1. Pr\u00e9-requisitos","text":"<ul> <li>Conta no GitHub</li> <li>Conta no Render</li> <li>Projeto Django REST funcional (com <code>requirements.txt</code>, <code>manage.py</code>, etc.)</li> </ul>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#2-prepare-o-projeto-django","title":"\u2705 2. Prepare o projeto Django","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#21-instale-pacotes-necessarios","title":"2.1. Instale pacotes necess\u00e1rios:","text":"<pre><code>pip install gunicorn dj-database-url python-dotenv\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#22-adicione-ao-requirementstxt","title":"2.2. Adicione ao <code>requirements.txt</code>:","text":"<pre><code>pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#23-crie-o-arquivo-procfile-sem-extensao","title":"2.3. Crie o arquivo <code>Procfile</code> (sem extens\u00e3o):","text":"<pre><code>web: gunicorn nome_do_projeto.wsgi\n</code></pre> <p>Substitua <code>nome_do_projeto</code> pelo nome da pasta principal do seu Django (onde est\u00e1 o <code>settings.py</code>).</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#3-configuracoes-no-settingspy","title":"\u2705 3. Configura\u00e7\u00f5es no <code>settings.py</code>","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#31-altere-allowed_hosts","title":"3.1. Altere <code>ALLOWED_HOSTS</code>:","text":"<pre><code>import os\nALLOWED_HOSTS = ['*']  # Em produ\u00e7\u00e3o, use o dom\u00ednio real\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#32-use-o-sqlite-apenas-se-quiser-simplicidade-render-permite-isso-para-uso-mais-serio-use-postgresql","title":"3.2. Use o SQLite apenas se quiser simplicidade (Render permite isso). Para uso mais s\u00e9rio, use PostgreSQL.","text":""},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#4-configurar-arquivos-estaticos","title":"\u2705 4. Configurar arquivos est\u00e1ticos","text":"<p>No final do <code>settings.py</code>:</p> <pre><code>STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#5-comitar-no-git-e-subir-no-github","title":"\u2705 5. Comitar no Git e subir no GitHub","text":"<pre><code>git init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/seuusuario/seurepo.git\ngit push -u origin main\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#6-criar-app-no-render","title":"\u2705 6. Criar app no Render","text":"<ol> <li> <p>V\u00e1 para Render Dashboard</p> </li> <li> <p>Clique em \"New Web Service\"</p> </li> <li> <p>Conecte-se ao GitHub e selecione o reposit\u00f3rio</p> </li> <li> <p>Configure:</p> </li> <li> <p>Name: nome do app</p> </li> <li>Runtime: Python</li> <li>Build Command: <code>pip install -r requirements.txt</code></li> <li>Start Command: <code>gunicorn nome_do_projeto.wsgi</code></li> <li>Environment: <code>Python 3</code></li> <li> <p>Environment Variables:</p> <ul> <li><code>DJANGO_SECRET_KEY</code> = sua chave secreta</li> <li><code>DEBUG</code> = False</li> <li><code>PYTHON_VERSION</code> = 3.10 (ou similar)</li> </ul> </li> <li> <p>Clique em Create Web Service</p> </li> </ol>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#7-coletar-arquivos-estaticos-e-migrar-banco","title":"\u2705 7. Coletar arquivos est\u00e1ticos e migrar banco","text":"<p>Ap\u00f3s o deploy, v\u00e1 no painel do servi\u00e7o \u2192 aba Shell:</p> <pre><code>python manage.py collectstatic --noinput\npython manage.py migrate\n</code></pre>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#8-acessar-o-site","title":"\u2705 8. Acessar o site","text":"<p>Seu app Django REST estar\u00e1 publicado no dom\u00ednio <code>.onrender.com</code>.</p>"},{"location":"Disciplina/Roteiros/Constru%C3%A7%C3%A3o/Django/Streaming/15_Deploy/#observacoes","title":"\ud83d\udcdd Observa\u00e7\u00f5es","text":"<ul> <li>O SQLite funciona, mas \u00e9 vol\u00e1til: ao reiniciar o container, os dados s\u00e3o perdidos.</li> <li>Para persist\u00eancia real, use PostgreSQL (Render oferece servi\u00e7o de banco gratuito).</li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/","title":"Documento de Classes e Diagrama de Classe Conceitual","text":""},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#problema-de-modelagem","title":"Problema de Modelagem","text":"<p>Voc\u00ea foi contratado para desenvolver um sistema para gerenciar uma biblioteca de livros digitais. O sistema permitir\u00e1 que os usu\u00e1rios fa\u00e7am login, procurem livros, reservem livros, e baixem c\u00f3pias para leitura offline. A biblioteca tamb\u00e9m oferece assinatura premium, onde os usu\u00e1rios podem acessar livros exclusivos e ganhar vantagens especiais, como reservas antecipadas e downloads ilimitados.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>Este documento apresenta a modelagem conceitual das principais classes do sistema de gerenciamento de biblioteca de livros digitais, conforme os requisitos especificados. O objetivo \u00e9 fornecer uma vis\u00e3o clara das entidades, seus atributos e relacionamentos, servindo de base para o desenvolvimento posterior.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#2-descricao-das-classes","title":"2. Descri\u00e7\u00e3o das Classes","text":""},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#usuario","title":"Usu\u00e1rio","text":"<ul> <li>Atributos:<ul> <li><code>id</code>: int</li> <li><code>nome</code>: string</li> <li><code>email</code>: string</li> <li><code>senha</code>: string (criptografada)</li> <li><code>tipo_assinatura</code>: enum (B\u00c1SICO, PREMIUM)</li> </ul> </li> <li>M\u00e9todos:<ul> <li><code>autenticar()</code></li> <li><code>reservarLivro()</code></li> <li><code>baixarLivro()</code></li> <li><code>assinarPremium()</code></li> <li><code>receberNotificacao()</code></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#livro","title":"Livro","text":"<ul> <li>Atributos:<ul> <li><code>id</code>: int</li> <li><code>titulo</code>: string</li> <li><code>autor</code>: string</li> <li><code>categoria</code>: string</li> <li><code>formato</code>: enum (PDF, EPUB)</li> <li><code>exclusivo</code>: bool</li> <li><code>disponivel</code>: bool</li> </ul> </li> <li>M\u00e9todos:<ul> <li><code>estaDisponivel()</code></li> <li><code>reservar()</code></li> <li><code>baixar()</code></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#reserva","title":"Reserva","text":"<ul> <li>Atributos:<ul> <li><code>id</code>: int</li> <li><code>usuario</code>: Usu\u00e1rio</li> <li><code>livro</code>: Livro</li> <li><code>data_reserva</code>: datetime</li> <li><code>data_expiracao</code>: datetime</li> <li><code>status</code>: enum (ATIVA, EXPIRADA, CONCLU\u00cdDA)</li> </ul> </li> <li>M\u00e9todos:<ul> <li><code>verificarExpiracao()</code></li> <li><code>concluirReserva()</code></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#assinatura","title":"Assinatura","text":"<ul> <li>Atributos:<ul> <li><code>id</code>: int</li> <li><code>usuario</code>: Usu\u00e1rio</li> <li><code>data_inicio</code>: datetime</li> <li><code>data_fim</code>: datetime</li> <li><code>status</code>: enum (ATIVA, EXPIRADA)</li> </ul> </li> <li>M\u00e9todos:<ul> <li><code>renovar()</code></li> <li><code>cancelar()</code></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#notificacao","title":"Notificacao","text":"<ul> <li>Atributos:<ul> <li><code>id</code>: int</li> <li><code>usuario</code>: Usu\u00e1rio</li> <li><code>mensagem</code>: string</li> <li><code>data_envio</code>: datetime</li> <li><code>lida</code>: bool</li> </ul> </li> <li>M\u00e9todos:<ul> <li><code>marcarComoLida()</code></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#pagamento","title":"Pagamento","text":"<ul> <li>Atributos:<ul> <li><code>id</code>: int</li> <li><code>usuario</code>: Usu\u00e1rio</li> <li><code>valor</code>: float</li> <li><code>data_pagamento</code>: datetime</li> <li><code>status</code>: enum (PENDENTE, APROVADO, RECUSADO)</li> </ul> </li> <li>M\u00e9todos:<ul> <li><code>processarPagamento()</code></li> </ul> </li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#3-relacionamentos","title":"3. Relacionamentos","text":"<ul> <li>Um Usu\u00e1rio pode ter v\u00e1rias Reservas e v\u00e1rias Assinaturas.</li> <li>Um Livro pode estar associado a v\u00e1rias Reservas.</li> <li>Uma Reserva est\u00e1 associada a um \u00fanico Usu\u00e1rio e um \u00fanico Livro.</li> <li>Um Usu\u00e1rio pode receber v\u00e1rias Notifica\u00e7\u00f5es.</li> <li>Um Usu\u00e1rio pode realizar v\u00e1rios Pagamentos.</li> </ul>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#4-diagrama-de-classe-conceitual-uml","title":"4. Diagrama de Classe Conceitual (UML)","text":"<p>+----------------+        +----------------+        +----------------+ |    Usu\u00e1rio     |&lt;&gt;-----o|    Reserva     |o-----&lt;&gt;|     Livro      | +----------------+        +----------------+        +----------------+ | id             |        | id             |        | id             | | nome           |        | data_reserva   |        | titulo         | | email          |        | data_expiracao |        | autor          | | senha          |        | status         |        | categoria      | | tipo_assinatura|        +----------------+        | formato        | +----------------+                                 | exclusivo      | | autenticar()   |                                 | disponivel     | | reservarLivro()|                                 +----------------+ | baixarLivro()  |                                 | estaDisponivel()| | assinarPremium()|                                | reservar()      | | receberNotif() |                                 | baixar()        | +----------------+                                 +----------------+       | 1                                         1|      *       |                                            |       | *                                          | +----------------+                                 | |  Assinatura    |                                 | +----------------+                                 | | id             |                                 | | data_inicio    |                                 | | data_fim       |                                 | | status         |                                 | +----------------+                                 | | renovar()      |                                 | | cancelar()     |                                 | +----------------+                                 |       | 1                                          |       | *                                          | +----------------+                                 | |  Notificacao   |                                 | +----------------+                                 | | id             |                                 | | mensagem       |                                 | | data_envio     |                                 | | lida           |                                 | +----------------+                                 | | marcarComoLida()|                                | +----------------+                                 |       | 1                                          |       | *                                          | +----------------+                                 | |   Pagamento    |                                 | +----------------+                                 | | id             |                                 | | valor          |                                 | | data_pagamento |                                 | | status         |                                 | +----------------+                                 | | processarPag() |                                 | +----------------+                                 |</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/class_biblioteca/#5-observacoes","title":"5. Observa\u00e7\u00f5es","text":"<ul> <li>O diagrama acima \u00e9 conceitual e pode ser refinado na modelagem l\u00f3gica/f\u00edsica.</li> <li>As regras de neg\u00f3cio, como limites de reserva e acesso a livros exclusivos, s\u00e3o implementadas nos m\u00e9todos das classes e validadas conforme o tipo de assinatura do usu\u00e1rio.</li> <li>A integra\u00e7\u00e3o com o sistema de pagamento ocorre via classe Pagamento.</li> </ul> <pre>05dc65201709826b8721ee5345c2c7e6c7b5c5b4566e9d711999021328064cc16b85cb5698cd1ef32b4599f3f38774107155faaf60311e09eb3cccb08f858bf9</pre><pre>e6a760dc224795bce1716d7e7c93dd02b4396244f9f163cce645d5b4201e1614ae289b7c2132542d7750a88e22e6576b5234b39988ffd6b55300ae8fe58878c5</pre>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/","title":"Requisitos","text":""},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#especificacao-de-requisitos","title":"Especifica\u00e7\u00e3o de Requisitos","text":"<p>Voc\u00ea foi contratado para desenvolver um sistema para gerenciar uma biblioteca de livros digitais. O sistema permitir\u00e1 que os usu\u00e1rios fa\u00e7am login, procurem livros, reservem livros, e baixem c\u00f3pias para leitura offline. A biblioteca tamb\u00e9m oferece assinatura premium, onde os usu\u00e1rios podem acessar livros exclusivos e ganhar vantagens especiais, como reservas antecipadas e downloads ilimitados.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>Este documento descreve os requisitos para o sistema de gerenciamento de uma biblioteca de livros digitais, que permite login, busca, reserva e download de livros, al\u00e9m de oferecer assinaturas premium com benef\u00edcios exclusivos.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#2-visao-geral-do-sistema","title":"2. Vis\u00e3o Geral do Sistema","text":"<p>O sistema permitir\u00e1 que usu\u00e1rios acessem um cat\u00e1logo de livros digitais, realizem buscas, reservas e downloads. Usu\u00e1rios premium ter\u00e3o acesso a livros exclusivos, reservas antecipadas e downloads ilimitados. O sistema integrar\u00e1 um m\u00f3dulo de autentica\u00e7\u00e3o e um sistema de pagamento para gerenciar assinaturas.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#3-requisitos-funcionais","title":"3. Requisitos Funcionais","text":"<p>RF01 - Cadastro e Autentica\u00e7\u00e3o de Usu\u00e1rio O sistema deve permitir que usu\u00e1rios se cadastrem e fa\u00e7am login utilizando e-mail e senha.</p> <p>RF02 - Busca de Livros O sistema deve permitir que usu\u00e1rios busquem livros por t\u00edtulo, autor ou categoria.</p> <p>RF03 - Reserva de Livros O sistema deve permitir que usu\u00e1rios reservem livros dispon\u00edveis, respeitando limites conforme o tipo de assinatura.</p> <p>RF04 - Download de Livros O sistema deve permitir que usu\u00e1rios baixem livros reservados para leitura offline, conforme permiss\u00f5es da assinatura.</p> <p>RF05 - Gerenciamento de Assinatura O sistema deve permitir que usu\u00e1rios assinem ou renovem planos premium, integrando-se ao sistema de pagamento.</p> <p>RF06 - Notifica\u00e7\u00f5es O sistema deve notificar usu\u00e1rios sobre reservas, prazos de retirada e status de assinatura.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#4-requisitos-nao-funcionais","title":"4. Requisitos N\u00e3o Funcionais","text":"<p>RNF01 - Seguran\u00e7a Senhas de usu\u00e1rios devem ser armazenadas de forma criptografada.</p> <p>RNF02 - Disponibilidade</p> <p>O sistema deve estar dispon\u00edvel 99% do tempo, exceto em per\u00edodos programados de manuten\u00e7\u00e3o.</p> <p>RNF03 - Usabilidade</p> <p>A interface deve ser intuitiva e acess\u00edvel em dispositivos m\u00f3veis e desktops.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#5-regras-de-negocio","title":"5. Regras de Neg\u00f3cio","text":"<p>RN01 - Limite de Reservas Usu\u00e1rios premium podem reservar livros sem limite; usu\u00e1rios b\u00e1sicos t\u00eam limite de reservas simult\u00e2neas.</p> <p>RN02 - Acesso a Livros Exclusivos</p> <p>Apenas usu\u00e1rios premium podem acessar livros exclusivos.</p> <p>RN03 - Prazo de Retirada</p> <p>Reservas expiram se o usu\u00e1rio n\u00e3o realizar o download em at\u00e9 48 horas.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#6-interfaces-externas","title":"6. Interfaces Externas","text":"<p>Integra\u00e7\u00e3o com sistema de pagamento para gest\u00e3o de assinaturas.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#7-restricoes","title":"7. Restri\u00e7\u00f5es","text":"<p>Apenas livros digitais em formatos suportados (ex: PDF, ePub) poder\u00e3o ser cadastrados. O sistema deve operar em conformidade com a LGPD.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#8-criterios-de-aceitacao","title":"8. Crit\u00e9rios de Aceita\u00e7\u00e3o","text":"<p>Usu\u00e1rio consegue reservar e baixar um livro com sucesso. Usu\u00e1rio premium acessa livros exclusivos. Limites de reserva s\u00e3o respeitados conforme o tipo de assinatura.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#9-glossario","title":"9. Gloss\u00e1rio","text":"<p>Usu\u00e1rio Premium: Usu\u00e1rio com assinatura paga e benef\u00edcios adicionais. Reserva: Ato de garantir o direito de baixar um livro por tempo limitado.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/req_biblioteca/#10-referencias","title":"10. Refer\u00eancias","text":"<p>Documento de modelagem da biblioteca digital. Pol\u00edticas de privacidade e LGPD.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/uc_biblioteca/","title":"Casos de Uso","text":""},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/uc_biblioteca/#problema-de-modelagem","title":"Problema de Modelagem","text":"<p>Voc\u00ea foi contratado para desenvolver um sistema para gerenciar uma biblioteca de livros digitais. O sistema permitir\u00e1 que os usu\u00e1rios fa\u00e7am login, procurem livros, reservem livros, e baixem c\u00f3pias para leitura offline. A biblioteca tamb\u00e9m oferece assinatura premium, onde os usu\u00e1rios podem acessar livros exclusivos e ganhar vantagens especiais, como reservas antecipadas e downloads ilimitados.</p>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/uc_biblioteca/#caso-de-uso","title":"Caso de Uso","text":""},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/uc_biblioteca/#titulo-usuario-reserva-um-livro","title":"T\u00edtulo: Usu\u00e1rio Reserva um Livro","text":"<ol> <li>Ator Principal: Usu\u00e1rio autenticado</li> <li>Atores Secund\u00e1rios: Sistema de pagamento (para verifica\u00e7\u00e3o de status de assinatura)</li> <li>Pr\u00e9-condi\u00e7\u00f5es:</li> <li>O usu\u00e1rio deve estar autenticado.</li> <li>O livro desejado deve estar dispon\u00edvel para reserva.</li> <li>Fluxo Principal:</li> <li>O usu\u00e1rio navega na biblioteca e seleciona um livro dispon\u00edvel.</li> <li>O sistema verifica se o usu\u00e1rio \u00e9 um assinante premium.<ul> <li>Se sim, permite a reserva imediata.</li> <li>Se n\u00e3o, verifica se o n\u00famero de reservas permitidas n\u00e3o foi excedido.</li> </ul> </li> <li>O sistema realiza a reserva do livro e informa o prazo m\u00e1ximo para retirada.</li> <li>O sistema atualiza o status do livro como \"Reservado\" e o associa ao usu\u00e1rio.</li> <li>Fluxos Alternativos:</li> <li>Se o livro n\u00e3o estiver dispon\u00edvel para reserva, o sistema informa ao usu\u00e1rio que o livro est\u00e1 indispon\u00edvel.</li> <li>Se o usu\u00e1rio excedeu o limite de reservas, o sistema informa que n\u00e3o \u00e9 poss\u00edvel realizar mais reservas.</li> <li>P\u00f3s-condi\u00e7\u00f5es:</li> <li>O livro \u00e9 reservado com sucesso e o status \u00e9 atualizado.</li> <li>O usu\u00e1rio \u00e9 notificado do prazo para retirar o livro.</li> </ol>"},{"location":"Disciplina/Roteiros/Elabora%C3%A7%C3%A3o/uc_biblioteca/#pontos-para-modelagem","title":"Pontos para Modelagem","text":"<p>A partir deste caso de uso, voc\u00ea pode definir os seguintes objetos e suas intera\u00e7\u00f5es:</p> <ol> <li>Usu\u00e1rio:</li> <li>Atributos: nome, email, status de assinatura, n\u00famero de reservas.</li> <li> <p>M\u00e9todos: autenticar(), reservarLivro(), cancelarReserva().</p> </li> <li> <p>Livro:</p> </li> <li>Atributos: t\u00edtulo, autor, status (dispon\u00edvel, reservado, indispon\u00edvel), prazo de retirada.</li> <li> <p>M\u00e9todos: verificarDisponibilidade(), reservar(), liberarReserva().</p> </li> <li> <p>Biblioteca:</p> </li> <li>Atributos: cat\u00e1logo de livros, usu\u00e1rios cadastrados.</li> <li> <p>M\u00e9todos: buscarLivro(), registrarReserva(), verificarLimiteReservas().</p> </li> <li> <p>Assinatura:</p> </li> <li>Atributos: tipo (premium, b\u00e1sico), limite de reservas.</li> <li>M\u00e9todos: verificarBenef\u00edcios().</li> </ol> <p>Esse cen\u00e1rio pode ser expandido com novos casos de uso, como o gerenciamento de downloads ou renova\u00e7\u00e3o de assinaturas.</p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/","title":"04 - Design Thinking","text":""},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#projeto-redesign-de-um-parque-publico-para-engajamento-comunitario","title":"Projeto: Redesign de um Parque P\u00fablico para Engajamento Comunit\u00e1rio","text":"<p>Problema: Um parque local est\u00e1 subutilizado, com reclama\u00e7\u00f5es sobre seguran\u00e7a, falta de comodidades e desinteresse da comunidade.</p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#1-empatizar","title":"1. Empatizar","text":"<p>Objetivo: Compreender as necessidades e dores dos usu\u00e1rios. - Atividades:   - Entrevistar frequentadores do parque, n\u00e3o frequentadores e partes interessadas (moradores, comerciantes).   - Observar o parque em diferentes hor\u00e1rios para identificar padr\u00f5es (bancos vazios, lixo, falta de atividades).   - Criar mapas de empatia para documentar frustra\u00e7\u00f5es (ex: \"Me sinto inseguro \u00e0 noite\" ou \"N\u00e3o h\u00e1 nada para fazer com meus filhos\").  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#2-definir","title":"2. Definir","text":"<p>Objetivo: Estruturar o problema central a ser resolvido. - Declara\u00e7\u00e3o do Problema: \"Como podemos transformar o parque em um espa\u00e7o seguro, vibrante e inclusivo que incentive a intera\u00e7\u00e3o e o uso regular pela comunidade?\" </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#3-idear","title":"3. Idear","text":"<p>Objetivo: Gerar solu\u00e7\u00f5es criativas. - Brainstorming:   - Organizar workshops com moradores, artistas e urbanistas.   - Ideias propostas:     - Instalar obras de arte interativas ou murais.     - Adicionar assentos modulares e \u00e1reas com sombra.     - Promover eventos semanais (feira livre, aulas de yoga).     - Melhorar ilumina\u00e7\u00e3o e c\u00e2meras de seguran\u00e7a.   - Usar t\u00e9cnicas de prioriza\u00e7\u00e3o (ex: vota\u00e7\u00e3o com adesivos) para selecionar as melhores ideias.  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#4-prototipar","title":"4. Prototipar","text":"<p>Objetivo: Criar vers\u00f5es tang\u00edveis e de baixo custo das solu\u00e7\u00f5es. - Prot\u00f3tipos:   - Maquete 3D do parque com o novo layout.   - \"Parque pop-up\" com assentos tempor\u00e1rios, ilumina\u00e7\u00e3o e arte.   - Calend\u00e1rio de eventos para teste de feedback.  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#5-testar","title":"5. Testar","text":"<p>Objetivo: Coletar feedback e refinar a solu\u00e7\u00e3o. - Testes:   - Convidar a comunidade para experimentar o \"parque pop-up\" e dar opini\u00f5es.   - Usar pesquisas ou quadros de feedback para avaliar o que funciona ou n\u00e3o.   - Repetir o processo com base nos resultados (ex: ajustar disposi\u00e7\u00e3o de assentos, aumentar ilumina\u00e7\u00e3o).  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#resultado","title":"Resultado","text":"<p>Ap\u00f3s itera\u00e7\u00f5es, o projeto final inclui: - Ilumina\u00e7\u00e3o solar e c\u00e2meras de seguran\u00e7a. - Uma horta comunit\u00e1ria e espa\u00e7o para eventos. - Exposi\u00e7\u00f5es de arte rotativas criadas por artistas locais. - Calend\u00e1rio mensal de eventos (noites de cinema, oficinas).  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_DesignThinking/#por-que-isso-funciona","title":"Por que isso funciona?","text":"<ul> <li>Foco nas pessoas: Solu\u00e7\u00f5es alinhadas \u00e0s necessidades da comunidade.  </li> <li>Colaborativo: Partes interessadas envolvidas em todas as etapas.  </li> <li>Iterativo: Prot\u00f3tipos permitem ajustes r\u00e1pidos com base no feedback.  </li> </ul> <p>O Design Thinking garante que o parque se torne um ponto de conex\u00e3o, seguran\u00e7a e criatividade! \ud83c\udf33\ud83c\udfa8</p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/","title":"04 - RUP","text":""},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#1-estrutura-geral-no-github","title":"\ud83d\udd39 1. Estrutura Geral no GitHub","text":"<ul> <li>Reposit\u00f3rio: Crie um reposit\u00f3rio GitHub para armazenar o c\u00f3digo-fonte, documenta\u00e7\u00e3o e artefatos do projeto.</li> <li>Projects (Kanban): Configure um GitHub Project para visualizar o progresso do projeto (pode ser um Kanban ou um Tabela).</li> <li>Milestones: Crie marcos (milestones) para cada fase do RUP: Inicia\u00e7\u00e3o, Elabora\u00e7\u00e3o, Constru\u00e7\u00e3o e Transi\u00e7\u00e3o.</li> <li>Issues: Use issues para tarefas detalhadas dentro de cada fase.</li> </ul>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#2-alinhando-com-as-fases-do-rup","title":"\ud83d\udd39 2. Alinhando com as Fases do RUP","text":""},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#fase-1-iniciacao","title":"\ud83d\udccc Fase 1: Inicia\u00e7\u00e3o","text":"<p>\ud83d\udcc5 Milestone: Inicia\u00e7\u00e3o \ud83c\udfaf Objetivo: Definir o escopo do projeto, riscos, stakeholders e cronograma inicial. \ud83d\udcdd Tarefas (Issues): - [ ] Criar documento de vis\u00e3o do projeto \ud83d\udcc4 - [ ] Identificar stakeholders \ud83d\udc65 - [ ] Definir principais riscos \u26a0\ufe0f - [ ] Criar um reposit\u00f3rio no GitHub \ud83c\udfd7 - [ ] Criar Project no GitHub para gerenciar tarefas \ud83d\udccc  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#fase-2-elaboracao","title":"\ud83d\ude80 Fase 2: Elabora\u00e7\u00e3o","text":"<p>\ud83d\udcc5 Milestone: Elabora\u00e7\u00e3o \ud83c\udfaf Objetivo: Definir arquitetura, prot\u00f3tipos e requisitos do sistema. \ud83d\udcdd Tarefas (Issues): - [ ] Criar diagrama de casos de uso \ud83d\udccc - [ ] Definir requisitos funcionais e n\u00e3o funcionais \u2705 - [ ] Criar prot\u00f3tipos de interface \ud83c\udfa8 - [ ] Criar diagrama de classes \ud83d\udcca - [ ] Definir tecnologias e ferramentas \ud83d\udd27 - [ ] Configurar ambiente de desenvolvimento \ud83d\udcbb  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#fase-3-construcao","title":"\ud83c\udfd7 Fase 3: Constru\u00e7\u00e3o","text":"<p>\ud83d\udcc5 Milestone: Constru\u00e7\u00e3o \ud83c\udfaf Objetivo: Implementar funcionalidades principais e realizar testes. \ud83d\udcdd Tarefas (Issues): - [ ] Implementar autentica\u00e7\u00e3o de usu\u00e1rios \ud83d\udd11 - [ ] Criar CRUD de entidade principal \ud83d\udcc2 - [ ] Implementar API REST (se necess\u00e1rio) \ud83d\udd17 - [ ] Desenvolver interface principal \ud83d\udda5 - [ ] Testar funcionalidades unit\u00e1rias \ud83e\uddea - [ ] Criar documenta\u00e7\u00e3o para desenvolvedores \ud83d\udcd6  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#fase-4-transicao","title":"\ud83d\udea2 Fase 4: Transi\u00e7\u00e3o","text":"<p>\ud83d\udcc5 Milestone: Transi\u00e7\u00e3o \ud83c\udfaf Objetivo: Implanta\u00e7\u00e3o, treinamento e refinamento final. \ud83d\udcdd Tarefas (Issues): - [ ] Testes de aceita\u00e7\u00e3o do usu\u00e1rio \ud83d\udc68\u200d\ud83d\udcbb - [ ] Corre\u00e7\u00f5es finais de bugs \ud83d\udc1b - [ ] Criar documenta\u00e7\u00e3o do usu\u00e1rio \ud83d\udcd8 - [ ] Publica\u00e7\u00e3o do sistema \ud83c\udf0d - [ ] Treinamento da equipe \ud83c\udf93  </p>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#3-usando-github-projects","title":"\ud83d\udd39 3. Usando GitHub Projects","text":"<ol> <li>Criar um \"Project\" no GitHub e configurar colunas como:</li> <li>\ud83d\udccc Backlog: Ideias e tarefas pendentes.</li> <li>\ud83d\udea7 Em andamento: Tarefas que est\u00e3o sendo desenvolvidas.</li> <li>\ud83d\udee0 Em revis\u00e3o: C\u00f3digo aguardando aprova\u00e7\u00e3o.</li> <li> <p>\u2705 Conclu\u00eddo: Tarefas finalizadas.</p> </li> <li> <p>Associar Issues aos Milestones conforme a fase do RUP.</p> </li> <li> <p>Utilizar Labels para Categorizar Issues, por exemplo:</p> </li> <li><code>documenta\u00e7\u00e3o</code> \ud83d\udcdd</li> <li><code>backend</code> \ud83d\udda5  </li> <li><code>frontend</code> \ud83c\udfa8  </li> <li><code>bug</code> \ud83d\udc1b  </li> <li><code>teste</code> \ud83e\uddea  </li> </ol>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#4-fluxo-de-trabalho","title":"\ud83d\udd39 4. Fluxo de Trabalho","text":"<ul> <li>Criar issues para cada tarefa e associar a milestones.  </li> <li>Mover issues entre colunas do Project conforme avan\u00e7am.  </li> <li>Usar Pull Requests (PRs) vinculados \u00e0s issues para c\u00f3digo-fonte.  </li> <li>Revisar e fechar milestones ao final de cada fase.</li> </ul>"},{"location":"Disciplina/Roteiros/Inicia%C3%A7%C3%A3o/04_UPgithub/#conclusao","title":"\ud83d\udd39 Conclus\u00e3o","text":"<p>Seguindo essa estrutura, seu projeto ter\u00e1 uma organiza\u00e7\u00e3o clara e alinhada ao RUP dentro do GitHub. Isso facilitar\u00e1 o gerenciamento de tarefas, rastreamento do progresso e colabora\u00e7\u00e3o entre os membros da equipe. \ud83d\ude80</p>"},{"location":"Disciplina/Roteiros/Transi%C3%A7%C3%A3o/","title":"Transi\u00e7\u00e3o","text":""},{"location":"Disciplina/dojo/dojo/","title":"Tema para Dojo de Python: Calculadora de Nota\u00e7\u00e3o Polonesa Reversa (RPN)","text":""},{"location":"Disciplina/dojo/dojo/#conceito-introdutorio","title":"Conceito Introdut\u00f3rio:","text":"<p>A Nota\u00e7\u00e3o Polonesa Reversa (RPN) \u00e9 um m\u00e9todo de representa\u00e7\u00e3o de express\u00f5es matem\u00e1ticas onde os operadores seguem os operandos. \u00c9 ideal para aprender TDD e Baby Steps porque:</p> <ol> <li>\u2705 Problema bem definido com requisitos claros</li> <li>\u2705 Permite implementa\u00e7\u00e3o incremental</li> <li>\u2705 F\u00e1cil de testar com casos simples</li> <li>\u2705 Boa para praticar estrutura de dados (pilha)</li> </ol>"},{"location":"Disciplina/dojo/dojo/#problema","title":"Problema:","text":"<p>Implementar uma calculadora RPN que processe express\u00f5es como: <code>\"3 4 +\"</code> \u2192 <code>7</code> ou <code>\"5 1 2 + 4 * + 3 -\"</code> \u2192 <code>14</code></p>"},{"location":"Disciplina/dojo/dojo/#estrutura-do-dojo-90-minutos","title":"Estrutura do Dojo (90 minutos):","text":""},{"location":"Disciplina/dojo/dojo/#1-aquecimento-10-min","title":"1. Aquecimento (10 min)","text":"<ul> <li>Explica\u00e7\u00e3o do problema RPN</li> <li>Demonstra\u00e7\u00e3o de exemplo: <code>\"2 3 +\"</code> = <code>5</code></li> <li>Discuss\u00e3o sobre pilha LIFO</li> </ul>"},{"location":"Disciplina/dojo/dojo/#2-primeiro-ciclo-tdd-15-min","title":"2. Primeiro Ciclo TDD (15 min)","text":"<p>Teste 1 - Caso mais simples: <pre><code>def test_soma_simples():\n    assert calcular_rpn(\"2 3 +\") == 5\n</code></pre></p> <p>Baby Step 1 - Implementa\u00e7\u00e3o m\u00ednima: <pre><code>def calcular_rpn(expressao):\n    return 5  # Implementa\u00e7\u00e3o mais simples poss\u00edvel\n</code></pre></p>"},{"location":"Disciplina/dojo/dojo/#3-segundo-ciclo-15-min","title":"3. Segundo Ciclo (15 min)","text":"<p>Teste 2 - Adicionando outro operador: <pre><code>def test_subtracao():\n    assert calcular_rpn(\"5 3 -\") == 2\n</code></pre></p> <p>Baby Step 2: <pre><code>def calcular_rpn(expressao):\n    if \"+\" in expressao:\n        return 5\n    elif \"-\" in expressao:\n        return 2\n</code></pre></p>"},{"location":"Disciplina/dojo/dojo/#4-terceiro-ciclo-15-min","title":"4. Terceiro Ciclo (15 min)","text":"<p>Teste 3 - M\u00faltiplas opera\u00e7\u00f5es: <pre><code>def test_multiplas_operacoes():\n    assert calcular_rpn(\"2 3 + 4 *\") == 20  # (2+3)*4\n</code></pre></p> <p>Baby Step 3 - Implementar pilha: <pre><code>def calcular_rpn(expressao):\n    pilha = []\n    tokens = expressao.split()\n\n    for token in tokens:\n        if token == \"+\":\n            b = pilha.pop()\n            a = pilha.pop()\n            pilha.append(a + b)\n        elif token == \"-\":\n            b = pilha.pop()\n            a = pilha.pop()\n            pilha.append(a - b)\n        elif token == \"*\":\n            b = pilha.pop()\n            a = pilha.pop()\n            pilha.append(a * b)\n        else:\n            pilha.append(int(token))\n\n    return pilha[0]\n</code></pre></p>"},{"location":"Disciplina/dojo/dojo/#5-ciclos-adicionais-20-min","title":"5. Ciclos Adicionais (20 min)","text":"<ul> <li>Adicionar divis\u00e3o</li> <li>Tratar n\u00fameros decimais</li> <li>Lidar com erro (pilha vazia, divis\u00e3o por zero)</li> <li>Express\u00f5es mais complexas</li> </ul>"},{"location":"Disciplina/dojo/dojo/#6-retrospectiva-15-min","title":"6. Retrospectiva (15 min)","text":"<ul> <li>O que aprendemos sobre TDD?</li> <li>Como os baby steps ajudaram?</li> <li>Quais desafios encontramos?</li> </ul>"},{"location":"Disciplina/dojo/dojo/#regras-do-dojo","title":"Regras do Dojo:","text":"<ul> <li>\ud83d\udeab N\u00e3o pular etapas</li> <li>\u2705 Sempre escrever o teste primeiro</li> <li>\ud83d\udd04 Ciclos curtos (teste \u2192 implementa\u00e7\u00e3o \u2192 refatora\u00e7\u00e3o)</li> <li>\ud83d\udc65 Pair programming rotativo</li> </ul>"},{"location":"Disciplina/dojo/dojo/#exemplos-de-testes-para-expandir","title":"Exemplos de Testes para Expandir:","text":"<pre><code>def test_divisao():\n    assert calcular_rpn(\"6 2 /\") == 3\n\ndef test_expressao_complexa():\n    assert calcular_rpn(\"5 1 2 + 4 * + 3 -\") == 14\n\ndef test_numero_decimal():\n    assert calcular_rpn(\"3.5 2.5 +\") == 6.0\n\ndef test_erro_divisao_zero():\n    with pytest.raises(ValueError):\n        calcular_rpn(\"5 0 /\")\n</code></pre> <p>Este tema \u00e9 excelente para iniciantes porque come\u00e7a super simples e gradualmente introduz conceitos mais complexos, sempre mantendo os baby steps! \ud83d\udc0d\ud83d\ude80</p>"},{"location":"Disciplina/dojo/setup/","title":"Configurando Ambiente de Testes para Python","text":"<p>Vou te mostrar como configurar um ambiente de testes para Python usando pytest, que \u00e9 uma das ferramentas mais populares e f\u00e1ceis de usar.</p>"},{"location":"Disciplina/dojo/setup/#1-configuracao-basica","title":"1. Configura\u00e7\u00e3o B\u00e1sica","text":""},{"location":"Disciplina/dojo/setup/#instalacao-do-pytest","title":"Instala\u00e7\u00e3o do pytest","text":"<pre><code>pip install pytest\n</code></pre>"},{"location":"Disciplina/dojo/setup/#estrutura-de-arquivos","title":"Estrutura de arquivos","text":"<pre><code>projeto_rpn/\n\u251c\u2500\u2500 calculadora_rpn.py   # Nosso c\u00f3digo principal\n\u251c\u2500\u2500 test_calculadora.py  # Nossos testes\n\u2514\u2500\u2500 requirements.txt     # Depend\u00eancias do projeto\n</code></pre>"},{"location":"Disciplina/dojo/setup/#2-configuracao-do-requirementstxt","title":"2. Configura\u00e7\u00e3o do requirements.txt","text":"<pre><code>pytest==7.4.0\n</code></pre>"},{"location":"Disciplina/dojo/setup/#3-escrevendo-nosso-primeiro-teste","title":"3. Escrevendo nosso primeiro teste","text":""},{"location":"Disciplina/dojo/setup/#test_calculadorapy","title":"test_calculadora.py","text":"<pre><code>import pytest\nfrom calculadora_rpn import calcular_rpn\n\ndef test_soma_simples():\n    \"\"\"Teste mais simples: soma de dois n\u00fameros\"\"\"\n    assert calcular_rpn(\"2 3 +\") == 5\n\ndef test_subtracao():\n    \"\"\"Teste de subtra\u00e7\u00e3o\"\"\"\n    assert calcular_rpn(\"5 3 -\") == 2\n\ndef test_expressao_vazia():\n    \"\"\"Teste com express\u00e3o vazia\"\"\"\n    assert calcular_rpn(\"\") == 0\n\nif __name__ == \"__main__\":\n    pytest.main([__file__, \"-v\"])\n</code></pre>"},{"location":"Disciplina/dojo/setup/#calculadora_rpnpy-implementacao-inicial","title":"calculadora_rpn.py (implementa\u00e7\u00e3o inicial)","text":"<pre><code>def calcular_rpn(expressao):\n    \"\"\"\n    Calculadora de Nota\u00e7\u00e3o Polonesa Reversa (RPN)\n\n    Args:\n        expressao (str): Express\u00e3o matem\u00e1tica em RPN (ex: \"2 3 +\")\n\n    Returns:\n        int/float: Resultado do c\u00e1lculo\n    \"\"\"\n    if not expressao.strip():\n        return 0\n\n    # Implementa\u00e7\u00e3o m\u00ednima para passar no primeiro teste\n    return 5\n</code></pre>"},{"location":"Disciplina/dojo/setup/#4-executando-os-testes","title":"4. Executando os testes","text":""},{"location":"Disciplina/dojo/setup/#opcao-1-pela-linha-de-comando","title":"Op\u00e7\u00e3o 1: Pela linha de comando","text":"<pre><code># Executar todos os testes\npytest\n\n# Executar com detalhes\npytest -v\n\n# Executar um arquivo espec\u00edfico\npytest test_calculadora.py\n\n# Executar um teste espec\u00edfico\npytest test_calculadora.py::test_soma_simples -v\n</code></pre>"},{"location":"Disciplina/dojo/setup/#opcao-2-pelo-proprio-arquivo-de-testes","title":"Op\u00e7\u00e3o 2: Pelo pr\u00f3prio arquivo de testes","text":"<pre><code>python test_calculadora.py\n</code></pre>"},{"location":"Disciplina/dojo/setup/#opcao-3-configurando-no-ide-vs-code","title":"Op\u00e7\u00e3o 3: Configurando no IDE (VS Code)","text":"<ol> <li>Instale a extens\u00e3o Python</li> <li>Crie uma pasta <code>.vscode</code> no seu projeto</li> <li>Crie o arquivo <code>.vscode/settings.json</code>: <pre><code>{\n    \"python.testing.pytestArgs\": [\n        \".\"\n    ],\n    \"python.testing.unittestEnabled\": false,\n    \"python.testing.pytestEnabled\": true\n}\n</code></pre></li> </ol>"},{"location":"Disciplina/dojo/setup/#5-configuracao-avancada-opcional","title":"5. Configura\u00e7\u00e3o Avan\u00e7ada (opcional)","text":""},{"location":"Disciplina/dojo/setup/#pytestini-configuracoes-personalizadas","title":"pytest.ini (configura\u00e7\u00f5es personalizadas)","text":"<pre><code>[pytest]\ntestpaths = tests\npython_files = test_*.py\npython_classes = Test*\npython_functions = test_*\naddopts = -v --tb=short\n</code></pre>"},{"location":"Disciplina/dojo/setup/#coveragerc-para-analise-de-cobertura","title":".coveragerc (para an\u00e1lise de cobertura)","text":"<pre><code>[run]\nsource = .\nomit = tests/*, venv/*\n\n[report]\nshow_missing = true\nfail_under = 80\n</code></pre>"},{"location":"Disciplina/dojo/setup/#executando-com-cobertura","title":"Executando com cobertura","text":"<pre><code>pip install pytest-cov\npytest --cov=calculadora_rpn --cov-report=html\n</code></pre>"},{"location":"Disciplina/dojo/setup/#6-exemplo-de-desenvolvimento-com-baby-steps","title":"6. Exemplo de Desenvolvimento com Baby Steps","text":""},{"location":"Disciplina/dojo/setup/#primeiro-ciclo-fazer-o-primeiro-teste-passar","title":"Primeiro ciclo: fazer o primeiro teste passar","text":"<pre><code># calculadora_rpn.py (ap\u00f3s primeiro ciclo)\ndef calcular_rpn(expressao):\n    if not expressao.strip():\n        return 0\n\n    # Implementa\u00e7\u00e3o espec\u00edfica para o primeiro teste\n    if expressao == \"2 3 +\":\n        return 5\n\n    return 0\n</code></pre>"},{"location":"Disciplina/dojo/setup/#segundo-ciclo-generalizar-a-implementacao","title":"Segundo ciclo: generalizar a implementa\u00e7\u00e3o","text":"<pre><code># calculadora_rpn.py (ap\u00f3s segundo ciclo)\ndef calcular_rpn(expressao):\n    if not expressao.strip():\n        return 0\n\n    pilha = []\n    tokens = expressao.split()\n\n    for token in tokens:\n        if token == \"+\":\n            b = pilha.pop()\n            a = pilha.pop()\n            pilha.append(a + b)\n        else:\n            pilha.append(int(token))\n\n    return pilha[0] if pilha else 0\n</code></pre>"},{"location":"Disciplina/dojo/setup/#7-dicas-para-o-dojo","title":"7. Dicas para o Dojo","text":"<ol> <li>Mantenha os testes vis\u00edveis: Use um projetor ou compartilhamento de tela</li> <li>Rota\u00e7\u00e3o de pares: A cada 5-7 minutos, troque quem est\u00e1 digitando</li> <li>Siga estritamente o TDD: </li> <li>Vermelho (teste falha)</li> <li>Verde (implementa\u00e7\u00e3o m\u00ednima)</li> <li>Refatora\u00e7\u00e3o (melhorar o c\u00f3digo)</li> <li>Comemore os pequenos sucessos: Cada teste que passa \u00e9 uma vit\u00f3ria!</li> </ol> <p>Este setup \u00e9 simples mas eficaz para dojos, permitindo que o foco fique na pr\u00e1tica do TDD e baby steps rather than na complexidade da configura\u00e7\u00e3o. \ud83d\udc0d\ud83e\uddea</p>"},{"location":"Disciplina/dojo/tddpairprogramming/","title":"Processo de Pair Programming e TDD no Dojo","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#pair-programming-programacao-em-pares","title":"Pair Programming (Programa\u00e7\u00e3o em Pares)","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#o-que-e","title":"O que \u00e9:","text":"<p>Duas pessoas trabalhando juntas em uma \u00fanica esta\u00e7\u00e3o de trabalho:</p> <ul> <li>Piloto (Driver): Quem digita o c\u00f3digo</li> <li>Co-piloto (Navigator): Quem guia, revisa e pensa estrategicamente</li> </ul>"},{"location":"Disciplina/dojo/tddpairprogramming/#como-funciona-a-rotacao","title":"Como funciona a rota\u00e7\u00e3o:","text":"<p>Tempo: A cada 5-7 minutos (ou ap\u00f3s cada teste passar) Sistema de rota\u00e7\u00e3o:</p> <pre><code>Round 1: Pessoa A \u2192 Piloto, Pessoa B \u2192 Co-piloto\nRound 2: Pessoa B \u2192 Piloto, Pessoa C \u2192 Co-piloto  \nRound 3: Pessoa C \u2192 Piloto, Pessoa A \u2192 Co-piloto\n</code></pre>"},{"location":"Disciplina/dojo/tddpairprogramming/#regras-basicas","title":"Regras b\u00e1sicas:","text":"<ul> <li>\u2705 Apenas o piloto toca no teclado</li> <li>\u2705 Co-piloto foca na estrat\u00e9gia e qualidade</li> <li>\u2705 Discuss\u00e3o \u00e9 encorajada, mas decis\u00e3o final do piloto</li> <li>\u2705 Respeito m\u00fatuo pelas ideias</li> </ul>"},{"location":"Disciplina/dojo/tddpairprogramming/#processo-tdd-test-driven-development","title":"\ud83d\udd34\ud83d\udfe2\ud83d\udd01 Processo TDD (Test-Driven Development)","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#ciclo-red-green-refactor","title":"Ciclo Red-Green-Refactor:","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#1-red-escrever-um-teste-que-falha","title":"1. \ud83d\udd34 RED - Escrever um teste que falha","text":"<pre><code>def test_multiplicacao_simples():\n    assert calcular_rpn(\"2 3 *\") == 6  # Este teste vai falhar inicialmente\n</code></pre> <p>Por qu\u00ea?: Definimos o comportamento desejado antes da implementa\u00e7\u00e3o</p>"},{"location":"Disciplina/dojo/tddpairprogramming/#2-green-implementacao-minima-para-passar","title":"2. \ud83d\udfe2 GREEN - Implementa\u00e7\u00e3o m\u00ednima para passar","text":"<pre><code>def calcular_rpn(expressao):\n    # Implementa\u00e7\u00e3o mais simples poss\u00edvel\n    if expressao == \"2 3 *\":\n        return 6\n    # ... resto do c\u00f3digo existente\n</code></pre> <p>Por qu\u00ea?: Foco em fazer o teste passar, n\u00e3o em perfei\u00e7\u00e3o</p>"},{"location":"Disciplina/dojo/tddpairprogramming/#3-refactor-melhorar-o-codigo-sem-quebrar-testes","title":"3. \ud83d\udd01 REFACTOR - Melhorar o c\u00f3digo sem quebrar testes","text":"<pre><code>def calcular_rpn(expressao):\n    # Refatora\u00e7\u00e3o: generalizar a multiplica\u00e7\u00e3o\n    pilha = []\n    for token in expressao.split():\n        if token == \"*\":\n            b, a = pilha.pop(), pilha.pop()\n            pilha.append(a * b)\n        else:\n            pilha.append(int(token))\n    return pilha[0]\n</code></pre> <p>Por qu\u00ea?: Melhorar a qualidade mantendo a funcionalidade</p>"},{"location":"Disciplina/dojo/tddpairprogramming/#fluxo-completo-do-dojo","title":"\ud83c\udfaf Fluxo Completo do Dojo","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#pre-dojo","title":"Pr\u00e9-dojo:","text":"<ol> <li>Configurar ambiente (VS Code + pytest)</li> <li>Explicar o problema (Calculadora RPN)</li> <li>Formar pares iniciais</li> </ol>"},{"location":"Disciplina/dojo/tddpairprogramming/#durante-o-dojo","title":"Durante o dojo:","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 1. ESCREVER TESTE (RED) - Co-piloto sugere      \u2502\n\u2502    - Novo teste deve falhar                     \u2502\n\u2502    - Foco em um requisito de cada vez           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2. IMPLEMENTAR (GREEN) - Piloto codifica        \u2502\n\u2502    - Implementa\u00e7\u00e3o mais simples poss\u00edvel        \u2502\n\u2502    - \"Cheat\" permitido para fazer teste passar  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3. TESTAR - Ambos verificam                     \u2502\n\u2502    - pytest deve mostrar verde                  \u2502\n\u2502    - Celebrar! \ud83c\udf89                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 4. REFATORAR (REFACTOR) - Co-piloto guia        \u2502\n\u2502    - Melhorar c\u00f3digo sem quebrar testes         \u2502\n\u2502    - Remover duplica\u00e7\u00e3o, melhorar legibilidade  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5. ROTACIONAR - Trocar pap\u00e9is                   \u2502\n\u2502    - Novo piloto \u2192 teclado                      \u2502\n\u2502    - Novo co-piloto \u2192 estrat\u00e9gia                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"Disciplina/dojo/tddpairprogramming/#papeis-em-cada-fase","title":"\ud83d\udca1 Pap\u00e9is em Cada Fase","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#piloto-driver","title":"Piloto (Driver):","text":"<ul> <li>\u270d\ufe0f Escreve o c\u00f3digo</li> <li>\ud83c\udfaf Foca no \"como\" implementar</li> <li>\u26a1 Mant\u00e9m o ritmo</li> <li>\u2705 Garante que testes passem</li> </ul>"},{"location":"Disciplina/dojo/tddpairprogramming/#co-piloto-navigator","title":"Co-piloto (Navigator):","text":"<ul> <li>\ud83e\udded Pensa no \"o qu\u00ea\" e \"por qu\u00ea\"</li> <li>\ud83d\udd0d Revise o c\u00f3digo em tempo real</li> <li>\ud83d\udea8 Identifica poss\u00edveis problemas</li> <li>\ud83d\udcdd Sugere pr\u00f3ximos passos</li> </ul>"},{"location":"Disciplina/dojo/tddpairprogramming/#exemplo-pratico-de-um-ciclo","title":"\ud83c\udfaa Exemplo Pr\u00e1tico de um Ciclo","text":""},{"location":"Disciplina/dojo/tddpairprogramming/#round-1","title":"Round 1:","text":"<p>Co-piloto: \"Vamos testar a multiplica\u00e7\u00e3o: <code>2 3 *</code> deve retornar 6\" Piloto: Escreve o teste que falha</p> <pre><code>def test_multiplicacao():\n    assert calcular_rpn(\"2 3 *\") == 6  # \ud83d\udd34 FALHA\n</code></pre>"},{"location":"Disciplina/dojo/tddpairprogramming/#round-2","title":"Round 2:","text":"<p>Piloto: Implementa solu\u00e7\u00e3o m\u00ednima</p> <pre><code>def calcular_rpn(expressao):\n    if expressao == \"2 3 *\":\n        return 6  # \ud83d\udfe2 FUNCIONA (mas \u00e9 trapa\u00e7a!)\n    # ... c\u00f3digo existente\n</code></pre>"},{"location":"Disciplina/dojo/tddpairprogramming/#round-3","title":"Round 3:","text":"<p>Co-piloto: \"Agora vamos generalizar para qualquer multiplica\u00e7\u00e3o\" Piloto: Refatora para implementa\u00e7\u00e3o correta</p> <pre><code>def calcular_rpn(expressao):\n    pilha = []\n    for token in expressao.split():\n        if token == \"*\":\n            b, a = pilha.pop(), pilha.pop()\n            pilha.append(a * b)  # \ud83d\udfe2\u2705 FUNCIONA GENERALIZADO\n        else:\n            pilha.append(int(token))\n    return pilha[0]\n</code></pre>"},{"location":"Disciplina/dojo/tddpairprogramming/#regras-de-ouro","title":"\ud83d\udea8 Regras de Ouro","text":"<ol> <li>Nunca escrever c\u00f3digo sem teste falhando primeiro</li> <li>Rota\u00e7\u00e3o frequente (5-7 min)</li> <li>Celebrar cada teste que passa \ud83c\udf89</li> <li>Respeitar o par atual - sem interfer\u00eancia da plateia</li> <li>Baby steps: um pequeno passo de cada vez</li> </ol>"},{"location":"Disciplina/dojo/tddpairprogramming/#beneficios-desta-abordagem","title":"\ud83c\udfc6 Benef\u00edcios desta Abordagem","text":"<ul> <li>\ud83c\udf93 Aprendizado coletivo: Todos participam e aprendem</li> <li>\ud83d\udd0d Qualidade: Dois pares de olhos veem mais que um</li> <li>\ud83d\udca1 Criatividade: Diferentes perspectivas trazem solu\u00e7\u00f5es inovadoras</li> <li>\ud83d\ude80 Velocidade: Menos bugs, menos retrabalho</li> </ul> <p>Este processo transforma a programa\u00e7\u00e3o de uma atividade solit\u00e1ria em uma experi\u00eancia colaborativa e de alto aprendizado! \ud83e\udd1d\u2728</p>"},{"location":"Elaboracao/","title":"Elabora\u00e7\u00e3o","text":"<p>Objetivo: Refinar os requisitos, resolver os riscos cr\u00edticos e definir a arquitetura base.</p>"},{"location":"Elaboracao/#principais-atividades","title":"Principais atividades:","text":"<p>Detalhar os requisitos mais importantes.</p> <p>Desenvolver uma arquitetura de software robusta.</p> <p>Criar prot\u00f3tipos ou provas de conceito.</p> <p>Planejar as pr\u00f3ximas fases com mais precis\u00e3o.</p> <p>Produto principal: Arquitetura validada e plano de desenvolvimento para a fase de constru\u00e7\u00e3o.</p>"},{"location":"Elaboracao/das/","title":"Documento de Arquitetura de Software (DAS)","text":""},{"location":"Elaboracao/das/#nome-do-projeto","title":"\"Nome do Projeto\"","text":""},{"location":"Elaboracao/das/#introducao","title":"Introdu\u00e7\u00e3o","text":""},{"location":"Elaboracao/das/#proposta","title":"Proposta","text":"<p> Este documento apresenta uma vis\u00e3o geral da arquitetura do sistema, utilizando diferentes vis\u00f5es arquiteturais para destacar diferentes aspectos do sistema. \u00c9 utilizado para capturar as decis\u00f5es arquiteturais significativas que fizeram parte do sistema. </p>"},{"location":"Elaboracao/das/#escopo","title":"Escopo","text":"<p> A aplica\u00e7\u00e3o \"XXXX\" tem o objetivo fornecer... </p>"},{"location":"Elaboracao/das/#definicoes-acronimos-e-abreviacoes","title":"Defini\u00e7\u00f5es, Acr\u00f4nimos e Abrevia\u00e7\u00f5es","text":"<ul> <li>MVC -</li> <li>MVT -</li> <li>SIGLA PARA O APP - Nome do Aplicativo</li> </ul>"},{"location":"Elaboracao/das/#visao-geral","title":"Vis\u00e3o Geral","text":"<p> O Documento de Arquitetura de Software (DAS) trata-se de uma vis\u00e3o geral de toda a arquitetura do sistema, observando diferentes aspectos do mesmo. Neste documento ser\u00e3o abordadas as seguintes vis\u00f5es da aplica\u00e7\u00e3o TCM: </p> <ul> <li>Caso de Uso;</li> <li>L\u00f3gica;</li> <li>Implanta\u00e7\u00e3o;</li> <li>Implementa\u00e7\u00e3o;</li> <li>Dados;</li> </ul>"},{"location":"Elaboracao/das/#representacao-arquitetural","title":"Representa\u00e7\u00e3o Arquitetural","text":""},{"location":"Elaboracao/das/#cliente-servidor","title":"Cliente-Servidor","text":"<p> Cliente-Servidor \u00e9 um modelo de arquitetura... </p> <p>Cliente (Frontend):</p> <ul> <li>View: Consiste.....</li> </ul> <p>Servidor (Backend):</p> <ul> <li>Controller: faz a conex\u00e3o entre as camadas...</li> <li>Service: Respons\u00e1vel pela l\u00f3gica...</li> <li>Model: Respons\u00e1vel pela persist\u00eancia...</li> </ul>"},{"location":"Elaboracao/das/#objetivos-de-arquitetura-e-restricoes","title":"Objetivos de Arquitetura e Restri\u00e7\u00f5es","text":""},{"location":"Elaboracao/das/#objetivos","title":"Objetivos","text":"<p> Seguran\u00e7a:    - Persist\u00eancia:    -  Privacidade:    - Middlewares: Foi usado middlewares... Desempenho:    Requisi\u00e7\u00f5es... Reusabilidade:    Componentes no Frontend... </p>"},{"location":"Elaboracao/das/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p> Tamanho da tela:...  Portabilidade:...  | IE | Edge  | Firefox | Chrome | Safari | Googlebot | | -- | ----- | ------- | ------ | ------ | --------- | | 11 | &gt;= 14 | &gt;= 52   | &gt;= 49  | &gt;= 10  | Sim       |  Servi\u00e7os: Os servi\u00e7os oferecidos....  Acesso a internet: A aplica\u00e7\u00e3o est\u00e1 limitada apenas a conex\u00e3o com internet  </p>"},{"location":"Elaboracao/das/#ferramentas-utilizadas","title":"Ferramentas Utilizadas","text":"<ul> <li>XXX: Ambiente de execu\u00e7\u00e3o...</li> <li>XXXX: Linguagem de programa\u00e7\u00e3o...   Typescript: XXXX</li> <li>XXXX: XXXX</li> <li>XXX: XXXX</li> <li>XXXX: XXXX</li> <li>XXXX: XXXX</li> <li>XXXX: XXXX</li> <li>XXXXX: XXXX.</li> </ul>"},{"location":"Elaboracao/das/#visao-de-caso-de-uso","title":"Vis\u00e3o de Caso de Uso","text":"<p> O primeiro caso de uso descreve a a\u00e7\u00e3o... </p> <p></p> <p></p>"},{"location":"Elaboracao/das/#visao-logica","title":"Vis\u00e3o L\u00f3gica","text":""},{"location":"Elaboracao/das/#visao-de-implantacao","title":"Vis\u00e3o de Implanta\u00e7\u00e3o","text":""},{"location":"Elaboracao/das/#visao-de-implementacao","title":"Vis\u00e3o de Implementa\u00e7\u00e3o","text":""},{"location":"Elaboracao/das/#visao-geral_1","title":"Vis\u00e3o Geral","text":""},{"location":"Elaboracao/das/#visao-de-dados","title":"Vis\u00e3o de Dados","text":""},{"location":"Elaboracao/das/#modelo-entidade-relacionamento-mer","title":"Modelo Entidade Relacionamento (MER)","text":""},{"location":"Elaboracao/das/#entidades-e-relacionamentos","title":"Entidades e Relacionamentos:","text":""},{"location":"Elaboracao/das/#diagrama-entidade-relacionamento-der","title":"Diagrama Entidade Relacionamento (DER)","text":""},{"location":"Elaboracao/das/#tamanho-e-desempenho","title":"Tamanho e Desempenho","text":""},{"location":"Elaboracao/das/#qualidade","title":"Qualidade","text":""},{"location":"Elaboracao/das/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":""},{"location":"Elaboracao/das/#historico-de-versao","title":"Hist\u00f3rico de Vers\u00e3o","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 08/11/2020 1.0 Criada estrutura b\u00e1sica do documento xxx xxx, xxx xx, xxx xx, xxx xxx e xxx xxxx 15/11/2020 1.1 Representa\u00e7\u00e3o arquitetural e objetivos e restri\u00e7\u00f5es arquiteturais. Autores 19/11/2020 1.2 Adi\u00e7\u00e3o dos diagramas, vis\u00f5es, tamanho e desempenho e qualidade Autores 20/11/2020 1.3 Adi\u00e7\u00e3o da descri\u00e7\u00e3o de MER e DER Autores 20/11/2020 1.4 Adi\u00e7\u00e3o do t\u00f3pico de qualidade Autores 20/11/2020 1.5 Revis\u00e3o Autores"},{"location":"Elaboracao/diagrama_casos_de_uso/","title":"Diagrama de Casos de Uso","text":""},{"location":"Elaboracao/diagrama_casos_de_uso/#casos-de-uso","title":"Casos de Uso","text":""},{"location":"Elaboracao/diagrama_casos_de_uso/#descricao","title":"Descri\u00e7\u00e3o:","text":"<ul> <li> <p>Contas</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Entrada</li> <li>Altera\u00e7\u00e3o</li> <li>Recuperar Senha</li> <li>Exclus\u00e3o L\u00f3gica</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Perfis</p> <ul> <li>Edi\u00e7\u00e3o</li> <li>Pesquisar</li> <li>Visualiza\u00e7\u00e3o</li> <li>Seguir/Deixar de Seguir</li> </ul> </li> <li> <p>Postagens (P\u00fablico)       </p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Intera\u00e7\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Mensagens (Privado)</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Galerias</p> <ul> <li>Albuns</li> </ul> </li> <li>Blogs</li> <li>Grupos</li> </ul>"},{"location":"Elaboracao/diagrama_casos_de_uso/#criacao-de-uma-conta-no-sistema","title":"Cria\u00e7\u00e3o de uma conta no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:</p> <ul> <li>Nenhuma</li> </ul> </li> <li> <p>Fluxo B\u00e1sico:</p> <ol> <li>Usu\u00e1rio fornece e-mail, senha e confirma\u00e7\u00f5es</li> <li>Dados do Usu\u00e1rio s\u00e3o validados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o encriptados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o persistidos pelo Sistema</li> <li>Sistema gera um link com prazo de expira\u00e7\u00e3o</li> <li>Sistema envia e-mail de verifica\u00e7\u00e3o, com o link, para o Usu\u00e1rio</li> <li>Usu\u00e1rio confirma o e-mail antes do link expirar</li> <li>Sistema confirma que o Cadastro do Usu\u00e1rio foi realizado com sucesso</li> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de Entrada</li> </ol> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. E-mail do Usu\u00e1rio \u00e9 inv\u00e1lido     2a1. Sistema exibe mensagem de erro</li> <li>2b. Senha do Usu\u00e1rio n\u00e3o respeita regras de seguran\u00e7a<ul> <li>2b1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Usu\u00e1rio tenta confirmar o e-mail depois de o link expirar<ul> <li>3a1. Sistema sugere que o Usu\u00e1rio realize um novo Cadastro</li> </ul> </li> </ul> </li> </ul>"},{"location":"Elaboracao/diagrama_casos_de_uso/#entrada-do-usuario-no-sistema","title":"Entrada do usu\u00e1rio no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:     Usu\u00e1rio deve estar cadastrado</p> </li> <li> <p>Fluxo B\u00e1sico:</p> <ul> <li> <ol> <li>Usu\u00e1rio fornece e-mail e senha</li> </ol> </li> <li> <ol> <li>Sistema autentica o Usu\u00e1rio</li> </ol> </li> <li> <ol> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina inicial</li> </ol> </li> </ul> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. Dados do Usu\u00e1rio Inv\u00e1lidos<ul> <li>2a1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Primeio acesso do Usu\u00e1rio<ul> <li>3a1. Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de edi\u00e7\u00e3o de perfil</li> </ul> </li> </ul> </li> </ul>"},{"location":"Elaboracao/diagrama_de_classes/","title":"Template de Descri\u00e7\u00e3o de Classe","text":""},{"location":"Elaboracao/diagrama_de_classes/#nome-da-classe","title":"Nome da Classe","text":"<ul> <li> <p>Descri\u00e7\u00e3o:</p> <ul> <li>Breve descri\u00e7\u00e3o do prop\u00f3sito da classe e seu papel no sistema.</li> </ul> </li> <li> <p>Atributos:</p> <ul> <li>atributo1: tipo \u2014 descri\u00e7\u00e3o</li> <li>atributo2: tipo \u2014 descri\u00e7\u00e3o</li> <li>...</li> </ul> </li> <li> <p>M\u00e9todos:</p> <ul> <li>metodo1(par\u00e2metros): tipo de retorno \u2014 descri\u00e7\u00e3o</li> <li>metodo2(par\u00e2metros): tipo de retorno \u2014 descri\u00e7\u00e3o</li> <li>...</li> </ul> </li> <li> <p>Relacionamentos:</p> <ul> <li>Associa\u00e7\u00e3o, agrega\u00e7\u00e3o, composi\u00e7\u00e3o ou heran\u00e7a com outras classes (listar e descrever).</li> </ul> </li> <li> <p>Regras de Neg\u00f3cio Relacionadas:</p> <ul> <li>Listar regras de neg\u00f3cio do documento de casos de uso que impactam esta classe.</li> </ul> </li> <li> <p>Casos de Uso Relacionados:</p> <ul> <li>Listar os casos de uso do documento que envolvem esta classe.</li> </ul> </li> <li> <p>Observa\u00e7\u00f5es:</p> <ul> <li>Pontos importantes, restri\u00e7\u00f5es ou detalhes adicionais.</li> </ul> </li> </ul> <p>Adicionar o diagrama de classes.</p> <pre>bc722a38c1361ddc4c2e8042dbb2c0ee3f0b18fd09127fb5af1c00f13826331e3ed523af1c7df56326ce9e0d10ca58128c235ec78da6a7f65ad07e1e3a96102d</pre><pre>ba2153396f708e55383d2e7b55a18947479d4162f472f7566110cad9fdf1194b6d6a325137e2d5d9d42aeefb3a5adf9159fe5fe58f050d01b5f4596d2a3bbe0e</pre>"},{"location":"Elaboracao/diagrama_de_sequencia/","title":"Diagrama de Casos de Uso","text":""},{"location":"Elaboracao/diagrama_de_sequencia/#casos-de-uso","title":"Casos de Uso","text":""},{"location":"Elaboracao/diagrama_de_sequencia/#descricao","title":"Descri\u00e7\u00e3o:","text":"<ul> <li> <p>Contas</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Entrada</li> <li>Altera\u00e7\u00e3o</li> <li>Recuperar Senha</li> <li>Exclus\u00e3o L\u00f3gica</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Perfis</p> <ul> <li>Edi\u00e7\u00e3o</li> <li>Pesquisar</li> <li>Visualiza\u00e7\u00e3o</li> <li>Seguir/Deixar de Seguir</li> </ul> </li> <li> <p>Postagens (P\u00fablico)       </p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Intera\u00e7\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Mensagens (Privado)</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Galerias</p> <ul> <li>Albuns</li> </ul> </li> <li>Blogs</li> <li>Grupos</li> </ul>"},{"location":"Elaboracao/diagrama_de_sequencia/#criacao-de-uma-conta-no-sistema","title":"Cria\u00e7\u00e3o de uma conta no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:</p> <ul> <li>Nenhuma</li> </ul> </li> <li> <p>Fluxo B\u00e1sico:</p> <ol> <li>Usu\u00e1rio fornece e-mail, senha e confirma\u00e7\u00f5es</li> <li>Dados do Usu\u00e1rio s\u00e3o validados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o encriptados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o persistidos pelo Sistema</li> <li>Sistema gera um link com prazo de expira\u00e7\u00e3o</li> <li>Sistema envia e-mail de verifica\u00e7\u00e3o, com o link, para o Usu\u00e1rio</li> <li>Usu\u00e1rio confirma o e-mail antes do link expirar</li> <li>Sistema confirma que o Cadastro do Usu\u00e1rio foi realizado com sucesso</li> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de Entrada</li> </ol> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. E-mail do Usu\u00e1rio \u00e9 inv\u00e1lido     2a1. Sistema exibe mensagem de erro</li> <li>2b. Senha do Usu\u00e1rio n\u00e3o respeita regras de seguran\u00e7a<ul> <li>2b1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Usu\u00e1rio tenta confirmar o e-mail depois de o link expirar<ul> <li>3a1. Sistema sugere que o Usu\u00e1rio realize um novo Cadastro</li> </ul> </li> </ul> </li> </ul>"},{"location":"Elaboracao/diagrama_de_sequencia/#entrada-do-usuario-no-sistema","title":"Entrada do usu\u00e1rio no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:     Usu\u00e1rio deve estar cadastrado</p> </li> <li> <p>Fluxo B\u00e1sico:</p> <ul> <li> <ol> <li>Usu\u00e1rio fornece e-mail e senha</li> </ol> </li> <li> <ol> <li>Sistema autentica o Usu\u00e1rio</li> </ol> </li> <li> <ol> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina inicial</li> </ol> </li> </ul> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. Dados do Usu\u00e1rio Inv\u00e1lidos<ul> <li>2a1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Primeio acesso do Usu\u00e1rio<ul> <li>3a1. Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de edi\u00e7\u00e3o de perfil</li> </ul> </li> </ul> </li> </ul>"},{"location":"Elaboracao/espreq/","title":"Especifica\u00e7\u00e3o de Requisitos","text":""},{"location":"Elaboracao/espreq/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>Descreve o objetivo do documento, escopo do sistema e defini\u00e7\u00f5es importantes.</p>"},{"location":"Elaboracao/espreq/#2-visao-geral-do-sistema","title":"2. Vis\u00e3o Geral do Sistema","text":"<p>Apresenta uma vis\u00e3o geral do sistema, contexto, principais funcionalidades e restri\u00e7\u00f5es.</p>"},{"location":"Elaboracao/espreq/#3-requisitos-funcionais","title":"3. Requisitos Funcionais","text":"<p>Lista e detalha os requisitos funcionais, agrupados por m\u00f3dulos ou funcionalidades.</p>"},{"location":"Elaboracao/espreq/#exemplo","title":"Exemplo","text":""},{"location":"Elaboracao/espreq/#rf01-cadastro-de-usuario","title":"RF01 - Cadastro de Usu\u00e1rio","text":"<p>O sistema deve permitir que novos usu\u00e1rios realizem seu cadastro informando nome, e-mail, senha e perfil de acesso. Ap\u00f3s o cadastro, o usu\u00e1rio receber\u00e1 um e-mail de confirma\u00e7\u00e3o para ativar sua conta.</p>"},{"location":"Elaboracao/espreq/#4-requisitos-nao-funcionais","title":"4. Requisitos N\u00e3o Funcionais","text":"<p>Especifica requisitos de desempenho, seguran\u00e7a, usabilidade, confiabilidade, entre outros.</p>"},{"location":"Elaboracao/espreq/#exemplo_1","title":"Exemplo","text":""},{"location":"Elaboracao/espreq/#rnf01-seguranca","title":"RNF01 - Seguran\u00e7a","text":"<p>O sistema deve criptografar todas as senhas dos usu\u00e1rios utilizando algoritmo de hash seguro (ex: bcrypt) antes de armazen\u00e1-las no banco de dados.</p>"},{"location":"Elaboracao/espreq/#5-regras-de-negocio","title":"5. Regras de Neg\u00f3cio","text":"<p>Define regras e pol\u00edticas que o sistema deve seguir.</p> <p>Regra de neg\u00f3cio \u00e9 uma diretriz ou pol\u00edtica que define como os processos e opera\u00e7\u00f5es devem ocorrer dentro de uma organiza\u00e7\u00e3o ou sistema. Ela estabelece restri\u00e7\u00f5es, condi\u00e7\u00f5es e procedimentos que garantem o correto funcionamento do sistema conforme os objetivos e necessidades do neg\u00f3cio, orientando tomadas de decis\u00e3o e valida\u00e7\u00f5es durante o desenvolvimento e uso do software.</p>"},{"location":"Elaboracao/espreq/#exemplo_2","title":"Exemplo","text":""},{"location":"Elaboracao/espreq/#rn01-validacao-de-dados-de-cadastro","title":"RN01 - Valida\u00e7\u00e3o de Dados de Cadastro","text":"<p>O sistema deve garantir que o e-mail informado pelo usu\u00e1rio seja \u00fanico e v\u00e1lido, impedindo o cadastro de contas duplicadas ou com e-mails inv\u00e1lidos.</p>"},{"location":"Elaboracao/espreq/#rn02-recuperacao-de-senha","title":"RN02 - Recupera\u00e7\u00e3o de Senha","text":"<p>O sistema deve permitir que o usu\u00e1rio solicite a recupera\u00e7\u00e3o de senha por meio do e-mail cadastrado, enviando um link seguro para redefini\u00e7\u00e3o da senha.</p>"},{"location":"Elaboracao/espreq/#rn02-perfil-de-acesso","title":"RN02 - Perfil de Acesso","text":"<p>Usu\u00e1rios cadastrados devem ser atribu\u00eddos a perfis de acesso (administrador, usu\u00e1rio comum) conforme regras definidas pela organiza\u00e7\u00e3o, limitando funcionalidades dispon\u00edveis conforme o perfil.</p>"},{"location":"Elaboracao/espreq/#6-interfaces-externas","title":"6. Interfaces Externas","text":"<p>Descreve integra\u00e7\u00f5es com outros sistemas, APIs, hardware ou bancos de dados.</p>"},{"location":"Elaboracao/espreq/#7-restricoes","title":"7. Restri\u00e7\u00f5es","text":"<p>Lista limita\u00e7\u00f5es t\u00e9cnicas, legais ou de neg\u00f3cio.</p>"},{"location":"Elaboracao/espreq/#8-criterios-de-aceitacao","title":"8. Crit\u00e9rios de Aceita\u00e7\u00e3o","text":"<p>Define condi\u00e7\u00f5es para valida\u00e7\u00e3o dos requisitos e aceita\u00e7\u00e3o do sistema.</p>"},{"location":"Elaboracao/espreq/#9-glossario","title":"9. Gloss\u00e1rio","text":"<p>Explica termos t\u00e9cnicos ou espec\u00edficos do dom\u00ednio.</p>"},{"location":"Elaboracao/espreq/#10-referencias","title":"10. Refer\u00eancias","text":"<p>Relaciona documentos, normas e materiais utilizados.</p>"},{"location":"Elaboracao/prototipo_baixa_fidelidade/","title":"Diagrama de Casos de Uso","text":""},{"location":"Elaboracao/prototipo_baixa_fidelidade/#casos-de-uso","title":"Casos de Uso","text":""},{"location":"Elaboracao/prototipo_baixa_fidelidade/#descricao","title":"Descri\u00e7\u00e3o:","text":"<ul> <li> <p>Contas</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Entrada</li> <li>Altera\u00e7\u00e3o</li> <li>Recuperar Senha</li> <li>Exclus\u00e3o L\u00f3gica</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Perfis</p> <ul> <li>Edi\u00e7\u00e3o</li> <li>Pesquisar</li> <li>Visualiza\u00e7\u00e3o</li> <li>Seguir/Deixar de Seguir</li> </ul> </li> <li> <p>Postagens (P\u00fablico)       </p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Intera\u00e7\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Mensagens (Privado)</p> <ul> <li>Cria\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> <li>Visualiza\u00e7\u00e3o</li> </ul> </li> <li> <p>Galerias</p> <ul> <li>Albuns</li> </ul> </li> <li>Blogs</li> <li>Grupos</li> </ul>"},{"location":"Elaboracao/prototipo_baixa_fidelidade/#criacao-de-uma-conta-no-sistema","title":"Cria\u00e7\u00e3o de uma conta no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:</p> <ul> <li>Nenhuma</li> </ul> </li> <li> <p>Fluxo B\u00e1sico:</p> <ol> <li>Usu\u00e1rio fornece e-mail, senha e confirma\u00e7\u00f5es</li> <li>Dados do Usu\u00e1rio s\u00e3o validados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o encriptados pelo Sistema</li> <li>Dados do Usu\u00e1rio s\u00e3o persistidos pelo Sistema</li> <li>Sistema gera um link com prazo de expira\u00e7\u00e3o</li> <li>Sistema envia e-mail de verifica\u00e7\u00e3o, com o link, para o Usu\u00e1rio</li> <li>Usu\u00e1rio confirma o e-mail antes do link expirar</li> <li>Sistema confirma que o Cadastro do Usu\u00e1rio foi realizado com sucesso</li> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de Entrada</li> </ol> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. E-mail do Usu\u00e1rio \u00e9 inv\u00e1lido     2a1. Sistema exibe mensagem de erro</li> <li>2b. Senha do Usu\u00e1rio n\u00e3o respeita regras de seguran\u00e7a<ul> <li>2b1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Usu\u00e1rio tenta confirmar o e-mail depois de o link expirar<ul> <li>3a1. Sistema sugere que o Usu\u00e1rio realize um novo Cadastro</li> </ul> </li> </ul> </li> </ul>"},{"location":"Elaboracao/prototipo_baixa_fidelidade/#entrada-do-usuario-no-sistema","title":"Entrada do usu\u00e1rio no sistema","text":"<ul> <li> <p>Atores:</p> <ul> <li>Usu\u00e1rio</li> <li>Sistema</li> </ul> </li> <li> <p>Pr\u00e9-Condi\u00e7\u00f5es:     Usu\u00e1rio deve estar cadastrado</p> </li> <li> <p>Fluxo B\u00e1sico:</p> <ul> <li> <ol> <li>Usu\u00e1rio fornece e-mail e senha</li> </ol> </li> <li> <ol> <li>Sistema autentica o Usu\u00e1rio</li> </ol> </li> <li> <ol> <li>Sistema redireciona o Usu\u00e1rio para a p\u00e1gina inicial</li> </ol> </li> </ul> </li> <li> <p>Fluxos Alternativos:</p> <ul> <li>2a. Dados do Usu\u00e1rio Inv\u00e1lidos<ul> <li>2a1. Sistema exibe mensagem de erro</li> </ul> </li> <li>3a. Primeio acesso do Usu\u00e1rio<ul> <li>3a1. Sistema redireciona o Usu\u00e1rio para a p\u00e1gina de edi\u00e7\u00e3o de perfil</li> </ul> </li> </ul> </li> </ul>"},{"location":"Iniciacao/","title":"Inicia\u00e7\u00e3o","text":"<p>Objetivo: Definir o escopo inicial do projeto e alinhar os objetivos principais.</p>"},{"location":"Iniciacao/#principais-atividades","title":"Principais atividades","text":"<ul> <li> <p>Identificar os principais requisitos (funcionais e n\u00e3o funcionais).</p> </li> <li> <p>Estimar custos e prazos iniciais.</p> </li> <li> <p>Avaliar riscos de alto n\u00edvel.</p> </li> <li> <p>Criar um caso de neg\u00f3cio (business case).</p> </li> <li> <p>Produto principal: Vis\u00e3o do projeto e caso de neg\u00f3cio aprovado.</p> </li> </ul>"},{"location":"Iniciacao/5w2h/","title":"5W2H","text":""},{"location":"Iniciacao/5w2h/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>     O 5W2H \u00e9 uma ferramenta administrativa  que pode ser utilizada para diferentes contextos dentro de uma organiza\u00e7\u00e3o, como na organiza\u00e7\u00e3o para planejamento estrat\u00e9gico e guia na execu\u00e7\u00e3o de a\u00e7\u00f5es. O 5W2H baseia-se em 7 perguntas (What?, Why?, Where?, Who?, When?, How? e How much?), com o intuito de esclarecer e organizar ideias. A ferramenta ser\u00e1 utilizada como um guia de a\u00e7\u00f5es, tornando os objetivos mais evidentes para a equipe, auxiliando na compreens\u00e3o, organiza\u00e7\u00e3o e tomadas de decis\u00f5es no projeto. </p>"},{"location":"Iniciacao/5w2h/#metodologia","title":"Metodologia","text":"<p>     A equipe se reuniu para esclarecimento sobre o tema do projeto, a partir dos pontos debatidos foi poss\u00edvel responder \u00e0s quest\u00f5es do 5W2H.   </p>"},{"location":"Iniciacao/5w2h/#questoes-5w2h","title":"Quest\u00f5es 5W2H","text":""},{"location":"Iniciacao/5w2h/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/5w2h/#visao-geral","title":"Vis\u00e3o geral","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Aplicativo Web App para.... Why? (Por que isso ser\u00e1 feito?) Para auxiliar... Where? (Onde ser\u00e1 feito?) O trabalho ser\u00e1 realizado.... When? (Quando ser\u00e1 feito?) Durante o semestre de XXXX Who? (Quem ir\u00e1 fazer?) A equipe \u00e9 formada pelos alunos... How? (Como ser\u00e1 feito?) Utilizando metodologia RUP/UP e ferramentas como... How much? (Quanto custar\u00e1?) O custo do projeto ser\u00e1 o tempo e esfor\u00e7o para o desenvolvimento da aplica\u00e7\u00e3o"},{"location":"Iniciacao/5w2h/#versao-20","title":"Vers\u00e3o 2.0","text":""},{"location":"Iniciacao/5w2h/#visao-produto","title":"Vis\u00e3o produto","text":"Quest\u00e3o Resposta What?(O que deve ser\u00e1 feito?) Ger\u00eancia de XXXX Why? (Por que isso ser\u00e1 feito?) Para auxiliar na... Where? (Onde ser\u00e1 feito?) No...) When? (Quando ser\u00e1 feito?) A ger\u00eancia ser\u00e1.... Who? (Quem ir\u00e1 fazer?) Pessoa(s).... How? (Como ser\u00e1 feito?) Utilizando o nome do aplicativo... How much? (Quanto custar\u00e1?) Tempo...."},{"location":"Iniciacao/5w2h/#conclusao","title":"Conclus\u00e3o","text":"<p>O 5W2H \u00e9 um t\u00e9cnica bem simples e de f\u00e1cil entendimento, sem a necessidade de um especialista. Dentro da disciplina a t\u00e9cnica fornece um entendimento melhor, para a equipe, sobre o projeto como responsabilidades, motiva\u00e7\u00e3o e organiza\u00e7\u00e3o de a\u00e7\u00f5es.   </p>"},{"location":"Iniciacao/5w2h/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>5W2H: disponivel em :https://www../</p> <p>O que \u00e9 5W2H, disponivel em :https://www...</p>"},{"location":"Iniciacao/5w2h/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 24/08/20 1.0 Cria\u00e7\u00e3o do documento xxx xxxx 09/09/20 2.0 Adicionada vis\u00e3o produto xxxx xxxx"},{"location":"Iniciacao/Brainstorm/","title":"Brainstorm","text":""},{"location":"Iniciacao/Brainstorm/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O brainstorm \u00e9 uma t\u00e9cnica de elicita\u00e7\u00e3o de requisitos que consiste em reunir a equipe e discutir sobre diversos t\u00f3picos gerais do projeto apresentados no documento problema de neg\u00f3cio. No brainstorm o di\u00e1logo \u00e9 incentivado e cr\u00edticas s\u00e3o evitadas para permitir que todos colaborem com suas pr\u00f3prias ideias. </p>"},{"location":"Iniciacao/Brainstorm/#metodologia","title":"Metodologia","text":"<p> A equipe se reuniu para debater ideias gerais sobre o projeto via..., come\u00e7ou .... e terminou..., onde o XXXX XXXX foi o moderador, direcionando a equipe com quest\u00f5es pr\u00e9-elaboradas, e transcrevendo as respostas para o documento. </p>"},{"location":"Iniciacao/Brainstorm/#brainstorm","title":"Brainstorm","text":""},{"location":"Iniciacao/Brainstorm/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/Brainstorm/#perguntas","title":"Perguntas","text":""},{"location":"Iniciacao/Brainstorm/#1-qual-o-objetivo-principal-da-aplicacao","title":"1. Qual o objetivo principal da aplica\u00e7\u00e3o?","text":"<p> XXXX - Deve ser uma plataforma onde qualquer pessoa possa... </p> <p>ZZZ - A plataforma deve fornece...</p> <p>YYYY - O objetivo da aplica\u00e7\u00e3o \u00e9....</p> <p>WWWW - O principal objetivo da aplica\u00e7\u00e3o \u00e9 a...</p> <p>KKKK - A plataforma deve gerenciar... </p>"},{"location":"Iniciacao/Brainstorm/#2-como-sera-o-processo-para-cadastrar-um-novo-cliente","title":"2. Como ser\u00e1 o processo para cadastrar um novo cliente?","text":"<p> XXXX - O moderador dever\u00e1 fazer login e...  YYYY - O cliente...  WWWW - Com o usu\u00e1rio logado, ele dever\u00e1...  ZZZZ - O cliente...  KKK - O cliente...  ---  ### 3. Como ser\u00e1 a forma de adicionar produtos?  <p> XXXX - O cliente ao cadastrar... </p> <p> YYYYY - O produto tem... </p> ZZZZ - O produto....  XXXX - O produto....   ---  ### 4. Outras perguntas pertinentes ao contexto  <p> XXXX - Com a localiza\u00e7\u00e3o...  YYYY - O cliente...  ZZZ - O cliente...  ---  ### 5. \"Outras perguntas pertinentes ao contexto\", Como seria a forma de adicionar do cliente adicionar os produtos ? <p> XXX - O cliente.... </p>  ### 6. Quais informa\u00e7\u00f5es seriam interessante para o cliente? <p> XXX - Informa\u00e7\u00f5es...     ZZZZ - O cliente usu\u00e1rio poder\u00e1 acessar informa\u00e7\u00f5es...     WWWWs - O usu\u00e1rio poder\u00e1 ver scouts de partidas do torneio, ver as regras dos torneios, locais e data das partidas.  </p>  ### Requisitos elicitados  |ID|Descri\u00e7\u00e3o| |----|-------------| |BS01| O cliente...| |BS02| O cliente...| |BS03| O cliente...| |BS04| O cliente...| |BS05| O cliente...| |BS06| O cliente...| |BS07| O cliente...| |BS08| O cliente...| |BS09| O cliente...| |BS10| O produto...| |BS11| O produto...| |BS12| O produto...| |BS13| O produto...| |BS14| O produto...| |BS15| O produto...|  ## Conclus\u00e3o <p> Atrav\u00e9s da aplica\u00e7\u00e3o da t\u00e9cnica, foi poss\u00edvel elicitar alguns dos primeiros requisitos do projeto. </p> ## Refer\u00eancias Bibliogr\u00e1ficas  &gt; BARBOSA, S. D. J; DA SILVA, B. S. Intera\u00e7\u00e3o humano-computador. Elsevier, 2010.   ## Autor(es) | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | DD/MM/YYYY | 1.0 | Cria\u00e7\u00e3o do documento | XXX XXXX, XXXX XXXX, YYY YYYY e ZZZ XXXX |"},{"location":"Iniciacao/cenario/","title":"Gest\u00e3o de Candidaturas a Vagas e Ciclo de Vida do Monitor.","text":"<p>Este cen\u00e1rio foca em resolver os desafios mais imediatos e manuais do processo de contrata\u00e7\u00e3o, centralizando a divulga\u00e7\u00e3o de vagas e a recep\u00e7\u00e3o de candidaturas.</p> <ul> <li> <p>Funcionalidades:</p> <ul> <li> <p>Portal de Vagas: Interface para que professores publiquem as vagas de monitoria, especificando a disciplina, os pr\u00e9-requisitos, as responsabilidades e o n\u00famero de vagas.</p> </li> <li> <p>Cadastro de Candidatos: Permite que os alunos interessados criem um perfil, anexem documentos relevantes (hist\u00f3rico escolar, curr\u00edculo, carta de motiva\u00e7\u00e3o) e se candidatem \u00e0s vagas dispon\u00edveis.</p> </li> <li> <p>Sele\u00e7\u00e3o e Comunica\u00e7\u00e3o: Ferramentas para que os professores avaliem os candidatos, registrem suas avalia\u00e7\u00f5es e comuniquem o resultado (aprova\u00e7\u00e3o, lista de espera, reprova\u00e7\u00e3o) de forma padronizada.</p> </li> <li> <p>Gera\u00e7\u00e3o de Relat\u00f3rios B\u00e1sicos: Emiss\u00e3o de listas de candidatos por vaga, monitores selecionados por disciplina e departamento.</p> </li> <li> <p>Registro de Frequ\u00eancia e Horas: Ferramenta para que o monitor registre suas horas trabalhadas e o professor supervisor as valide. Pode incluir a op\u00e7\u00e3o de registro por aplicativo m\u00f3vel.</p> </li> <li> <p>Dashboard de Gest\u00e3o: Painel de controle para o departamento com vis\u00e3o geral do n\u00famero de monitores por curso, horas trabalhadas, status dos pagamentos e avalia\u00e7\u00f5es pendentes.</p> </li> </ul> </li> </ul>"},{"location":"Iniciacao/designthinking/","title":"Design Thinking","text":""},{"location":"Iniciacao/designthinking/#design-thinking","title":"Design Thinking","text":""},{"location":"Iniciacao/designthinking/#1-capa","title":"1. Capa","text":"<ul> <li>T\u00edtulo do Projeto</li> <li>Nome da Equipe</li> <li>Data</li> <li>Logo da Empresa/Organiza\u00e7\u00e3o (se aplic\u00e1vel)</li> </ul>"},{"location":"Iniciacao/designthinking/#2-introducao","title":"2. Introdu\u00e7\u00e3o","text":"<ul> <li>Contexto do Projeto: Breve descri\u00e7\u00e3o do problema ou oportunidade.</li> <li>Objetivo: O que se espera alcan\u00e7ar com o projeto.</li> <li>P\u00fablico-Alvo: Quem ser\u00e1 impactado pela solu\u00e7\u00e3o.</li> <li>Escopo: Limites e abrang\u00eancia do projeto.</li> </ul>"},{"location":"Iniciacao/designthinking/#3-fases-do-design-thinking","title":"3. Fases do Design Thinking","text":""},{"location":"Iniciacao/designthinking/#31-empatia","title":"3.1. Empatia","text":"<ul> <li>Pesquisa: M\u00e9todos utilizados para entender o usu\u00e1rio (entrevistas, observa\u00e7\u00e3o, etc.).</li> <li>Insights: Principais descobertas sobre as necessidades, desejos e dores do usu\u00e1rio.</li> <li>Personas: Descri\u00e7\u00e3o dos perfis de usu\u00e1rios criados com base na pesquisa.</li> </ul>"},{"location":"Iniciacao/designthinking/#32-definicao","title":"3.2. Defini\u00e7\u00e3o","text":"<ul> <li>Problema Central: Defini\u00e7\u00e3o clara do problema a ser resolvido (ex.: \"Como podemos...?\").</li> <li>Pontos de Vista (POV): Frases que sintetizam as necessidades do usu\u00e1rio e os insights.</li> </ul>"},{"location":"Iniciacao/designthinking/#33-ideacao","title":"3.3. Idea\u00e7\u00e3o","text":"<ul> <li>Brainstorming: Lista de ideias geradas pela equipe.</li> <li>Sele\u00e7\u00e3o de Ideias: Crit\u00e9rios utilizados para escolher as melhores ideias.</li> <li>Ideias Selecionadas: Descri\u00e7\u00e3o das ideias que ser\u00e3o prototipadas.</li> </ul>"},{"location":"Iniciacao/designthinking/#34-prototipagem","title":"3.4. Prototipagem","text":"<ul> <li>Descri\u00e7\u00e3o do Prot\u00f3tipo: Como a ideia foi transformada em um prot\u00f3tipo (esbo\u00e7o, modelo f\u00edsico, digital, etc.).</li> <li>Materiais Utilizados: Recursos necess\u00e1rios para criar o prot\u00f3tipo.</li> <li>Testes Realizados: Como o prot\u00f3tipo foi testado.</li> </ul>"},{"location":"Iniciacao/designthinking/#35-teste","title":"3.5. Teste","text":"<ul> <li>Feedback dos Usu\u00e1rios: O que os usu\u00e1rios acharam do prot\u00f3tipo.</li> <li>Ajustes Realizados: Mudan\u00e7as feitas com base no feedback.</li> <li>Resultados Finais: Descri\u00e7\u00e3o da solu\u00e7\u00e3o final.</li> </ul>"},{"location":"Iniciacao/designthinking/#4-conclusao","title":"4. Conclus\u00e3o","text":"<ul> <li>Resultados Obtidos: O que foi alcan\u00e7ado com o projeto.</li> <li>Pr\u00f3ximos Passos: O que ainda precisa ser feito ou implementado.</li> <li>Aprendizados: Li\u00e7\u00f5es aprendidas durante o processo.</li> </ul>"},{"location":"Iniciacao/designthinking/#5-anexos","title":"5. Anexos","text":"<ul> <li>Fotos, gr\u00e1ficos, tabelas, transcri\u00e7\u00f5es de entrevistas, etc.</li> </ul>"},{"location":"Iniciacao/designthinking/#dicas-para-criar-o-documento","title":"Dicas para Criar o Documento","text":"<ul> <li>Use uma linguagem clara e objetiva.</li> <li>Inclua visualiza\u00e7\u00f5es, como mapas de empatia, jornadas do usu\u00e1rio ou esbo\u00e7os de ideias.</li> <li>Adapte o documento conforme o est\u00e1gio do projeto (ex.: um documento inicial pode focar mais na pesquisa, enquanto um final pode detalhar a solu\u00e7\u00e3o).</li> </ul> <p>Esse modelo \u00e9 flex\u00edvel e pode ser ajustado conforme as necessidades do seu projeto ou da sua equipe. O importante \u00e9 que o documento reflita o processo colaborativo e iterativo do Design Thinking.</p>"},{"location":"Iniciacao/doc_template/","title":"Modelo de Documento","text":""},{"location":"Iniciacao/doc_template/#introducao","title":"Introdu\u00e7\u00e3o","text":""},{"location":"Iniciacao/doc_template/#metodologia","title":"Metodologia","text":""},{"location":"Iniciacao/doc_template/#desenvolvimento-renomeie-este-topico","title":"Desenvolvimento (Renomeie este t\u00f3pico)","text":""},{"location":"Iniciacao/doc_template/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/doc_template/#conclusao","title":"Conclus\u00e3o","text":""},{"location":"Iniciacao/doc_template/#referencias","title":"Refer\u00eancias","text":""},{"location":"Iniciacao/doc_template/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/aa 1.0 Cria\u00e7\u00e3o do documento Autores"},{"location":"Iniciacao/documento_de_visao/","title":"Documento de Vis\u00e3o","text":""},{"location":"Iniciacao/documento_de_visao/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> O prop\u00f3sito deste documento \u00e9 fornecer uma vis\u00e3o geral sobre o projeto que ser\u00e1 realizado na disciplina Arquitetura e Desenho de Software 2020/1, na Universidade de Bras\u00edlia. Sendo assim, Nesse documento ser\u00e3o descritas de maneira resumida as principais funcionalidades, usabilidades, o problema que ser\u00e1 abordado e os objetivos da equipe. </p>"},{"location":"Iniciacao/documento_de_visao/#descricao-do-problema","title":"Descri\u00e7\u00e3o do Problema","text":"<p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. </p>"},{"location":"Iniciacao/documento_de_visao/#problema","title":"Problema","text":"<p>Dificuldade em gerenciar e organizar...</p>"},{"location":"Iniciacao/documento_de_visao/#impactados","title":"Impactados","text":"<p>Usu\u00e1rios....</p>"},{"location":"Iniciacao/documento_de_visao/#consequencia","title":"Consequ\u00eancia","text":"<p>A cria\u00e7\u00e3o de novos....</p>"},{"location":"Iniciacao/documento_de_visao/#solucao","title":"Solu\u00e7\u00e3o","text":"<p>Utilizar a aplica\u00e7\u00e3o que ser\u00e1 desenvolvida visando resolver...</p>"},{"location":"Iniciacao/documento_de_visao/#objetivos","title":"Objetivos","text":"<p> O objetivo da equipe de desenvolvimento \u00e9 fornecer... </p>"},{"location":"Iniciacao/documento_de_visao/#descricao-do-usuario","title":"Descri\u00e7\u00e3o do Usu\u00e1rio","text":"<p> Os usu\u00e1rios ser\u00e3o.... </p>"},{"location":"Iniciacao/documento_de_visao/#recursos-do-produto","title":"Recursos do produto","text":""},{"location":"Iniciacao/documento_de_visao/#conta","title":"Conta","text":"<p> O cliente poder\u00e1 realizar seu cadastro.... </p>"},{"location":"Iniciacao/documento_de_visao/#loja","title":"Loja","text":"<p> O cliente poder\u00e1 cadastrar uma loja \u00fanica.... </p>"},{"location":"Iniciacao/documento_de_visao/#produto","title":"Produto","text":"<p> O cliente poder\u00e1 cadastrar.... </p>"},{"location":"Iniciacao/documento_de_visao/#pesquisa-sobre-lojas","title":"Pesquisa sobre Lojas","text":"<p> O cliente poder\u00e1 pesquisar... </p>"},{"location":"Iniciacao/documento_de_visao/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p> A aplica\u00e7\u00e3o n\u00e3o ser\u00e1 respons\u00e1vel... </p>"},{"location":"Iniciacao/documento_de_visao/#referencias-bibliograficas","title":"Refer\u00eancias Bibliogr\u00e1ficas","text":"<p>Documento de vis\u00e3o. Dispon\u00edvel em https://www... Acesso em dd/MM/yyYY</p> <p>Documento de vis\u00e3o. Dispon\u00edvel em  Acesso em dd/MM/yyYY</p>"},{"location":"Iniciacao/documento_de_visao/#versionamento","title":"Versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) DD/MM/YYYY 1.0 Cria\u00e7\u00e3o do documento XXX XXXX e ZZZ ZZZZ"},{"location":"Iniciacao/mapa_mental/","title":"Mapas Mentais","text":""},{"location":"Iniciacao/mapa_mental/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> Mapa mental consiste em criar resumos cheios de s\u00edmbolos, cores, setas e frases de efeito com o objetivo de organizar o conte\u00fado e facilitar associa\u00e7\u00f5es entre as informa\u00e7\u00f5es destacadas. Esse material \u00e9 muito indicado para pessoas que t\u00eam facilidade de aprender de forma visual. </p>"},{"location":"Iniciacao/mapa_mental/#metodologia","title":"Metodologia","text":"<p> Foi levantado um ponto importante sobre o app e, assim, foi produzido o mapa mental. O documento foi produzido utilizando a ferramenta... </p>"},{"location":"Iniciacao/mapa_mental/#mapa-mental-geral","title":"Mapa mental - Geral.","text":""},{"location":"Iniciacao/mapa_mental/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/mapa_mental/#mapa-mental-1","title":"Mapa mental 1","text":""},{"location":"Iniciacao/mapa_mental/#mapa-mental-2","title":"Mapa mental 2","text":""},{"location":"Iniciacao/mapa_mental/#conclusao","title":"Conclus\u00e3o","text":"<p> O mapa mental \u00e9 uma ficha de estudos que ajuda a dar uma vis\u00e3o geral do tema, e ajuda a fixar os pontos mais importantes sobre o app. </p>"},{"location":"Iniciacao/mapa_mental/#referencias","title":"Refer\u00eancias","text":"<p>Mapa MentalXXX,  Dispon\u00edvel em: https://www.....</p> <p>Ferramentas para Mapas Mentais. Dispon\u00edvel em: https://www....</p> <p>Plataforma para usu\u00e1rios colaborar no desenho... Dispon\u00edvel em: https://...</p>"},{"location":"Iniciacao/mapa_mental/#versionamento","title":"Versionamento","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) dd/mm/yy 1.0 Cria\u00e7\u00e3o do documento xxx xxxx dd/mm/yy 2.0 Adicionado Mapa mental 2 xxxx xxxx"},{"location":"Iniciacao/metodologia/","title":"Metodologia","text":""},{"location":"Iniciacao/metodologia/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A metodologia pode ser definida como a sistematiza\u00e7\u00e3o de m\u00e9todos e t\u00e9cnicas com o intuito de se alcan\u00e7ar um objetivo. Este documento aborda os m\u00e9todos e t\u00e9cnica de metodologias, processos e pr\u00e1ticas (Scrum, XP, Kanban, RUP) de acordo com o objetivo da equipe e da disciplina. </p>"},{"location":"Iniciacao/metodologia/#metodologia","title":"Metodologia","text":"<p>A equipe utiliza v\u00e1rios m\u00e9todos e t\u00e9cnicas de diversas metodologias, processos e pr\u00e1ticas, para o desenvolvimento. Com o estudo e  experi\u00eancia da equipe sobre as metodologias \u00e1geis, foi poss\u00edvel identificar aspectos das diversas metodologias, que a equipe utiliza para o desenvolvimento do projeto.</p> <p>Metodologias, processos e pr\u00e1ticas identificados:</p> <ul> <li> <p>RUP/UP:<p> RUP/UP \u00e9 uma metodologia.... </p></p> </li> <li> <p>POO (OOP Oriented Object Programming):<p> POO (OOP) \u00e9 uma... </p></p> </li> <li> <p>RUP (Rational Unified Process):<p> O Rational Unified Process \u00e9 um Processo de Engenharia de Software. Ele fornece....</p> <p>  - [Kanban](https://www...):</p> <p>O sistema kanban \u00e9 uma metodologia \u00e1gil....</p> <p>   ## Metodologias de desenvolvimento:  ### Vers\u00e3o 1.0  ### RUP (Rational Unified Process)  #### Pr\u00e1ticas:  - **Desenvolvimento iterativo**: A abordagem iterativa \u00e9 necess\u00e1ria para....  - **Verifica\u00e7\u00e3o da qualidade de software**: A qualidade deve ser revista com respeito aos requisitos com base...   ### Kanban  <p> O Kanban \u00e9 t\u00e9cnica que prop\u00f5e a utiliza\u00e7\u00e3o de cart\u00f5es em um quadro... </p>  - **Lista de Tarefas**: Cont\u00e9m todas as tarefas do projeto. - **Incremento**: Cont\u00e9m as tarefas a serem executadas durante a Sprint. - **Em andamento**: Cont\u00e9m as tarefas que est\u00e3o em andamento. - **Revis\u00e3o**: Cont\u00e9m as tarefas que precisam ser revisadas para conclus\u00e3o. - **Concluido**: Cont\u00e9m as tarefas que j\u00e1 foram revisadas e conclu\u00eddas.   ## Conclus\u00e3o  <p>  Com o estudo das metodologias.....  </p>  ## Refer\u00eancias  &gt; [1] SCRUM, Disponivel em: https://www....  &gt; [2] Sistema Kanban, Disponivel em: https://www...  &gt; [3] Extreme Programming, Disponivel em: http://www...  &gt; [5] Rational Unified Process, Disponivel em: https://www...  &gt; [6] EXTREME PROGRAMMING, Disponivel em: https://www...   ## Autor(es)  | Data | Vers\u00e3o | Descri\u00e7\u00e3o | Autor(es) | | -- | -- | -- | -- | | 05/mm/xx | 1.0 | Cria\u00e7\u00e3o  | xxx xxx e xxxxx xxxxx | | 06/mm/xx | 1.1 | Adicionado  | xxx xxxx e xxxxx xxxx | | 06/mm/XX | 1.2 | Adicionado  | xxx xxxx e xxxxxx xxxxxx | | 06/mm/xx | 1.3 | Adicionado xxxx | xxx xxxx e xxxx xxxxx | | 06/mm/xx | 1.4 | Adicionadoxxxx | xxxx xxxxx e xxxx xxxxx | | mm/mm/xx | 1.5 | Revis\u00e3o do documento | xxxx xxxxx | | mm/mm/xx | 1.6 | Ajuste no topico Scrum | xxxx xxxx e xxxx xxxx |"},{"location":"Iniciacao/pesquisa/","title":"Pesquisa","text":""},{"location":"Iniciacao/pesquisa/#pesquisa_1","title":"Pesquisa","text":""},{"location":"Iniciacao/pesquisa/#pesquisa_2","title":"Pesquisa","text":"<p>Pesquisa realizada para compreens\u00e3o das principais caracter\u00edsticas do Aplicativo de Streaming.</p> <p>Dorothy followed her through many of the beautiful rooms in her castle.</p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/","title":"Prot\u00f3tipo Alta Fidelidade","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A constru\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade auxilia a equipe de desenvolvimento a encontrar um n\u00edvel de detalhes abrangentes, extrair funcionalidades, testar usabilidade, e tamb\u00e9m fornece uma base para o gerenciamento do projeto pois com o prot\u00f3tipo \u00e9 poss\u00edvel realizar estimativas de quanto tempo ser\u00e1 necess\u00e1rio desempenhar em cada funcionalidade. </p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/#metodologia","title":"Metodologia","text":"<p> Iniciamos o projeto atrav\u00e9s dos levantamentos iniciais da equipe, ap\u00f3s discuss\u00f5es a ferramenta Figma foi selecionada para produzir o prot\u00f3tipo de alta fidelidade com aux\u00edlio do Material Design Color Tool. </p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/#prototipo-de-alta-fidelidade","title":"Prot\u00f3tipo de alta fidelidade","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-login","title":"Tela Login","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastro-1","title":"Tela Cadastro 1","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastro-2","title":"Tela Cadastro 2","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-esqueceu-senha","title":"Tela Esqueceu Senha","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-do-feed","title":"Tela do Feed","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-feed-com-configuracoes","title":"Tela Feed com configura\u00e7\u00f5es","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-perfil","title":"Tela Perfil","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-1","title":"Tela Cadastrar torneio 1","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-2","title":"Tela Cadastrar torneio 2","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-3","title":"Tela Cadastrar torneio 3","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-4","title":"Tela Cadastrar torneio 4","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-com-meus-torneios","title":"Tela com meus torneios","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-de-inscricao-em-torneio","title":"Tela de inscri\u00e7\u00e3o em torneio","text":"<p> Na primeira vers\u00e3o do prot\u00f3tipo utilizamos a ferramenta Material Design Color Tool  para auxiliar na cria\u00e7\u00e3o da paleta de cores do aplicativo, definimos as cores base do aplicativo mas as cores definidas para as telas 12 e 13 ainda n\u00e3o foram decididas. </p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/#versao-20","title":"Vers\u00e3o 2.0","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#versao-10_1","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-login_1","title":"Tela Login","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastro-1_1","title":"Tela Cadastro 1","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastro-2_1","title":"Tela Cadastro 2","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-esqueceu-senha_1","title":"Tela Esqueceu Senha","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-do-feed_1","title":"Tela do Feed","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-feed-com-configuracoes_1","title":"Tela Feed com configura\u00e7\u00f5es","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-perfil_1","title":"Tela Perfil","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-1_1","title":"Tela Cadastrar torneio 1","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-2_1","title":"Tela Cadastrar torneio 2","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-3_1","title":"Tela Cadastrar torneio 3","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-cadastrar-torneio-4_1","title":"Tela Cadastrar torneio 4","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-com-meus-torneios_1","title":"Tela com meus torneios","text":""},{"location":"Iniciacao/prototipo_alta_fidelidade/#tela-de-inscricao-em-torneio_1","title":"Tela de inscri\u00e7\u00e3o em torneio","text":"<p>link para o <code>&lt;a href=\"https://www.figma.com/file/karoCnQtvMXWHEwdMuhQs0/Prototipo?node-id=0%3A1\"&gt;</code>Prot\u00f3tipo<code>&lt;/a&gt;</code></p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/#conclusao","title":"Conclus\u00e3o","text":"<p> A partir da elabora\u00e7\u00e3o do prot\u00f3tipo foi poss\u00edvel ter uma no\u00e7\u00e3o inicial da interface do usu\u00e1rio, definindo fluxo, paleta de cores, bot\u00f5es, app bars e diversas outras funcionalidades </p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/#referencias","title":"Refer\u00eancias","text":"<p>Material Design Color Tool. Dispon\u00edvel em:  https://material.io/resources/color/#!/?view.left=0&amp;view.right=0</p> <p>PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK\u00ae 5a. ed. EUA: Project Management Institute, 2013.</p> <p>Ferramenta Figma. Dispon\u00edvel em https://www.figma.com</p>"},{"location":"Iniciacao/prototipo_alta_fidelidade/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 07/09/20 1.0 Cria\u00e7\u00e3o do documento Lucas Alexandre e Matheus Estanislau 07/09/20 1.1 Adicionado as imagens do prot\u00f3tipo Lucas Alexandre e Matheus Estanislau 07/09/20 1.2 Adicionado conclus\u00e3o e refer\u00eancias Lucas Alexandre e Matheus Estanislau 26/10/20 2.0 Adicionada a vers\u00e3o 2.0 do prot\u00f3tipo Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan"},{"location":"Iniciacao/prototipo_baixa_fidelidade/","title":"Prot\u00f3tipo Baixa Fidelidade","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p> A constru\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade auxilia a equipe de desenvolvimento a encontrar um n\u00edvel de detalhes abrangentes, extrair funcionalidades, testar usabilidade, e tamb\u00e9m fornece uma base para o gerenciamento do projeto pois com o prot\u00f3tipo \u00e9 poss\u00edvel realizar estimativas de quanto tempo ser\u00e1 necess\u00e1rio desempenhar em cada funcionalidade. </p>"},{"location":"Iniciacao/prototipo_baixa_fidelidade/#metodologia","title":"Metodologia","text":"<p> Iniciamos o projeto atrav\u00e9s dos levantamentos iniciais da equipe, ap\u00f3s discuss\u00f5es a ferramenta Figma foi selecionada para produzir o prot\u00f3tipo de alta fidelidade com aux\u00edlio do Material Design Color Tool. </p>"},{"location":"Iniciacao/prototipo_baixa_fidelidade/#prototipo-de-alta-fidelidade","title":"Prot\u00f3tipo de alta fidelidade","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#versao-10","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-login","title":"Tela Login","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastro-1","title":"Tela Cadastro 1","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastro-2","title":"Tela Cadastro 2","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-esqueceu-senha","title":"Tela Esqueceu Senha","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-do-feed","title":"Tela do Feed","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-feed-com-configuracoes","title":"Tela Feed com configura\u00e7\u00f5es","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-perfil","title":"Tela Perfil","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-1","title":"Tela Cadastrar torneio 1","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-2","title":"Tela Cadastrar torneio 2","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-3","title":"Tela Cadastrar torneio 3","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-4","title":"Tela Cadastrar torneio 4","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-com-meus-torneios","title":"Tela com meus torneios","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-de-inscricao-em-torneio","title":"Tela de inscri\u00e7\u00e3o em torneio","text":"<p> Na primeira vers\u00e3o do prot\u00f3tipo utilizamos a ferramenta Material Design Color Tool  para auxiliar na cria\u00e7\u00e3o da paleta de cores do aplicativo, definimos as cores base do aplicativo mas as cores definidas para as telas 12 e 13 ainda n\u00e3o foram decididas. </p>"},{"location":"Iniciacao/prototipo_baixa_fidelidade/#versao-20","title":"Vers\u00e3o 2.0","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#versao-10_1","title":"Vers\u00e3o 1.0","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-login_1","title":"Tela Login","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastro-1_1","title":"Tela Cadastro 1","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastro-2_1","title":"Tela Cadastro 2","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-esqueceu-senha_1","title":"Tela Esqueceu Senha","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-do-feed_1","title":"Tela do Feed","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-feed-com-configuracoes_1","title":"Tela Feed com configura\u00e7\u00f5es","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-perfil_1","title":"Tela Perfil","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-1_1","title":"Tela Cadastrar torneio 1","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-2_1","title":"Tela Cadastrar torneio 2","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-3_1","title":"Tela Cadastrar torneio 3","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-cadastrar-torneio-4_1","title":"Tela Cadastrar torneio 4","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-com-meus-torneios_1","title":"Tela com meus torneios","text":""},{"location":"Iniciacao/prototipo_baixa_fidelidade/#tela-de-inscricao-em-torneio_1","title":"Tela de inscri\u00e7\u00e3o em torneio","text":"<p>link para o <code>&lt;a href=\"https://www.figma.com/\"&gt;</code>Prot\u00f3tipo<code>&lt;/a&gt;</code></p>"},{"location":"Iniciacao/prototipo_baixa_fidelidade/#conclusao","title":"Conclus\u00e3o","text":"<p> A partir da elabora\u00e7\u00e3o do prot\u00f3tipo foi poss\u00edvel ter uma no\u00e7\u00e3o inicial da interface do usu\u00e1rio, definindo fluxo, paleta de cores, bot\u00f5es, app bars e diversas outras funcionalidades </p>"},{"location":"Iniciacao/prototipo_baixa_fidelidade/#referencias","title":"Refer\u00eancias","text":"<p>Material Design Color Tool. Dispon\u00edvel em:  https://material.io/resources/color/#!/?view.left=0&amp;view.right=0</p> <p>PMI. Um guia do conhecimento em gerenciamento de projetos. Guia PMBOK\u00ae 5a. ed. EUA: Project Management Institute, 2013.</p> <p>Ferramenta Figma. Dispon\u00edvel em https://www.figma.com</p>"},{"location":"Iniciacao/prototipo_baixa_fidelidade/#autores","title":"Autor(es)","text":"Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 07/09/20 1.0 Cria\u00e7\u00e3o do documento Lucas Alexandre e Matheus Estanislau 07/09/20 1.1 Adicionado as imagens do prot\u00f3tipo Lucas Alexandre e Matheus Estanislau 07/09/20 1.2 Adicionado conclus\u00e3o e refer\u00eancias Lucas Alexandre e Matheus Estanislau 26/10/20 2.0 Adicionada a vers\u00e3o 2.0 do prot\u00f3tipo Jo\u00e3o Pedro, Lucas Alexandre, Matheus Estanislau, Moacir Mascarenha e Renan Cristyan"},{"location":"Itera%C3%A7%C3%A3o/interacao1/","title":"Itera\u00e7\u00e3o 1 (15/08/24 \u00e0 28/08/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao1/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao1/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao1/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao1/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao2/","title":"Itera\u00e7\u00e3o 2 (29/09/24 \u00e0 11/09/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao2/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao2/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao2/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao2/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao3/","title":"Itera\u00e7\u00e3o 3 (12/09/24 \u00e0 25/09/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao3/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao3/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao3/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao3/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao4/","title":"Itera\u00e7\u00e3o 4 (26/09/24 \u00e0 09/10/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao4/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao4/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao4/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao4/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao5/","title":"Itera\u00e7\u00e3o 5 (10/10/24 \u00e0 23/10/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao5/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao5/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao5/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao5/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao6/","title":"Itera\u00e7\u00e3o 6 (24/10/24 \u00e0 06/11/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao6/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao6/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao6/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao6/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao7/","title":"Itera\u00e7\u00e3o 7 (07/11/24 \u00e0 20/10/2024)","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#planejamento-de-iteracao","title":"Planejamento de Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#presentes-na-reuniao-xxxxx","title":"Presentes na reuni\u00e3o: XXXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#lista-de-tarefas-da-iteracao","title":"Lista de Tarefas da Itera\u00e7\u00e3o","text":"Tarefa Responsabilidade Decidir o nome o projeto. Todos Criar o reposit\u00f3rio nos padr\u00f5es (Organizar wiki). Matheus Criar issues no GitHub / ZenHub Renan Configura\u00e7\u00e3o do grupo do Telegram(configurar bot). Moacir Estudar e escolher as metodologias. Todos Documento de vis\u00e3o XXX e XXXXX Elaborar5w2H XXX e XXXXX Mapas Mentais XXX e XXXXX Brainstorming Todos Entrevistas XXX e XXXXX Prototipa\u00e7\u00e3o. XXX e XXXXX"},{"location":"Itera%C3%A7%C3%A3o/interacao7/#sprint-retrospectivereview-meeting","title":"Sprint Retrospective/Review Meeting","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#presentes-na-reuniao-xxxx","title":"Presentes na reuni\u00e3o: XXXX","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#dividas-da-iteracao","title":"Dividas da Itera\u00e7\u00e3o","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#riscos-encontrados","title":"Riscos Encontrados","text":"<ul> <li>Nenhum: Plano de gerenciamento de riscos n\u00e3o implementado.</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao7/#pontos-positivos","title":"Pontos Positivos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#pontos-negativos","title":"Pontos Negativos","text":""},{"location":"Itera%C3%A7%C3%A3o/interacao7/#o-que-podemos-melhorar","title":"O que podemos melhorar?","text":"<ul> <li>Ter mais foco na reuni\u00f5es para evitar o desperd\u00edcio de tempo.</li> <li>A equipe deve ter mais autonomia em rela\u00e7\u00e3o \u00e0 falta de membros.</li> <li>Podemos utilizar algo ferramenta de timebox para maior efetividade nas reuni\u00f5es, sugest\u00e3o: https://timebox.cedrotech.com/</li> </ul>"},{"location":"Itera%C3%A7%C3%A3o/interacao7/#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":"<ul> <li>Reuni\u00e3o: Hangouts</li> <li>Colheita dos pontos: Mentimeter</li> </ul>"},{"location":"Transicao/","title":"Transi\u00e7\u00e3o","text":"<p>Objetivo: Entregar o sistema ao ambiente de produ\u00e7\u00e3o e aos usu\u00e1rios finais.</p>"},{"location":"Transicao/#principais-atividades","title":"Principais atividades","text":"<ul> <li> <p>Realizar testes finais de aceita\u00e7\u00e3o.</p> </li> <li> <p>Treinar os usu\u00e1rios.</p> </li> <li> <p>Corrigir defeitos encontrados ap\u00f3s a entrega.</p> </li> <li> <p>Preparar o ambiente de produ\u00e7\u00e3o.</p> </li> <li> <p>Produto principal: Sistema funcionando no ambiente do cliente com usu\u00e1rios treinados.</p> </li> </ul>"}]}